{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Slither",
          "informationUri": "https://github.com/crytic/slither",
          "version": "0.10.1",
          "rules": [
            {
              "id": "0-0-arbitrary-send-erc20",
              "name": "arbitrary-send-erc20",
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0"
              },
              "shortDescription": {
                "text": "Arbitrary `from` in transferFrom"
              },
              "help": {
                "text": "\nUse `msg.sender` as `from` in transferFrom.\n"
              }
            },
            {
              "id": "0-1-arbitrary-send-eth",
              "name": "arbitrary-send-eth",
              "properties": {
                "precision": "high",
                "security-severity": "8.0"
              },
              "shortDescription": {
                "text": "Functions that send Ether to arbitrary destinations"
              },
              "help": {
                "text": "Ensure that an arbitrary user cannot withdraw unauthorized funds."
              }
            },
            {
              "id": "0-1-reentrancy-eth",
              "name": "reentrancy-eth",
              "properties": {
                "precision": "high",
                "security-severity": "8.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions pattern`](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "0-0-uninitialized-state",
              "name": "uninitialized-state",
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0"
              },
              "shortDescription": {
                "text": "Uninitialized state variables"
              },
              "help": {
                "text": "\nInitialize all the variables. If a variable is meant to be initialized to zero, explicitly set it to zero to improve code readability.\n"
              }
            },
            {
              "id": "1-1-divide-before-multiply",
              "name": "divide-before-multiply",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Divide before multiply"
              },
              "help": {
                "text": "Consider ordering multiplication before division."
              }
            },
            {
              "id": "1-0-incorrect-equality",
              "name": "incorrect-equality",
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Dangerous strict equalities"
              },
              "help": {
                "text": "Don't use strict equality to determine if an account has enough Ether or tokens."
              }
            },
            {
              "id": "1-1-reentrancy-no-eth",
              "name": "reentrancy-no-eth",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "1-1-uninitialized-local",
              "name": "uninitialized-local",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Uninitialized local variables"
              },
              "help": {
                "text": "Initialize all the variables. If a variable is meant to be initialized to zero, explicitly set it to zero to improve code readability."
              }
            },
            {
              "id": "1-1-unused-return",
              "name": "unused-return",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Unused return"
              },
              "help": {
                "text": "Ensure that all the return values of the function calls are used."
              }
            },
            {
              "id": "1-0-write-after-write",
              "name": "write-after-write",
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Write after write"
              },
              "help": {
                "text": "Fix or remove the writes."
              }
            },
            {
              "id": "2-1-events-access",
              "name": "events-access",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Missing events access control"
              },
              "help": {
                "text": "Emit an event for critical parameter changes."
              }
            },
            {
              "id": "2-1-events-maths",
              "name": "events-maths",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Missing events arithmetic"
              },
              "help": {
                "text": "Emit an event for critical parameter changes."
              }
            },
            {
              "id": "2-1-missing-zero-check",
              "name": "missing-zero-check",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Missing zero address validation"
              },
              "help": {
                "text": "Check that the address is not zero."
              }
            },
            {
              "id": "2-1-calls-loop",
              "name": "calls-loop",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Calls inside a loop"
              },
              "help": {
                "text": "Favor [pull over push](https://github.com/ethereum/wiki/wiki/Safety#favor-pull-over-push-for-external-calls) strategy for external calls."
              }
            },
            {
              "id": "2-1-reentrancy-benign",
              "name": "reentrancy-benign",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "2-1-reentrancy-events",
              "name": "reentrancy-events",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](https://docs.soliditylang.org/en/latest/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "2-1-timestamp",
              "name": "timestamp",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Block timestamp"
              },
              "help": {
                "text": "Avoid relying on `block.timestamp`."
              }
            },
            {
              "id": "3-0-assembly",
              "name": "assembly",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Assembly usage"
              },
              "help": {
                "text": "Do not use `evm` assembly."
              }
            },
            {
              "id": "3-0-boolean-equal",
              "name": "boolean-equal",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Boolean equality"
              },
              "help": {
                "text": "Remove the equality to the boolean constant."
              }
            },
            {
              "id": "3-0-cyclomatic-complexity",
              "name": "cyclomatic-complexity",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Cyclomatic complexity"
              },
              "help": {
                "text": "Reduce cyclomatic complexity by splitting the function into several smaller subroutines."
              }
            },
            {
              "id": "3-1-dead-code",
              "name": "dead-code",
              "properties": {
                "precision": "high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Dead-code"
              },
              "help": {
                "text": "Remove unused functions."
              }
            },
            {
              "id": "3-0-solc-version",
              "name": "solc-version",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Incorrect versions of Solidity"
              },
              "help": {
                "text": "\nDeploy with any of the following Solidity versions:\n- 0.8.18\n\nThe recommendations take into account:\n- Risks related to recent releases\n- Risks of complex code generation changes\n- Risks of new language features\n- Risks of known bugs\n\nUse a simple pragma version that allows any of these versions.\nConsider using the latest version of Solidity for testing."
              }
            },
            {
              "id": "3-0-low-level-calls",
              "name": "low-level-calls",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Low-level calls"
              },
              "help": {
                "text": "Avoid low-level calls. Check the call success. If the call is meant for a contract, check for code existence."
              }
            },
            {
              "id": "3-0-missing-inheritance",
              "name": "missing-inheritance",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Missing inheritance"
              },
              "help": {
                "text": "Inherit from the missing interface or contract."
              }
            },
            {
              "id": "3-0-naming-convention",
              "name": "naming-convention",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Conformance to Solidity naming conventions"
              },
              "help": {
                "text": "Follow the Solidity [naming convention](https://solidity.readthedocs.io/en/v0.4.25/style-guide.html#naming-conventions)."
              }
            },
            {
              "id": "3-1-similar-names",
              "name": "similar-names",
              "properties": {
                "precision": "high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Variable names too similar"
              },
              "help": {
                "text": "Prevent variables from having similar names."
              }
            },
            {
              "id": "3-0-unused-state",
              "name": "unused-state",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Unused state variable"
              },
              "help": {
                "text": "Remove unused state variables."
              }
            },
            {
              "id": "4-0-constable-states",
              "name": "constable-states",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "State variables that could be declared constant"
              },
              "help": {
                "text": "Add the `constant` attribute to state variables that never change."
              }
            },
            {
              "id": "4-0-immutable-states",
              "name": "immutable-states",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "State variables that could be declared immutable"
              },
              "help": {
                "text": "Add the `immutable` attribute to state variables that never change or are set only in the constructor."
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "0-0-arbitrary-send-erc20",
          "message": {
            "text": "VaultV3.requestFunds(address,uint256) (contracts/UniswapV3Vault.sol#268-280) uses arbitrary from in transferFrom: SafeToken.safeTransferFrom(targetedToken,positions[POSITION_ID].owner,msg.sender,amount) (contracts/UniswapV3Vault.sol#272-277)\n",
            "markdown": "[VaultV3.requestFunds(address,uint256)](contracts/UniswapV3Vault.sol#L268-L280) uses arbitrary from in transferFrom: [SafeToken.safeTransferFrom(targetedToken,positions[POSITION_ID].owner,msg.sender,amount)](contracts/UniswapV3Vault.sol#L272-L277)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 268,
                  "endLine": 280
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "018f7eccf5b0873ebda20c30ef4559a2e97374d025ef2d6626ee18695d38d81c"
          }
        },
        {
          "ruleId": "0-0-arbitrary-send-erc20",
          "message": {
            "text": "BeneficialVaultTest.requestFunds(address,uint256) (contracts/tests/BeneficialVaultTest.sol#17-19) uses arbitrary from in transferFrom: SafeToken.safeTransferFrom(targetedToken,user,msg.sender,amount) (contracts/tests/BeneficialVaultTest.sol#18)\n",
            "markdown": "[BeneficialVaultTest.requestFunds(address,uint256)](contracts/tests/BeneficialVaultTest.sol#L17-L19) uses arbitrary from in transferFrom: [SafeToken.safeTransferFrom(targetedToken,user,msg.sender,amount)](contracts/tests/BeneficialVaultTest.sol#L18)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 19
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eb6876137eac86e9474a83cad3e80e48b405c658a9fe6a5a4d0df62851fe3753"
          }
        },
        {
          "ruleId": "0-1-arbitrary-send-eth",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) sends eth to arbitrary user\n\tDangerous calls:\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) sends eth to arbitrary user\n\tDangerous calls:\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4da7cbbfb9233e649fa838e8045fcac4f7a2dd2783d7d099ef0dc37ddaa00536"
          }
        },
        {
          "ruleId": "0-1-arbitrary-send-eth",
          "message": {
            "text": "CustomPortfolio._returnToken(IPortfolioConfig,ISwapRouter,address,address,address[]) (contracts/portfolio/CustomPortfolio.sol#401-447) sends eth to arbitrary user\n\tDangerous calls:\n\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n",
            "markdown": "[CustomPortfolio._returnToken(IPortfolioConfig,ISwapRouter,address,address,address[])](contracts/portfolio/CustomPortfolio.sol#L401-L447) sends eth to arbitrary user\n\tDangerous calls:\n\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 401,
                  "endLine": 447
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6269f490c853bc117f1caebf84269cf79fe6215ebe54bb7b3533ccdee4b10795"
          }
        },
        {
          "ruleId": "0-1-arbitrary-send-eth",
          "message": {
            "text": "WNativeRelayer.withdraw(uint256) (contracts/WNativeRelayer.sol#39-48) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = msg.sender.call{value: _amount}() (contracts/WNativeRelayer.sol#43)\n",
            "markdown": "[WNativeRelayer.withdraw(uint256)](contracts/WNativeRelayer.sol#L39-L48) sends eth to arbitrary user\n\tDangerous calls:\n\t- [(success) = msg.sender.call{value: _amount}()](contracts/WNativeRelayer.sol#L43)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 48
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c4af96890575bad4270d81a41833ffcd3607ee446ed98e74ce6706de3bf4c20d"
          }
        },
        {
          "ruleId": "0-1-reentrancy-eth",
          "message": {
            "text": "Reentrancy in DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167):\n\tExternal calls:\n\t- vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0))) (contracts/portfolio/DynamicPortfolio.sol#71-81)\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\t- _swap(router,config,vaultToken,_token,balance,address(this)) (contracts/portfolio/DynamicPortfolio.sol#102-109)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- token.safeTransfer(msg.sender,rebalanceFee) (contracts/portfolio/DynamicPortfolio.sol#119)\n\t- farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this)) (contracts/portfolio/DynamicPortfolio.sol#135-142)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount) (contracts/portfolio/DynamicPortfolio.sol#144)\n\t- vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0))) (contracts/portfolio/DynamicPortfolio.sol#146-153)\n\t- _pendingToken = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/DynamicPortfolio.sol#157-163)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\tExternal calls sending eth:\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\t- _pendingToken = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/DynamicPortfolio.sol#157-163)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\tState variables written after the call(s):\n\t- pendingToken = _pendingToken (contracts/portfolio/DynamicPortfolio.sol#164)\n\tDynamicPortfolio.pendingToken (contracts/portfolio/DynamicPortfolio.sol#14) can be used in cross function reentrancies:\n\t- DynamicPortfolio._actualBalance(address) (contracts/portfolio/DynamicPortfolio.sol#192-200)\n\t- DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167)\n",
            "markdown": "Reentrancy in [DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167):\n\tExternal calls:\n\t- [vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0)))](contracts/portfolio/DynamicPortfolio.sol#L71-L81)\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\t- [_swap(router,config,vaultToken,_token,balance,address(this))](contracts/portfolio/DynamicPortfolio.sol#L102-L109)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [token.safeTransfer(msg.sender,rebalanceFee)](contracts/portfolio/DynamicPortfolio.sol#L119)\n\t- [farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this))](contracts/portfolio/DynamicPortfolio.sol#L135-L142)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount)](contracts/portfolio/DynamicPortfolio.sol#L144)\n\t- [vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0)))](contracts/portfolio/DynamicPortfolio.sol#L146-L153)\n\t- [_pendingToken = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/DynamicPortfolio.sol#L157-L163)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\tExternal calls sending eth:\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\t- [_pendingToken = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/DynamicPortfolio.sol#L157-L163)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\tState variables written after the call(s):\n\t- [pendingToken = _pendingToken](contracts/portfolio/DynamicPortfolio.sol#L164)\n\t[DynamicPortfolio.pendingToken](contracts/portfolio/DynamicPortfolio.sol#L14) can be used in cross function reentrancies:\n\t- [DynamicPortfolio._actualBalance(address)](contracts/portfolio/DynamicPortfolio.sol#L192-L200)\n\t- [DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "506f19bf401f32fb3e31206137fe1776c7a570197a3bbda4a07e46003c70b0d2"
          }
        },
        {
          "ruleId": "0-1-reentrancy-eth",
          "message": {
            "text": "Reentrancy in VaultV3.work(uint256,address,uint256,uint256,uint256,bytes) (contracts/UniswapV3Vault.sol#377-473):\n\tExternal calls:\n\t- SafeToken.safeTransfer(token,farm,sendBalance) (contracts/UniswapV3Vault.sol#429)\n\t- liquidityChanged = IFarmUniswapV3(farm).work(id,msg.sender,debt,data) (contracts/UniswapV3Vault.sol#430-435)\n\t- onlyEOAorWhitelisted() (contracts/UniswapV3Vault.sol#387)\n\t\t- require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller) (contracts/UniswapV3Vault.sol#95-98)\n\t\t- ! config.whitelistedCallers(msg.sender) (contracts/UniswapV3Vault.sol#99)\n\t- transferTokenToVault(principalAmount) (contracts/UniswapV3Vault.sol#389)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- SafeToken.safeTransferFrom(token,msg.sender,address(this),value) (contracts/UniswapV3Vault.sol#136)\n\tExternal calls sending eth:\n\t- transferTokenToVault(principalAmount) (contracts/UniswapV3Vault.sol#389)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\tState variables written after the call(s):\n\t- _addDebt(id,debt) (contracts/UniswapV3Vault.sol#450)\n\t\t- pos.debtShare = pos.debtShare + debtShare (contracts/UniswapV3Vault.sol#529)\n\tVaultV3.positions (contracts/UniswapV3Vault.sol#83) can be used in cross function reentrancies:\n\t- VaultV3.positionInfo(uint256) (contracts/UniswapV3Vault.sol#214-223)\n\t- VaultV3.positions (contracts/UniswapV3Vault.sol#83)\n\t- VaultV3.requestFunds(address,uint256) (contracts/UniswapV3Vault.sol#268-280)\n\t- _addDebt(id,debt) (contracts/UniswapV3Vault.sol#450)\n\t\t- vaultDebtShare = vaultDebtShare + debtShare (contracts/UniswapV3Vault.sol#530)\n\tVaultV3.vaultDebtShare (contracts/UniswapV3Vault.sol#86) can be used in cross function reentrancies:\n\t- VaultV3.debtShareToVal(uint256) (contracts/UniswapV3Vault.sol#200-203)\n\t- VaultV3.debtValToShare(uint256) (contracts/UniswapV3Vault.sol#207-210)\n\t- VaultV3.vaultDebtShare (contracts/UniswapV3Vault.sol#86)\n\t- _addDebt(id,debt) (contracts/UniswapV3Vault.sol#450)\n\t\t- vaultDebtVal = vaultDebtVal + debtVal (contracts/UniswapV3Vault.sol#531)\n\tVaultV3.vaultDebtVal (contracts/UniswapV3Vault.sol#87) can be used in cross function reentrancies:\n\t- VaultV3.debtShareToVal(uint256) (contracts/UniswapV3Vault.sol#200-203)\n\t- VaultV3.debtValToShare(uint256) (contracts/UniswapV3Vault.sol#207-210)\n\t- VaultV3.pendingInterest(uint256) (contracts/UniswapV3Vault.sol#187-196)\n\t- VaultV3.totalToken() (contracts/UniswapV3Vault.sol#226-228)\n\t- VaultV3.vaultDebtVal (contracts/UniswapV3Vault.sol#87)\n",
            "markdown": "Reentrancy in [VaultV3.work(uint256,address,uint256,uint256,uint256,bytes)](contracts/UniswapV3Vault.sol#L377-L473):\n\tExternal calls:\n\t- [SafeToken.safeTransfer(token,farm,sendBalance)](contracts/UniswapV3Vault.sol#L429)\n\t- [liquidityChanged = IFarmUniswapV3(farm).work(id,msg.sender,debt,data)](contracts/UniswapV3Vault.sol#L430-L435)\n\t- [onlyEOAorWhitelisted()](contracts/UniswapV3Vault.sol#L387)\n\t\t- [require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller)](contracts/UniswapV3Vault.sol#L95-L98)\n\t\t- [! config.whitelistedCallers(msg.sender)](contracts/UniswapV3Vault.sol#L99)\n\t- [transferTokenToVault(principalAmount)](contracts/UniswapV3Vault.sol#L389)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [SafeToken.safeTransferFrom(token,msg.sender,address(this),value)](contracts/UniswapV3Vault.sol#L136)\n\tExternal calls sending eth:\n\t- [transferTokenToVault(principalAmount)](contracts/UniswapV3Vault.sol#L389)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\tState variables written after the call(s):\n\t- [_addDebt(id,debt)](contracts/UniswapV3Vault.sol#L450)\n\t\t- [pos.debtShare = pos.debtShare + debtShare](contracts/UniswapV3Vault.sol#L529)\n\t[VaultV3.positions](contracts/UniswapV3Vault.sol#L83) can be used in cross function reentrancies:\n\t- [VaultV3.positionInfo(uint256)](contracts/UniswapV3Vault.sol#L214-L223)\n\t- [VaultV3.positions](contracts/UniswapV3Vault.sol#L83)\n\t- [VaultV3.requestFunds(address,uint256)](contracts/UniswapV3Vault.sol#L268-L280)\n\t- [_addDebt(id,debt)](contracts/UniswapV3Vault.sol#L450)\n\t\t- [vaultDebtShare = vaultDebtShare + debtShare](contracts/UniswapV3Vault.sol#L530)\n\t[VaultV3.vaultDebtShare](contracts/UniswapV3Vault.sol#L86) can be used in cross function reentrancies:\n\t- [VaultV3.debtShareToVal(uint256)](contracts/UniswapV3Vault.sol#L200-L203)\n\t- [VaultV3.debtValToShare(uint256)](contracts/UniswapV3Vault.sol#L207-L210)\n\t- [VaultV3.vaultDebtShare](contracts/UniswapV3Vault.sol#L86)\n\t- [_addDebt(id,debt)](contracts/UniswapV3Vault.sol#L450)\n\t\t- [vaultDebtVal = vaultDebtVal + debtVal](contracts/UniswapV3Vault.sol#L531)\n\t[VaultV3.vaultDebtVal](contracts/UniswapV3Vault.sol#L87) can be used in cross function reentrancies:\n\t- [VaultV3.debtShareToVal(uint256)](contracts/UniswapV3Vault.sol#L200-L203)\n\t- [VaultV3.debtValToShare(uint256)](contracts/UniswapV3Vault.sol#L207-L210)\n\t- [VaultV3.pendingInterest(uint256)](contracts/UniswapV3Vault.sol#L187-L196)\n\t- [VaultV3.totalToken()](contracts/UniswapV3Vault.sol#L226-L228)\n\t- [VaultV3.vaultDebtVal](contracts/UniswapV3Vault.sol#L87)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 473
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "650ddb4265525c52c71f24f2eb9ce383006e2728dd6c1b65ababbe3cc96cddd4"
          }
        },
        {
          "ruleId": "0-1-reentrancy-eth",
          "message": {
            "text": "Reentrancy in VaultV3.addCollateral(uint256,uint256,bool,bytes) (contracts/UniswapV3Vault.sol#300-368):\n\tExternal calls:\n\t- require(bool,string)(config.approvedAddStrategies(STRATEGY),!approved strat) (contracts/UniswapV3Vault.sol#327)\n\t- SafeToken.safeTransfer(token,farm,amount) (contracts/UniswapV3Vault.sol#336)\n\t- IFarmUniswapV3(farm).work(id,msg.sender,debt,data) (contracts/UniswapV3Vault.sol#337)\n\t- onlyEOAorWhitelisted() (contracts/UniswapV3Vault.sol#308)\n\t\t- require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller) (contracts/UniswapV3Vault.sol#95-98)\n\t\t- ! config.whitelistedCallers(msg.sender) (contracts/UniswapV3Vault.sol#99)\n\t- transferTokenToVault(amount) (contracts/UniswapV3Vault.sol#310)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- SafeToken.safeTransferFrom(token,msg.sender,address(this),value) (contracts/UniswapV3Vault.sol#136)\n\tExternal calls sending eth:\n\t- transferTokenToVault(amount) (contracts/UniswapV3Vault.sol#310)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\tState variables written after the call(s):\n\t- STRATEGY = _NO_ADDRESS (contracts/UniswapV3Vault.sol#360)\n\tVaultV3.STRATEGY (contracts/UniswapV3Vault.sol#66) can be used in cross function reentrancies:\n\t- VaultV3.STRATEGY (contracts/UniswapV3Vault.sol#66)\n\t- VaultV3.inExec() (contracts/UniswapV3Vault.sol#142-149)\n\t- VaultV3.initialize(IVaultConfig,address,string,string) (contracts/UniswapV3Vault.sol#163-183)\n",
            "markdown": "Reentrancy in [VaultV3.addCollateral(uint256,uint256,bool,bytes)](contracts/UniswapV3Vault.sol#L300-L368):\n\tExternal calls:\n\t- [require(bool,string)(config.approvedAddStrategies(STRATEGY),!approved strat)](contracts/UniswapV3Vault.sol#L327)\n\t- [SafeToken.safeTransfer(token,farm,amount)](contracts/UniswapV3Vault.sol#L336)\n\t- [IFarmUniswapV3(farm).work(id,msg.sender,debt,data)](contracts/UniswapV3Vault.sol#L337)\n\t- [onlyEOAorWhitelisted()](contracts/UniswapV3Vault.sol#L308)\n\t\t- [require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller)](contracts/UniswapV3Vault.sol#L95-L98)\n\t\t- [! config.whitelistedCallers(msg.sender)](contracts/UniswapV3Vault.sol#L99)\n\t- [transferTokenToVault(amount)](contracts/UniswapV3Vault.sol#L310)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [SafeToken.safeTransferFrom(token,msg.sender,address(this),value)](contracts/UniswapV3Vault.sol#L136)\n\tExternal calls sending eth:\n\t- [transferTokenToVault(amount)](contracts/UniswapV3Vault.sol#L310)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\tState variables written after the call(s):\n\t- [STRATEGY = _NO_ADDRESS](contracts/UniswapV3Vault.sol#L360)\n\t[VaultV3.STRATEGY](contracts/UniswapV3Vault.sol#L66) can be used in cross function reentrancies:\n\t- [VaultV3.STRATEGY](contracts/UniswapV3Vault.sol#L66)\n\t- [VaultV3.inExec()](contracts/UniswapV3Vault.sol#L142-L149)\n\t- [VaultV3.initialize(IVaultConfig,address,string,string)](contracts/UniswapV3Vault.sol#L163-L183)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 368
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7b03041001793b3da0378ccecc746a53cb6183563b03a1904402f1c9d4b1ed03"
          }
        },
        {
          "ruleId": "0-1-reentrancy-eth",
          "message": {
            "text": "Reentrancy in DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167):\n\tExternal calls:\n\t- vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0))) (contracts/portfolio/DynamicPortfolio.sol#71-81)\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\t- _swap(router,config,vaultToken,_token,balance,address(this)) (contracts/portfolio/DynamicPortfolio.sol#102-109)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- token.safeTransfer(msg.sender,rebalanceFee) (contracts/portfolio/DynamicPortfolio.sol#119)\n\t- farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this)) (contracts/portfolio/DynamicPortfolio.sol#135-142)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount) (contracts/portfolio/DynamicPortfolio.sol#144)\n\t- vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0))) (contracts/portfolio/DynamicPortfolio.sol#146-153)\n\tExternal calls sending eth:\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\tState variables written after the call(s):\n\t- weights[farm] = _weights[i_scope_3] (contracts/portfolio/DynamicPortfolio.sol#126)\n\tCustomPortfolio.weights (contracts/portfolio/CustomPortfolio.sol#44) can be used in cross function reentrancies:\n\t- CustomPortfolio.__CustomPortfolio_init(ICustomPortfolio.PortfolioInitData) (contracts/portfolio/CustomPortfolio.sol#79-132)\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio.positionLiquidies(uint256) (contracts/portfolio/CustomPortfolio.sol#165-190)\n\t- DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167)\n\t- CustomPortfolio.weights (contracts/portfolio/CustomPortfolio.sol#44)\n",
            "markdown": "Reentrancy in [DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167):\n\tExternal calls:\n\t- [vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0)))](contracts/portfolio/DynamicPortfolio.sol#L71-L81)\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\t- [_swap(router,config,vaultToken,_token,balance,address(this))](contracts/portfolio/DynamicPortfolio.sol#L102-L109)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [token.safeTransfer(msg.sender,rebalanceFee)](contracts/portfolio/DynamicPortfolio.sol#L119)\n\t- [farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this))](contracts/portfolio/DynamicPortfolio.sol#L135-L142)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount)](contracts/portfolio/DynamicPortfolio.sol#L144)\n\t- [vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0)))](contracts/portfolio/DynamicPortfolio.sol#L146-L153)\n\tExternal calls sending eth:\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\tState variables written after the call(s):\n\t- [weights[farm] = _weights[i_scope_3]](contracts/portfolio/DynamicPortfolio.sol#L126)\n\t[CustomPortfolio.weights](contracts/portfolio/CustomPortfolio.sol#L44) can be used in cross function reentrancies:\n\t- [CustomPortfolio.__CustomPortfolio_init(ICustomPortfolio.PortfolioInitData)](contracts/portfolio/CustomPortfolio.sol#L79-L132)\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio.positionLiquidies(uint256)](contracts/portfolio/CustomPortfolio.sol#L165-L190)\n\t- [DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167)\n\t- [CustomPortfolio.weights](contracts/portfolio/CustomPortfolio.sol#L44)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cf4401ceb7be475111f1fb89ac5ced5c2a02d6bac05ee8d6319598a3c36ab113"
          }
        },
        {
          "ruleId": "0-1-reentrancy-eth",
          "message": {
            "text": "Reentrancy in CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319):\n\tExternal calls:\n\t- _transferTokenToVault(_token,caller,amount) (contracts/portfolio/CustomPortfolio.sol#233)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\t\t- SafeToken.safeTransferFrom(_token,_user,address(this),_value) (contracts/portfolio/CustomPortfolio.sol#461)\n\t- farmAmount = _swap(router,config,_token,vaultToken,farmAmount,address(this)) (contracts/portfolio/CustomPortfolio.sol#263-270)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t- vaultToken.safeApprove(address(vault),farmAmount) (contracts/portfolio/CustomPortfolio.sol#273)\n\t- (liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i]) (contracts/portfolio/CustomPortfolio.sol#275-282)\n\tExternal calls sending eth:\n\t- _transferTokenToVault(_token,caller,amount) (contracts/portfolio/CustomPortfolio.sol#233)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\tState variables written after the call(s):\n\t- _position.shares[farm] += share (contracts/portfolio/CustomPortfolio.sol#298)\n\tCustomPortfolio._positions (contracts/portfolio/CustomPortfolio.sol#50) can be used in cross function reentrancies:\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio.positions(uint256) (contracts/portfolio/CustomPortfolio.sol#155-163)\n\t- ids[farm] = vault.nextPositionID() (contracts/portfolio/CustomPortfolio.sol#258)\n\tCustomPortfolio.ids (contracts/portfolio/CustomPortfolio.sol#48) can be used in cross function reentrancies:\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio.ids (contracts/portfolio/CustomPortfolio.sol#48)\n\t- CustomPortfolio.portfolioFarmShare(address) (contracts/portfolio/CustomPortfolio.sol#151-153)\n\t- totalShares[farm] += share (contracts/portfolio/CustomPortfolio.sol#299)\n\tCustomPortfolio.totalShares (contracts/portfolio/CustomPortfolio.sol#46) can be used in cross function reentrancies:\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio._liquidityToShare(address,uint256,uint256) (contracts/portfolio/CustomPortfolio.sol#482-490)\n\t- CustomPortfolio.positionLiquidies(uint256) (contracts/portfolio/CustomPortfolio.sol#165-190)\n\t- CustomPortfolio.totalShares (contracts/portfolio/CustomPortfolio.sol#46)\n",
            "markdown": "Reentrancy in [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319):\n\tExternal calls:\n\t- [_transferTokenToVault(_token,caller,amount)](contracts/portfolio/CustomPortfolio.sol#L233)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\t\t- [SafeToken.safeTransferFrom(_token,_user,address(this),_value)](contracts/portfolio/CustomPortfolio.sol#L461)\n\t- [farmAmount = _swap(router,config,_token,vaultToken,farmAmount,address(this))](contracts/portfolio/CustomPortfolio.sol#L263-L270)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t- [vaultToken.safeApprove(address(vault),farmAmount)](contracts/portfolio/CustomPortfolio.sol#L273)\n\t- [(liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i])](contracts/portfolio/CustomPortfolio.sol#L275-L282)\n\tExternal calls sending eth:\n\t- [_transferTokenToVault(_token,caller,amount)](contracts/portfolio/CustomPortfolio.sol#L233)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\tState variables written after the call(s):\n\t- [_position.shares[farm] += share](contracts/portfolio/CustomPortfolio.sol#L298)\n\t[CustomPortfolio._positions](contracts/portfolio/CustomPortfolio.sol#L50) can be used in cross function reentrancies:\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio.positions(uint256)](contracts/portfolio/CustomPortfolio.sol#L155-L163)\n\t- [ids[farm] = vault.nextPositionID()](contracts/portfolio/CustomPortfolio.sol#L258)\n\t[CustomPortfolio.ids](contracts/portfolio/CustomPortfolio.sol#L48) can be used in cross function reentrancies:\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio.ids](contracts/portfolio/CustomPortfolio.sol#L48)\n\t- [CustomPortfolio.portfolioFarmShare(address)](contracts/portfolio/CustomPortfolio.sol#L151-L153)\n\t- [totalShares[farm] += share](contracts/portfolio/CustomPortfolio.sol#L299)\n\t[CustomPortfolio.totalShares](contracts/portfolio/CustomPortfolio.sol#L46) can be used in cross function reentrancies:\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio._liquidityToShare(address,uint256,uint256)](contracts/portfolio/CustomPortfolio.sol#L482-L490)\n\t- [CustomPortfolio.positionLiquidies(uint256)](contracts/portfolio/CustomPortfolio.sol#L165-L190)\n\t- [CustomPortfolio.totalShares](contracts/portfolio/CustomPortfolio.sol#L46)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 319
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f775fc203dae86b070c48def689c8c560f3a02f41b13384d4a1d87fc96e2b6fa"
          }
        },
        {
          "ruleId": "0-0-uninitialized-state",
          "message": {
            "text": "UniswapV3Farm.lastRebalanceTime (contracts/farms/uniswapV3/UniswapV3Farm.sol#72) is never initialized. It is used in:\n\t- UniswapV3Farm.rebalance(int24,int24,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#287-388)\n",
            "markdown": "[UniswapV3Farm.lastRebalanceTime](contracts/farms/uniswapV3/UniswapV3Farm.sol#L72) is never initialized. It is used in:\n\t- [UniswapV3Farm.rebalance(int24,int24,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L287-L388)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2e1f8570f9c1c784ba20d69465cc95944bb14ee00996eac7fcf952a6d9a926f5"
          }
        },
        {
          "ruleId": "0-0-uninitialized-state",
          "message": {
            "text": "DynamicPortfolio.lastRebalanceTime (contracts/portfolio/DynamicPortfolio.sol#16) is never initialized. It is used in:\n\t- DynamicPortfolio._getRebalanceFee(uint256) (contracts/portfolio/DynamicPortfolio.sol#169-190)\n",
            "markdown": "[DynamicPortfolio.lastRebalanceTime](contracts/portfolio/DynamicPortfolio.sol#L16) is never initialized. It is used in:\n\t- [DynamicPortfolio._getRebalanceFee(uint256)](contracts/portfolio/DynamicPortfolio.sol#L169-L190)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f6c82afa6649edad6c95bfae9b754ba3742d35217fd1dd3542eb3ccfc607d928"
          }
        },
        {
          "ruleId": "1-1-divide-before-multiply",
          "message": {
            "text": "UniswapV3FarmConfig.isStable(address) (contracts/farms/UniswapV3FarmConfig.sol#99-129) performs a multiplication on the result of a division:\n\t- lpPrice = (FullMath.mulDiv(sqrtPriceX96 * 1e9,sqrtPriceX96 * 1e9,2 ** 192) * (10 ** IERC20Metadata(token0).decimals())) / (10 ** IERC20Metadata(token1).decimals()) (contracts/farms/UniswapV3FarmConfig.sol#111-116)\n\t- require(bool,string)(lpPrice * 10000 <= price * maxPriceDiff,FarmConfig::isStable:: price too high) (contracts/farms/UniswapV3FarmConfig.sol#119-122)\n",
            "markdown": "[UniswapV3FarmConfig.isStable(address)](contracts/farms/UniswapV3FarmConfig.sol#L99-L129) performs a multiplication on the result of a division:\n\t- [lpPrice = (FullMath.mulDiv(sqrtPriceX96 * 1e9,sqrtPriceX96 * 1e9,2 ** 192) * (10 ** IERC20Metadata(token0).decimals())) / (10 ** IERC20Metadata(token1).decimals())](contracts/farms/UniswapV3FarmConfig.sol#L111-L116)\n\t- [require(bool,string)(lpPrice * 10000 <= price * maxPriceDiff,FarmConfig::isStable:: price too high)](contracts/farms/UniswapV3FarmConfig.sol#L119-L122)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 129
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1142e2b99608011c6017faeeea35153b584992ec6cc5028fe5bb48e00ef6e073"
          }
        },
        {
          "ruleId": "1-1-divide-before-multiply",
          "message": {
            "text": "UniswapV3FarmConfig.isStable(address) (contracts/farms/UniswapV3FarmConfig.sol#99-129) performs a multiplication on the result of a division:\n\t- lpPrice = (FullMath.mulDiv(sqrtPriceX96 * 1e9,sqrtPriceX96 * 1e9,2 ** 192) * (10 ** IERC20Metadata(token0).decimals())) / (10 ** IERC20Metadata(token1).decimals()) (contracts/farms/UniswapV3FarmConfig.sol#111-116)\n\t- require(bool,string)(lpPrice * maxPriceDiff >= price * 10000,FarmConfig::isStable:: price too low) (contracts/farms/UniswapV3FarmConfig.sol#123-126)\n",
            "markdown": "[UniswapV3FarmConfig.isStable(address)](contracts/farms/UniswapV3FarmConfig.sol#L99-L129) performs a multiplication on the result of a division:\n\t- [lpPrice = (FullMath.mulDiv(sqrtPriceX96 * 1e9,sqrtPriceX96 * 1e9,2 ** 192) * (10 ** IERC20Metadata(token0).decimals())) / (10 ** IERC20Metadata(token1).decimals())](contracts/farms/UniswapV3FarmConfig.sol#L111-L116)\n\t- [require(bool,string)(lpPrice * maxPriceDiff >= price * 10000,FarmConfig::isStable:: price too low)](contracts/farms/UniswapV3FarmConfig.sol#L123-L126)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 129
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "592b90f473b45cbd6c6516f3b2c2976e67723a1cdf7877537a3cb199825d4548"
          }
        },
        {
          "ruleId": "1-1-divide-before-multiply",
          "message": {
            "text": "UniswapV3Farm._reinvest(address,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#641-731) performs a multiplication on the result of a division:\n\t- bounty = (reward * (_treasuryBountyBps)) / 10000 (contracts/farms/uniswapV3/UniswapV3Farm.sol#695)\n\t- beneficialVaultBounty = (bounty * (beneficialVaultBountyBps)) / 10000 (contracts/farms/uniswapV3/UniswapV3Farm.sol#699-700)\n",
            "markdown": "[UniswapV3Farm._reinvest(address,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L641-L731) performs a multiplication on the result of a division:\n\t- [bounty = (reward * (_treasuryBountyBps)) / 10000](contracts/farms/uniswapV3/UniswapV3Farm.sol#L695)\n\t- [beneficialVaultBounty = (bounty * (beneficialVaultBountyBps)) / 10000](contracts/farms/uniswapV3/UniswapV3Farm.sol#L699-L700)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 731
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fd963edc6a5c2694266bf7910d471c33560c17bbad3957dbdffe6c9ac675363e"
          }
        },
        {
          "ruleId": "1-0-incorrect-equality",
          "message": {
            "text": "VaultV3.debtValToShare(uint256) (contracts/UniswapV3Vault.sol#207-210) uses a dangerous strict equality:\n\t- vaultDebtShare == 0 (contracts/UniswapV3Vault.sol#208)\n",
            "markdown": "[VaultV3.debtValToShare(uint256)](contracts/UniswapV3Vault.sol#L207-L210) uses a dangerous strict equality:\n\t- [vaultDebtShare == 0](contracts/UniswapV3Vault.sol#L208)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 210
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "374b9238b28a531833a1552c5555e081fff41c59966acc4f82f2b736588ab099"
          }
        },
        {
          "ruleId": "1-0-incorrect-equality",
          "message": {
            "text": "VaultV3._deposit(uint256) (contracts/UniswapV3Vault.sol#245-253) uses a dangerous strict equality:\n\t- total == 0 (contracts/UniswapV3Vault.sol#247-249)\n",
            "markdown": "[VaultV3._deposit(uint256)](contracts/UniswapV3Vault.sol#L245-L253) uses a dangerous strict equality:\n\t- [total == 0](contracts/UniswapV3Vault.sol#L247-L249)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 245,
                  "endLine": 253
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "393d9adda0ec78f542478be85686f8d04c8a0ef9fbbff51e799e682f84da2312"
          }
        },
        {
          "ruleId": "1-0-incorrect-equality",
          "message": {
            "text": "UniswapV3Farm._reinvest(address,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#641-731) uses a dangerous strict equality:\n\t- pendingBaseToken == 0 && pendingFarmingToken == 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#648)\n",
            "markdown": "[UniswapV3Farm._reinvest(address,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L641-L731) uses a dangerous strict equality:\n\t- [pendingBaseToken == 0 && pendingFarmingToken == 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L648)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 731
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3d8cc5471045bad231c7f1366c9e3508df8ccef64f2ab517fb57eca20d86d6ce"
          }
        },
        {
          "ruleId": "1-0-incorrect-equality",
          "message": {
            "text": "UniswapV3Farm._buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#769-782) uses a dangerous strict equality:\n\t- buybackAmount == 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#770)\n",
            "markdown": "[UniswapV3Farm._buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L769-L782) uses a dangerous strict equality:\n\t- [buybackAmount == 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L770)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 769,
                  "endLine": 782
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "74e89de9a01fd56c3eadb8db51ed134551cef1c8b500769c6e3f236e6001bba2"
          }
        },
        {
          "ruleId": "1-0-incorrect-equality",
          "message": {
            "text": "VaultV3.debtShareToVal(uint256) (contracts/UniswapV3Vault.sol#200-203) uses a dangerous strict equality:\n\t- vaultDebtShare == 0 (contracts/UniswapV3Vault.sol#201)\n",
            "markdown": "[VaultV3.debtShareToVal(uint256)](contracts/UniswapV3Vault.sol#L200-L203) uses a dangerous strict equality:\n\t- [vaultDebtShare == 0](contracts/UniswapV3Vault.sol#L201)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 203
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8dbd827301a947275419bc5381b80c3131e3a87952b3c834d330f60eb8ada841"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#538-574):\n\tExternal calls:\n\t- _buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#562)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#773-776)\n\tState variables written after the call(s):\n\t- beneficialVault = _beneficialVault (contracts/farms/uniswapV3/UniswapV3Farm.sol#565)\n\tUniswapV3Farm.beneficialVault (contracts/farms/uniswapV3/UniswapV3Farm.sol#62) can be used in cross function reentrancies:\n\t- UniswapV3Farm._buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#769-782)\n\t- UniswapV3Farm.beneficialVault (contracts/farms/uniswapV3/UniswapV3Farm.sol#62)\n\t- UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#538-574)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L538-L574):\n\tExternal calls:\n\t- [_buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L562)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L773-L776)\n\tState variables written after the call(s):\n\t- [beneficialVault = _beneficialVault](contracts/farms/uniswapV3/UniswapV3Farm.sol#L565)\n\t[UniswapV3Farm.beneficialVault](contracts/farms/uniswapV3/UniswapV3Farm.sol#L62) can be used in cross function reentrancies:\n\t- [UniswapV3Farm._buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L769-L782)\n\t- [UniswapV3Farm.beneficialVault](contracts/farms/uniswapV3/UniswapV3Farm.sol#L62)\n\t- [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L538-L574)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 538,
                  "endLine": 574
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "380f012bb351e40bf284cf56c815c59c6883a71cf1f718c45dde975d7739e2e0"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm._reinvest(address,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#641-731):\n\tExternal calls:\n\t- _collectFee() (contracts/farms/uniswapV3/UniswapV3Farm.sol#647)\n\t\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\t- farmingToken.safeApprove(address(router),pendingFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#676)\n\t- amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#679-690)\n\t- _rewardToBeneficialVault(beneficialVaultBounty) (contracts/farms/uniswapV3/UniswapV3Farm.sol#702)\n\t\t- baseToken.safeApprove(address(router),type()(uint256).max) (contracts/farms/uniswapV3/UniswapV3Farm.sol#795)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#796-804)\n\t\t- beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#806-809)\n\t\t- baseToken.safeApprove(address(router),0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#817)\n\t- baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty)) (contracts/farms/uniswapV3/UniswapV3Farm.sol#704-707)\n\t- baseToken.safeTransfer(address(addStrat),reinvestAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#713)\n\t- positionManager.setApprovalForAll(address(addStrat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#714)\n\t- addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0))) (contracts/farms/uniswapV3/UniswapV3Farm.sol#716-721)\n\tState variables written after the call(s):\n\t- pendingBaseToken = baseToken.myBalance() - buybackAmount (contracts/farms/uniswapV3/UniswapV3Farm.sol#724)\n\tUniswapV3Farm.pendingBaseToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#68) can be used in cross function reentrancies:\n\t- UniswapV3Farm.pendingBaseToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#68)\n\t- pendingFarmingToken = farmingToken.myBalance() (contracts/farms/uniswapV3/UniswapV3Farm.sol#725)\n\tUniswapV3Farm.pendingFarmingToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#69) can be used in cross function reentrancies:\n\t- UniswapV3Farm.pendingFarmingToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#69)\n",
            "markdown": "Reentrancy in [UniswapV3Farm._reinvest(address,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L641-L731):\n\tExternal calls:\n\t- [_collectFee()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L647)\n\t\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\t- [farmingToken.safeApprove(address(router),pendingFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L676)\n\t- [amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L679-L690)\n\t- [_rewardToBeneficialVault(beneficialVaultBounty)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L702)\n\t\t- [baseToken.safeApprove(address(router),type()(uint256).max)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L795)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L796-L804)\n\t\t- [beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L806-L809)\n\t\t- [baseToken.safeApprove(address(router),0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L817)\n\t- [baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L704-L707)\n\t- [baseToken.safeTransfer(address(addStrat),reinvestAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L713)\n\t- [positionManager.setApprovalForAll(address(addStrat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L714)\n\t- [addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0)))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L716-L721)\n\tState variables written after the call(s):\n\t- [pendingBaseToken = baseToken.myBalance() - buybackAmount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L724)\n\t[UniswapV3Farm.pendingBaseToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L68) can be used in cross function reentrancies:\n\t- [UniswapV3Farm.pendingBaseToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L68)\n\t- [pendingFarmingToken = farmingToken.myBalance()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L725)\n\t[UniswapV3Farm.pendingFarmingToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L69) can be used in cross function reentrancies:\n\t- [UniswapV3Farm.pendingFarmingToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L69)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 731
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4e4a1797beb2ad209485a9b7e4bad60f1b20f15492b4f94bf3c176ccb936ee52"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.work(uint256,address,uint256,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#206-247):\n\tExternal calls:\n\t- _reinvest(treasuryAccount,treasuryBountyBps,reinvestThreshold) (contracts/farms/uniswapV3/UniswapV3Farm.sol#220)\n\t\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\t\t- baseToken.safeApprove(address(router),type()(uint256).max) (contracts/farms/uniswapV3/UniswapV3Farm.sol#795)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#796-804)\n\t\t- beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#806-809)\n\t\t- baseToken.safeApprove(address(router),0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#817)\n\t\t- farmingToken.safeApprove(address(router),pendingFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#676)\n\t\t- amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#679-690)\n\t\t- baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty)) (contracts/farms/uniswapV3/UniswapV3Farm.sol#704-707)\n\t\t- baseToken.safeTransfer(address(addStrat),reinvestAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#713)\n\t\t- positionManager.setApprovalForAll(address(addStrat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#714)\n\t\t- addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0))) (contracts/farms/uniswapV3/UniswapV3Farm.sol#716-721)\n\t\t- positionManager.setApprovalForAll(address(addStrat),false) (contracts/farms/uniswapV3/UniswapV3Farm.sol#728)\n\t- baseToken.safeTransfer(strat,actualBaseTokenBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#233)\n\t- farmingToken.safeTransfer(strat,actualFarmingTokenBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#235)\n\t- positionManager.setApprovalForAll(address(strat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#236)\n\t- IStrategy(strat).execute(user,_msgSender(),debt,ext) (contracts/farms/uniswapV3/UniswapV3Farm.sol#238)\n\tState variables written after the call(s):\n\t- addedLiquidity = _addShare(id,remainingLiquidity) (contracts/farms/uniswapV3/UniswapV3Farm.sol#241)\n\t\t- shares[id] = shares[id] + (share) (contracts/farms/uniswapV3/UniswapV3Farm.sol#746)\n\tUniswapV3Farm.shares (contracts/farms/uniswapV3/UniswapV3Farm.sol#47) can be used in cross function reentrancies:\n\t- UniswapV3Farm.shares (contracts/farms/uniswapV3/UniswapV3Farm.sol#47)\n\t- addedLiquidity = _addShare(id,remainingLiquidity) (contracts/farms/uniswapV3/UniswapV3Farm.sol#241)\n\t\t- totalShare = totalShare + (share) (contracts/farms/uniswapV3/UniswapV3Farm.sol#745)\n\tUniswapV3Farm.totalShare (contracts/farms/uniswapV3/UniswapV3Farm.sol#49) can be used in cross function reentrancies:\n\t- UniswapV3Farm._balanceToShare(uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#191-197)\n\t- UniswapV3Farm.shareToBalance(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#180-183)\n\t- UniswapV3Farm.totalShare (contracts/farms/uniswapV3/UniswapV3Farm.sol#49)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.work(uint256,address,uint256,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L206-L247):\n\tExternal calls:\n\t- [_reinvest(treasuryAccount,treasuryBountyBps,reinvestThreshold)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L220)\n\t\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\t\t- [baseToken.safeApprove(address(router),type()(uint256).max)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L795)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L796-L804)\n\t\t- [beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L806-L809)\n\t\t- [baseToken.safeApprove(address(router),0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L817)\n\t\t- [farmingToken.safeApprove(address(router),pendingFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L676)\n\t\t- [amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L679-L690)\n\t\t- [baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L704-L707)\n\t\t- [baseToken.safeTransfer(address(addStrat),reinvestAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L713)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L714)\n\t\t- [addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0)))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L716-L721)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),false)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L728)\n\t- [baseToken.safeTransfer(strat,actualBaseTokenBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L233)\n\t- [farmingToken.safeTransfer(strat,actualFarmingTokenBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L235)\n\t- [positionManager.setApprovalForAll(address(strat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L236)\n\t- [IStrategy(strat).execute(user,_msgSender(),debt,ext)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L238)\n\tState variables written after the call(s):\n\t- [addedLiquidity = _addShare(id,remainingLiquidity)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L241)\n\t\t- [shares[id] = shares[id] + (share)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L746)\n\t[UniswapV3Farm.shares](contracts/farms/uniswapV3/UniswapV3Farm.sol#L47) can be used in cross function reentrancies:\n\t- [UniswapV3Farm.shares](contracts/farms/uniswapV3/UniswapV3Farm.sol#L47)\n\t- [addedLiquidity = _addShare(id,remainingLiquidity)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L241)\n\t\t- [totalShare = totalShare + (share)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L745)\n\t[UniswapV3Farm.totalShare](contracts/farms/uniswapV3/UniswapV3Farm.sol#L49) can be used in cross function reentrancies:\n\t- [UniswapV3Farm._balanceToShare(uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L191-L197)\n\t- [UniswapV3Farm.shareToBalance(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L180-L183)\n\t- [UniswapV3Farm.totalShare](contracts/farms/uniswapV3/UniswapV3Farm.sol#L49)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 247
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6dcd320bde87a5885fe899c9740414562f569d7ff10cb4757d8ea5e0d5e432c2"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in CustomPortfolio.withdraw(uint256,uint256,uint256) (contracts/portfolio/CustomPortfolio.sol#321-399):\n\tExternal calls:\n\t- vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0))) (contracts/portfolio/CustomPortfolio.sol#348-358)\n\tState variables written after the call(s):\n\t- _position.shares[farms[i]] = _position.shares[farms[i]] - _removedShares[i] (contracts/portfolio/CustomPortfolio.sol#364-366)\n\tCustomPortfolio._positions (contracts/portfolio/CustomPortfolio.sol#50) can be used in cross function reentrancies:\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio.positions(uint256) (contracts/portfolio/CustomPortfolio.sol#155-163)\n\t- totalShares[farms[i]] -= _removedShares[i] (contracts/portfolio/CustomPortfolio.sol#367)\n\tCustomPortfolio.totalShares (contracts/portfolio/CustomPortfolio.sol#46) can be used in cross function reentrancies:\n\t- CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319)\n\t- CustomPortfolio._liquidityToShare(address,uint256,uint256) (contracts/portfolio/CustomPortfolio.sol#482-490)\n\t- CustomPortfolio.positionLiquidies(uint256) (contracts/portfolio/CustomPortfolio.sol#165-190)\n\t- CustomPortfolio.totalShares (contracts/portfolio/CustomPortfolio.sol#46)\n",
            "markdown": "Reentrancy in [CustomPortfolio.withdraw(uint256,uint256,uint256)](contracts/portfolio/CustomPortfolio.sol#L321-L399):\n\tExternal calls:\n\t- [vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0)))](contracts/portfolio/CustomPortfolio.sol#L348-L358)\n\tState variables written after the call(s):\n\t- [_position.shares[farms[i]] = _position.shares[farms[i]] - _removedShares[i]](contracts/portfolio/CustomPortfolio.sol#L364-L366)\n\t[CustomPortfolio._positions](contracts/portfolio/CustomPortfolio.sol#L50) can be used in cross function reentrancies:\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio.positions(uint256)](contracts/portfolio/CustomPortfolio.sol#L155-L163)\n\t- [totalShares[farms[i]] -= _removedShares[i]](contracts/portfolio/CustomPortfolio.sol#L367)\n\t[CustomPortfolio.totalShares](contracts/portfolio/CustomPortfolio.sol#L46) can be used in cross function reentrancies:\n\t- [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319)\n\t- [CustomPortfolio._liquidityToShare(address,uint256,uint256)](contracts/portfolio/CustomPortfolio.sol#L482-L490)\n\t- [CustomPortfolio.positionLiquidies(uint256)](contracts/portfolio/CustomPortfolio.sol#L165-L190)\n\t- [CustomPortfolio.totalShares](contracts/portfolio/CustomPortfolio.sol#L46)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 321,
                  "endLine": 399
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "70a4e3952f1aaf573e432c8b5f4ed8cc13bbdec033a2b75f80bb54327bb5dad9"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629):\n\tExternal calls:\n\t- positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#608-616)\n\t- positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#618-625)\n\tState variables written after the call(s):\n\t- _setPosition(_positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#628)\n\t\t- positionId = _positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#632)\n\tUniswapV3Farm.positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#44) can be used in cross function reentrancies:\n\t- UniswapV3Farm._setPosition(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#631-635)\n\t- UniswapV3Farm.positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#44)\n\t- UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629)\n\t- UniswapV3Farm.tick() (contracts/farms/uniswapV3/UniswapV3Farm.sol#402-406)\n\t- UniswapV3Farm.totalLiquidity() (contracts/farms/uniswapV3/UniswapV3Farm.sol#199-204)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629):\n\tExternal calls:\n\t- [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L608-L616)\n\t- [positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L618-L625)\n\tState variables written after the call(s):\n\t- [_setPosition(_positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L628)\n\t\t- [positionId = _positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L632)\n\t[UniswapV3Farm.positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L44) can be used in cross function reentrancies:\n\t- [UniswapV3Farm._setPosition(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L631-L635)\n\t- [UniswapV3Farm.positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L44)\n\t- [UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629)\n\t- [UniswapV3Farm.tick()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L402-L406)\n\t- [UniswapV3Farm.totalLiquidity()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L199-L204)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 629
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7a3f3dd146a847d058c5464c3177e3ae682a377e6afae23271417ac572597f03"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.reinvest() (contracts/farms/uniswapV3/UniswapV3Farm.sol#280-285):\n\tExternal calls:\n\t- _reinvest(msg.sender,reinvestBountyBps,0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#281)\n\t\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\t\t- baseToken.safeApprove(address(router),type()(uint256).max) (contracts/farms/uniswapV3/UniswapV3Farm.sol#795)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#796-804)\n\t\t- beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#806-809)\n\t\t- baseToken.safeApprove(address(router),0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#817)\n\t\t- farmingToken.safeApprove(address(router),pendingFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#676)\n\t\t- amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#679-690)\n\t\t- baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty)) (contracts/farms/uniswapV3/UniswapV3Farm.sol#704-707)\n\t\t- baseToken.safeTransfer(address(addStrat),reinvestAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#713)\n\t\t- positionManager.setApprovalForAll(address(addStrat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#714)\n\t\t- addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0))) (contracts/farms/uniswapV3/UniswapV3Farm.sol#716-721)\n\t\t- positionManager.setApprovalForAll(address(addStrat),false) (contracts/farms/uniswapV3/UniswapV3Farm.sol#728)\n\t- _buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#284)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#773-776)\n\tState variables written after the call(s):\n\t- _buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#284)\n\t\t- buybackAmount = 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#772)\n\tUniswapV3Farm.buybackAmount (contracts/farms/uniswapV3/UniswapV3Farm.sol#65) can be used in cross function reentrancies:\n\t- UniswapV3Farm._buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#769-782)\n\t- UniswapV3Farm.buybackAmount (contracts/farms/uniswapV3/UniswapV3Farm.sol#65)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.reinvest()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L280-L285):\n\tExternal calls:\n\t- [_reinvest(msg.sender,reinvestBountyBps,0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L281)\n\t\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\t\t- [baseToken.safeApprove(address(router),type()(uint256).max)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L795)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L796-L804)\n\t\t- [beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L806-L809)\n\t\t- [baseToken.safeApprove(address(router),0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L817)\n\t\t- [farmingToken.safeApprove(address(router),pendingFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L676)\n\t\t- [amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L679-L690)\n\t\t- [baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L704-L707)\n\t\t- [baseToken.safeTransfer(address(addStrat),reinvestAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L713)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L714)\n\t\t- [addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0)))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L716-L721)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),false)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L728)\n\t- [_buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L284)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L773-L776)\n\tState variables written after the call(s):\n\t- [_buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L284)\n\t\t- [buybackAmount = 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L772)\n\t[UniswapV3Farm.buybackAmount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L65) can be used in cross function reentrancies:\n\t- [UniswapV3Farm._buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L769-L782)\n\t- [UniswapV3Farm.buybackAmount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L65)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 285
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c29f474aec4cbc953ad8633ed1b6d381418137aead767fe081b4610559bc1376"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.rebalance(int24,int24,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#287-388):\n\tExternal calls:\n\t- _reinvest(msg.sender,reinvestBountyBps,0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#304)\n\t\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\t\t- baseToken.safeApprove(address(router),type()(uint256).max) (contracts/farms/uniswapV3/UniswapV3Farm.sol#795)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#796-804)\n\t\t- beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#806-809)\n\t\t- baseToken.safeApprove(address(router),0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#817)\n\t\t- farmingToken.safeApprove(address(router),pendingFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#676)\n\t\t- amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#679-690)\n\t\t- baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty)) (contracts/farms/uniswapV3/UniswapV3Farm.sol#704-707)\n\t\t- baseToken.safeTransfer(address(addStrat),reinvestAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#713)\n\t\t- positionManager.setApprovalForAll(address(addStrat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#714)\n\t\t- addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0))) (contracts/farms/uniswapV3/UniswapV3Farm.sol#716-721)\n\t\t- positionManager.setApprovalForAll(address(addStrat),false) (contracts/farms/uniswapV3/UniswapV3Farm.sol#728)\n\t- _decreaseLiquidity(uint128(liquidity),0,0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#309)\n\t\t- positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:positionId,liquidity:liquidity,amount0Min:amount0Min,amount1Min:amount1Min,deadline:block.timestamp})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#828-837)\n\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#311-318)\n\t- baseToken.safeTransfer(msg.sender,feeBaseToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#356)\n\t- farmingToken.safeTransfer(msg.sender,feeFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#360)\n\t- baseToken.safeTransfer(address(add2Strat),totalBaseToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#368)\n\t- farmingToken.safeTransfer(address(add2Strat),totalFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#370)\n\t- _positionId = IMintStrategy(address(add2Strat)).mint(lowerTick,upperTick,minimumLiquidity) (contracts/farms/uniswapV3/UniswapV3Farm.sol#373-377)\n\tState variables written after the call(s):\n\t- pendingBaseToken = baseToken.myBalance() - buybackAmount (contracts/farms/uniswapV3/UniswapV3Farm.sol#382)\n\tUniswapV3Farm.pendingBaseToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#68) can be used in cross function reentrancies:\n\t- UniswapV3Farm.pendingBaseToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#68)\n\t- pendingFarmingToken = farmingToken.myBalance() (contracts/farms/uniswapV3/UniswapV3Farm.sol#383)\n\tUniswapV3Farm.pendingFarmingToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#69) can be used in cross function reentrancies:\n\t- UniswapV3Farm.pendingFarmingToken (contracts/farms/uniswapV3/UniswapV3Farm.sol#69)\n\t- _setPosition(_positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#379)\n\t\t- positionId = _positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#632)\n\tUniswapV3Farm.positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#44) can be used in cross function reentrancies:\n\t- UniswapV3Farm._setPosition(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#631-635)\n\t- UniswapV3Farm.positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#44)\n\t- UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629)\n\t- UniswapV3Farm.tick() (contracts/farms/uniswapV3/UniswapV3Farm.sol#402-406)\n\t- UniswapV3Farm.totalLiquidity() (contracts/farms/uniswapV3/UniswapV3Farm.sol#199-204)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.rebalance(int24,int24,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L287-L388):\n\tExternal calls:\n\t- [_reinvest(msg.sender,reinvestBountyBps,0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L304)\n\t\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\t\t- [baseToken.safeApprove(address(router),type()(uint256).max)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L795)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L796-L804)\n\t\t- [beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L806-L809)\n\t\t- [baseToken.safeApprove(address(router),0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L817)\n\t\t- [farmingToken.safeApprove(address(router),pendingFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L676)\n\t\t- [amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L679-L690)\n\t\t- [baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L704-L707)\n\t\t- [baseToken.safeTransfer(address(addStrat),reinvestAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L713)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L714)\n\t\t- [addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0)))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L716-L721)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),false)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L728)\n\t- [_decreaseLiquidity(uint128(liquidity),0,0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L309)\n\t\t- [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:positionId,liquidity:liquidity,amount0Min:amount0Min,amount1Min:amount1Min,deadline:block.timestamp}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L828-L837)\n\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L311-L318)\n\t- [baseToken.safeTransfer(msg.sender,feeBaseToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L356)\n\t- [farmingToken.safeTransfer(msg.sender,feeFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L360)\n\t- [baseToken.safeTransfer(address(add2Strat),totalBaseToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L368)\n\t- [farmingToken.safeTransfer(address(add2Strat),totalFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L370)\n\t- [_positionId = IMintStrategy(address(add2Strat)).mint(lowerTick,upperTick,minimumLiquidity)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L373-L377)\n\tState variables written after the call(s):\n\t- [pendingBaseToken = baseToken.myBalance() - buybackAmount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L382)\n\t[UniswapV3Farm.pendingBaseToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L68) can be used in cross function reentrancies:\n\t- [UniswapV3Farm.pendingBaseToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L68)\n\t- [pendingFarmingToken = farmingToken.myBalance()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L383)\n\t[UniswapV3Farm.pendingFarmingToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L69) can be used in cross function reentrancies:\n\t- [UniswapV3Farm.pendingFarmingToken](contracts/farms/uniswapV3/UniswapV3Farm.sol#L69)\n\t- [_setPosition(_positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L379)\n\t\t- [positionId = _positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L632)\n\t[UniswapV3Farm.positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L44) can be used in cross function reentrancies:\n\t- [UniswapV3Farm._setPosition(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L631-L635)\n\t- [UniswapV3Farm.positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L44)\n\t- [UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629)\n\t- [UniswapV3Farm.tick()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L402-L406)\n\t- [UniswapV3Farm.totalLiquidity()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L199-L204)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 388
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d347e6e340e5e661ebeebbef96c1cfee85f8ed1be6dbb9227757c4d9e439962d"
          }
        },
        {
          "ruleId": "1-1-uninitialized-local",
          "message": {
            "text": "UniswapV3Farm._reinvest(address,uint256,uint256).reinvestAmount (contracts/farms/uniswapV3/UniswapV3Farm.sol#697) is a local variable never initialized\n",
            "markdown": "[UniswapV3Farm._reinvest(address,uint256,uint256).reinvestAmount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L697) is a local variable never initialized\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 697,
                  "endLine": 697
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cc66bffc287b96b0efbadc8753ccee59f88999092385ae634a3e37228085e23c"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#162-240) ignores return value by (amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),lowerTick,upperTick,token0Amount,token1Amount) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#192-198)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L162-L240) ignores return value by [(amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),lowerTick,upperTick,token0Amount,token1Amount)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L192-L198)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 240
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "02c730f330cc065489c71c3cc409c221854d0efc215c406e9382dd9069c0e4a5"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#67-141) ignores return value by router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:params.farmingToken,tokenOut:params.baseToken,fee:params.fee,deadline:block.timestamp,amountIn:farmingTokenBalance,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)})) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#118-129)\n",
            "markdown": "[UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L67-L141) ignores return value by [router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:params.farmingToken,tokenOut:params.baseToken,fee:params.fee,deadline:block.timestamp,amountIn:farmingTokenBalance,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)}))](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L118-L129)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 141
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "05daa26be92dc7e8eb034617c5406afa0565d0ad643cbd1cafddc5e943ecc900"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#67-149) ignores return value by (amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),params.lowerTick,params.upperTick,token0Amount,token1Amount) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#108-114)\n",
            "markdown": "[UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L67-L149) ignores return value by [(amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),params.lowerTick,params.upperTick,token0Amount,token1Amount)](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L108-L114)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 149
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "103589f3548453fa2150095be050661dc8dd04c01188ec7732a076cc6deee232"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue.fees(INonfungiblePositionManager,uint256) (contracts/libraries/PositionValue.sol#93-128) ignores return value by (token0,token1,fee,tickLower,tickUpper,liquidity,positionFeeGrowthInside0LastX128,positionFeeGrowthInside1LastX128,tokensOwed0,tokensOwed1) = positionManager.positions(tokenId) (contracts/libraries/PositionValue.sol#97-110)\n",
            "markdown": "[PositionValue.fees(INonfungiblePositionManager,uint256)](contracts/libraries/PositionValue.sol#L93-L128) ignores return value by [(token0,token1,fee,tickLower,tickUpper,liquidity,positionFeeGrowthInside0LastX128,positionFeeGrowthInside1LastX128,tokensOwed0,tokensOwed1) = positionManager.positions(tokenId)](contracts/libraries/PositionValue.sol#L97-L110)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 128
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1755a2aff9e934e23c8a22d2230446909f07a54bc11d8703d0041844859e1c16"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "ChainLinkPriceOracle.getPrice(address,address) (contracts/price-oracles/ChainLinkPriceOracle.sol#67-89) ignores return value by (price,lastUpdate) = priceFeeds[token0][token1].latestRoundData() (contracts/price-oracles/ChainLinkPriceOracle.sol#77-79)\n",
            "markdown": "[ChainLinkPriceOracle.getPrice(address,address)](contracts/price-oracles/ChainLinkPriceOracle.sol#L67-L89) ignores return value by [(price,lastUpdate) = priceFeeds[token0][token1].latestRoundData()](contracts/price-oracles/ChainLinkPriceOracle.sol#L77-L79)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/ChainLinkPriceOracle.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "21a3dcb999071fed579bed1099f0c343b72864a424292f301cd682cbf42e34eb"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256) (contracts/portfolio/PortfolioFactory.sol#89-120) ignores return value by IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#98-101)\n",
            "markdown": "[PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256)](contracts/portfolio/PortfolioFactory.sol#L89-L120) ignores return value by [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L98-L101)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 120
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "31e5ef2d098e19719a2d279fbc30ea7d10ca34ca188b5cbf8707ad40462cb76c"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "Health._getFarmValue(IFarmUniswapV3) (contracts/farms/Health.sol#31-59) ignores return value by (sqrtPriceX96) = pair.slot0() (contracts/farms/Health.sol#39)\n",
            "markdown": "[Health._getFarmValue(IFarmUniswapV3)](contracts/farms/Health.sol#L31-L59) ignores return value by [(sqrtPriceX96) = pair.slot0()](contracts/farms/Health.sol#L39)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/Health.sol"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 59
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "36c71a8df4659742f4cde267f00e6877d7a9567c407c7e5c74f6dd2090abab4c"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3FarmTest.tick() (contracts/tests/UniswapV3FarmTest.sol#46-50) ignores return value by (None,None,None,None,None,lowerTick,upperTick,None,None,None,None,None) = positionManager.positions(positionId) (contracts/tests/UniswapV3FarmTest.sol#47-49)\n",
            "markdown": "[UniswapV3FarmTest.tick()](contracts/tests/UniswapV3FarmTest.sol#L46-L50) ignores return value by [(None,None,None,None,None,lowerTick,upperTick,None,None,None,None,None) = positionManager.positions(positionId)](contracts/tests/UniswapV3FarmTest.sol#L47-L49)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 50
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3b6f6be9d77a227e6f796702b8e39b845cdea2146a8c7c36e7f5cd1db9b030a9"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24) (contracts/libraries/PositionValue.sol#171-230) ignores return value by (lowerFeeGrowthOutside0X128,lowerFeeGrowthOutside1X128) = pool.ticks(tickLower) (contracts/libraries/PositionValue.sol#181-190)\n",
            "markdown": "[PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24)](contracts/libraries/PositionValue.sol#L171-L230) ignores return value by [(lowerFeeGrowthOutside0X128,lowerFeeGrowthOutside1X128) = pool.ticks(tickLower)](contracts/libraries/PositionValue.sol#L181-L190)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 230
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3f902ab4cf08ba47638a0457a988ebc963e62a1195869e2b62baf9f535d41b2b"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm.totalLiquidity() (contracts/farms/uniswapV3/UniswapV3Farm.sol#199-204) ignores return value by (liquidity) = positionManager.positions(positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#200-202)\n",
            "markdown": "[UniswapV3Farm.totalLiquidity()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L199-L204) ignores return value by [(liquidity) = positionManager.positions(positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L200-L202)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 204
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "437074482e3364ef5458265ba237073aa697609c96d734cf6128dc43609c83e2"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBaseTokenStrategy._increaseLiquidity(uint256,uint256,uint256) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#180-196) ignores return value by (addedLiquidity,None,None) = positionManager.increaseLiquidity(params) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#195)\n",
            "markdown": "[UniswapV3AddBaseTokenStrategy._increaseLiquidity(uint256,uint256,uint256)](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L180-L196) ignores return value by [(addedLiquidity,None,None) = positionManager.increaseLiquidity(params)](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L195)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 196
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "46243a6b0571078ef8248d8ebc7f4aef246ca0d2f527dd55c97bd05d75b0df3f"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629) ignores return value by positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#608-616)\n",
            "markdown": "[UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629) ignores return value by [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L608-L616)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 629
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "46b9cd0365ada9529e8c4f310c1fab1b48b3d3bd23ed9609ff0a67ca6b63f713"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#67-141) ignores return value by positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:params.tokenId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#105-112)\n",
            "markdown": "[UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L67-L141) ignores return value by [positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:params.tokenId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L105-L112)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 141
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4d4a4f690e207c2fbe94c3d65cdc96379941faa015a0e2ca840339ca01677deb"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#70-159) ignores return value by (amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),params.lowerTick,params.upperTick,token0Amount,token1Amount) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#118-124)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L70-L159) ignores return value by [(amountIn,zeroForOne) = OptimalSwap.getOptimalSwap(V3PoolCallee.wrap(address(pool)),params.lowerTick,params.upperTick,token0Amount,token1Amount)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L118-L124)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 159
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5021e1b52f67548a5951db7a8e6bdf40b438b426c26ce8e3218cc7bf0d418669"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "Health.quoteTWAPPrice(IUniswapV3Pool,address,uint128,uint32) (contracts/farms/Health.sol#61-80) ignores return value by (_tick) = OracleLibrary.consult(address(_pool),secondsAgo) (contracts/farms/Health.sol#72)\n",
            "markdown": "[Health.quoteTWAPPrice(IUniswapV3Pool,address,uint128,uint32)](contracts/farms/Health.sol#L61-L80) ignores return value by [(_tick) = OracleLibrary.consult(address(_pool),secondsAgo)](contracts/farms/Health.sol#L72)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/Health.sol"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 80
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5ad040f76d6be72f54253f7e5b926aa267214d9ab147ad9ad9268002e0257a88"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm._reinvest(address,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#641-731) ignores return value by (sqrtPriceX96) = pool.slot0() (contracts/farms/uniswapV3/UniswapV3Farm.sol#654)\n",
            "markdown": "[UniswapV3Farm._reinvest(address,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L641-L731) ignores return value by [(sqrtPriceX96) = pool.slot0()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L654)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 731
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "684244c4a7a79c6b028993e53da1f730dfb3322123a5494c98a614a08a9517a5"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#67-141) ignores return value by positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:params.tokenId,liquidity:uint128(userLiquidity),amount0Min:0,amount1Min:0,deadline:block.timestamp})) (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#96-104)\n",
            "markdown": "[UniswapV3StrategyLiquidate.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L67-L141) ignores return value by [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:params.tokenId,liquidity:uint128(userLiquidity),amount0Min:0,amount1Min:0,deadline:block.timestamp}))](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L96-L104)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 141
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6c9144b367cbb2d5043caccfc484eed87e97830abfac4d6d52085228c6820b3d"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#289-314) ignores return value by (tokenId,liquidity,None,None) = positionManager.mint(params) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#313)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L289-L314) ignores return value by [(tokenId,liquidity,None,None) = positionManager.mint(params)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L313)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 289,
                  "endLine": 314
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d762fd786bb772fc3c20600f15e10d988820b50156e5849fcb071bb7c2fd634"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "CustomPortfolio.withdraw(uint256,uint256,uint256) (contracts/portfolio/CustomPortfolio.sol#321-399) ignores return value by vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0))) (contracts/portfolio/CustomPortfolio.sol#348-358)\n",
            "markdown": "[CustomPortfolio.withdraw(uint256,uint256,uint256)](contracts/portfolio/CustomPortfolio.sol#L321-L399) ignores return value by [vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0)))](contracts/portfolio/CustomPortfolio.sol#L348-L358)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 321,
                  "endLine": 399
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6ed6885f2e19bb4b09426e330b00acbb0a0af78735b89251d23ddef9eb8e5074"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24) (contracts/libraries/PositionValue.sol#171-230) ignores return value by (tickCurrent) = pool.slot0() (contracts/libraries/PositionValue.sol#180)\n",
            "markdown": "[PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24)](contracts/libraries/PositionValue.sol#L171-L230) ignores return value by [(tickCurrent) = pool.slot0()](contracts/libraries/PositionValue.sol#L180)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 230
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "74de52196071cac06a5dfd041a44862d6d29cfe626a1e18e5facfa8c15d92094"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBaseTokenStrategy._swap(IUniswapV3Pool,address,address,uint256) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#160-178) ignores return value by router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee(),deadline:block.timestamp,amountIn:amountIn,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)})) (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#166-177)\n",
            "markdown": "[UniswapV3AddBaseTokenStrategy._swap(IUniswapV3Pool,address,address,uint256)](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L160-L178) ignores return value by [router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee(),deadline:block.timestamp,amountIn:amountIn,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)}))](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L166-L177)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 178
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7743feb4edcbcad43052d339ffcd7cd91ffb05c7a6d53485a112d772a4397a4d"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#68-161) ignores return value by router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:params.farmingToken,tokenOut:params.baseToken,fee:params.fee,deadline:block.timestamp,amountIn:farmingTokenBalance,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)})) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#138-149)\n",
            "markdown": "[UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L68-L161) ignores return value by [router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:params.farmingToken,tokenOut:params.baseToken,fee:params.fee,deadline:block.timestamp,amountIn:farmingTokenBalance,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)}))](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L138-L149)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 161
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "790b72b233d7929bc3437bc9bc84021cce2354a974133accf02200cd2ee0aa5d"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319) ignores return value by (liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i]) (contracts/portfolio/CustomPortfolio.sol#275-282)\n",
            "markdown": "[CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319) ignores return value by [(liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i])](contracts/portfolio/CustomPortfolio.sol#L275-L282)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 319
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7a40c0b36ac7655974a4aa8f071b28371595b0eadca1fc6b31c4b24e05de63f9"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm.tick() (contracts/farms/uniswapV3/UniswapV3Farm.sol#402-406) ignores return value by (tickLower,tickUpper) = positionManager.positions(positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#403-404)\n",
            "markdown": "[UniswapV3Farm.tick()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L402-L406) ignores return value by [(tickLower,tickUpper) = positionManager.positions(positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L403-L404)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 402,
                  "endLine": 406
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "80d6a181e909e8fa38872b067da4796e0e25314e7934095c1b12e2f05679f035"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "VaultV3.addCollateral(uint256,uint256,bool,bytes) (contracts/UniswapV3Vault.sol#300-368) ignores return value by IFarmUniswapV3(farm).work(id,msg.sender,debt,data) (contracts/UniswapV3Vault.sol#337)\n",
            "markdown": "[VaultV3.addCollateral(uint256,uint256,bool,bytes)](contracts/UniswapV3Vault.sol#L300-L368) ignores return value by [IFarmUniswapV3(farm).work(id,msg.sender,debt,data)](contracts/UniswapV3Vault.sol#L337)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 368
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "86d0886358dbac9f55f33e573f579459f3bb7dbf0d375f9e41088c619ff9b395"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3FarmConfig.isStable(address) (contracts/farms/UniswapV3FarmConfig.sol#99-129) ignores return value by (sqrtPriceX96) = pool.slot0() (contracts/farms/UniswapV3FarmConfig.sol#109)\n",
            "markdown": "[UniswapV3FarmConfig.isStable(address)](contracts/farms/UniswapV3FarmConfig.sol#L99-L129) ignores return value by [(sqrtPriceX96) = pool.slot0()](contracts/farms/UniswapV3FarmConfig.sol#L109)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 129
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8d49ce4223d07df21b39f3ff0c1b068aa3ae51cc1fab00fa3860db4697f8a0b7"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629) ignores return value by (liquidity) = positionManager.positions(_positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#603-605)\n",
            "markdown": "[UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629) ignores return value by [(liquidity) = positionManager.positions(_positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L603-L605)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 629
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "92ffb1718da396c4350ae4dfbda711c2a5365305ec575769e3c39ea0c63e3261"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue.principal(INonfungiblePositionManager,uint256,uint160) (contracts/libraries/PositionValue.sol#46-73) ignores return value by LiquidityAmounts.getAmountsForLiquidity(sqrtRatioX96,TickMath.getSqrtRatioAtTick(tickLower),TickMath.getSqrtRatioAtTick(tickUpper),liquidity) (contracts/libraries/PositionValue.sol#66-72)\n",
            "markdown": "[PositionValue.principal(INonfungiblePositionManager,uint256,uint160)](contracts/libraries/PositionValue.sol#L46-L73) ignores return value by [LiquidityAmounts.getAmountsForLiquidity(sqrtRatioX96,TickMath.getSqrtRatioAtTick(tickLower),TickMath.getSqrtRatioAtTick(tickUpper),liquidity)](contracts/libraries/PositionValue.sol#L66-L72)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 73
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "94dff14073ff4174387efb01531036e2aa8ae53674cec367e8cfc9106b6f1641"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) ignores return value by vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0))) (contracts/portfolio/DynamicPortfolio.sol#146-153)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) ignores return value by [vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0)))](contracts/portfolio/DynamicPortfolio.sol#L146-L153)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "989b3fd719f536a9a4e654276f3424f07c7a3501580deed581321f7ae251edba"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy._swap(IUniswapV3Pool,address,address,uint256) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#251-269) ignores return value by router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee(),deadline:block.timestamp,amountIn:amountIn,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)})) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#257-268)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy._swap(IUniswapV3Pool,address,address,uint256)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L251-L269) ignores return value by [router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee(),deadline:block.timestamp,amountIn:amountIn,amountOutMinimum:0,sqrtPriceLimitX96:0,recipient:address(this)}))](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L257-L268)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 251,
                  "endLine": 269
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a51efe89b67d710517d6390b556eea7836f3e28d5a77ff6334184b607bdecec5"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy._increaseLiquidity(uint256,uint256,uint256) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#271-287) ignores return value by (addedLiquidity,None,None) = positionManager.increaseLiquidity(params) (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#286)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy._increaseLiquidity(uint256,uint256,uint256)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L271-L287) ignores return value by [(addedLiquidity,None,None) = positionManager.increaseLiquidity(params)](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L286)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 287
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a965f34fec130ccd24023151eff8e20a02ea22d056d077630c3ff852bd2b8889"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue.principal(INonfungiblePositionManager,uint256,uint160) (contracts/libraries/PositionValue.sol#46-73) ignores return value by (tickLower,tickUpper,liquidity) = positionManager.positions(tokenId) (contracts/libraries/PositionValue.sol#51-64)\n",
            "markdown": "[PositionValue.principal(INonfungiblePositionManager,uint256,uint160)](contracts/libraries/PositionValue.sol#L46-L73) ignores return value by [(tickLower,tickUpper,liquidity) = positionManager.positions(tokenId)](contracts/libraries/PositionValue.sol#L51-L64)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 73
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "be9ef0425a8b3200a43230afc0b34cd38e268fdf6aec94f5a76434e8f65f1603"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#68-161) ignores return value by positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:params.tokenId,liquidity:uint128(returnLiquidity),amount0Min:0,amount1Min:0,deadline:block.timestamp})) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#116-124)\n",
            "markdown": "[UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L68-L161) ignores return value by [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:params.tokenId,liquidity:uint128(returnLiquidity),amount0Min:0,amount1Min:0,deadline:block.timestamp}))](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L116-L124)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 161
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c35eedbc052dd56c334325079818b308001e6759eaafdc1f261f7d490026b42c"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm._decreaseLiquidity(uint128,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#823-838) ignores return value by positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:positionId,liquidity:liquidity,amount0Min:amount0Min,amount1Min:amount1Min,deadline:block.timestamp})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#828-837)\n",
            "markdown": "[UniswapV3Farm._decreaseLiquidity(uint128,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L823-L838) ignores return value by [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:positionId,liquidity:liquidity,amount0Min:amount0Min,amount1Min:amount1Min,deadline:block.timestamp}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L828-L837)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 823,
                  "endLine": 838
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c3ef7a8bd1e6484e42a5318e51e049760d61317768d59c1c08c76bb038adf575"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) ignores return value by vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0))) (contracts/portfolio/DynamicPortfolio.sol#71-81)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) ignores return value by [vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0)))](contracts/portfolio/DynamicPortfolio.sol#L71-L81)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c46f8864d3e718c0f5da07b244128867d0b5dc52c936bf40cc30305913dbd186"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24) (contracts/libraries/PositionValue.sol#171-230) ignores return value by (upperFeeGrowthOutside0X128,upperFeeGrowthOutside1X128) = pool.ticks(tickUpper) (contracts/libraries/PositionValue.sol#191-200)\n",
            "markdown": "[PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24)](contracts/libraries/PositionValue.sol#L171-L230) ignores return value by [(upperFeeGrowthOutside0X128,upperFeeGrowthOutside1X128) = pool.ticks(tickUpper)](contracts/libraries/PositionValue.sol#L191-L200)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 230
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cfdfbf3fc4f5669a2d89077862ff970864e507c5cbebea68139700c0a6d23f4c"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#68-161) ignores return value by positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:params.tokenId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#125-132)\n",
            "markdown": "[UniswapV3StrategyPartialClose.execute(address,address,uint256,bytes)](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L68-L161) ignores return value by [positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:params.tokenId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L125-L132)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 161
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eb6c322b141284d50aebc444cb45cb0fbd2fa7a63606c805ee71793232723a3e"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "ChainLinkPriceOracle.getPrice(address,address) (contracts/price-oracles/ChainLinkPriceOracle.sol#67-89) ignores return value by (price_scope_0,lastUpdate_scope_1) = priceFeeds[token1][token0].latestRoundData() (contracts/price-oracles/ChainLinkPriceOracle.sol#83-85)\n",
            "markdown": "[ChainLinkPriceOracle.getPrice(address,address)](contracts/price-oracles/ChainLinkPriceOracle.sol#L67-L89) ignores return value by [(price_scope_0,lastUpdate_scope_1) = priceFeeds[token1][token0].latestRoundData()](contracts/price-oracles/ChainLinkPriceOracle.sol#L83-L85)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/ChainLinkPriceOracle.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ee916230d518b9df2330aef8ee6e2849f14be8e494a4556214f988bf87983ba9"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData) (contracts/portfolio/PortfolioFactory.sol#62-87) ignores return value by IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#68-71)\n",
            "markdown": "[PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData)](contracts/portfolio/PortfolioFactory.sol#L62-L87) ignores return value by [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L68-L71)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 87
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ff69cceb82fe94eb879dc2322f82e3fbc9ff0d0535ffdbfef7b7cca574f4a486"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629) ignores return value by positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#618-625)\n",
            "markdown": "[UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629) ignores return value by [positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L618-L625)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 629
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fff0eaa62602f3da42470245c9d184dd5f61799f5ce9cce18024abe4fc41c2f2"
          }
        },
        {
          "ruleId": "1-0-write-after-write",
          "message": {
            "text": "UniswapV3Farm.reinvestThreshold (contracts/farms/uniswapV3/UniswapV3Farm.sol#59) is written in both\n\treinvestThreshold = config.reinvestThreshold (contracts/farms/uniswapV3/UniswapV3Farm.sol#126)\n\treinvestThreshold = config.reinvestThreshold (contracts/farms/uniswapV3/UniswapV3Farm.sol#141)\n",
            "markdown": "[UniswapV3Farm.reinvestThreshold](contracts/farms/uniswapV3/UniswapV3Farm.sol#L59) is written in both\n\t[reinvestThreshold = config.reinvestThreshold](contracts/farms/uniswapV3/UniswapV3Farm.sol#L126)\n\t[reinvestThreshold = config.reinvestThreshold](contracts/farms/uniswapV3/UniswapV3Farm.sol#L141)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5b3d47784bc60d19460f16d429a98b2b6f5e70caac685407b6448a93817bc0f8"
          }
        },
        {
          "ruleId": "2-1-events-access",
          "message": {
            "text": "SimplePriceOracle.setFeeder(address) (contracts/price-oracles/SimplePriceOracle.sol#40-42) should emit an event for: \n\t- feeder = _feeder (contracts/price-oracles/SimplePriceOracle.sol#41) \n",
            "markdown": "[SimplePriceOracle.setFeeder(address)](contracts/price-oracles/SimplePriceOracle.sol#L40-L42) should emit an event for: \n\t- [feeder = _feeder](contracts/price-oracles/SimplePriceOracle.sol#L41) \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 42
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4d80aeaffcef2562d260f6a3995b032656ec0542f417d9b9c49dfd95a5e4600a"
          }
        },
        {
          "ruleId": "2-1-events-maths",
          "message": {
            "text": "VaultV3.reduceReserve(uint256) (contracts/UniswapV3Vault.sol#570-572) should emit an event for: \n\t- reservePool = reservePool - value (contracts/UniswapV3Vault.sol#571) \n",
            "markdown": "[VaultV3.reduceReserve(uint256)](contracts/UniswapV3Vault.sol#L570-L572) should emit an event for: \n\t- [reservePool = reservePool - value](contracts/UniswapV3Vault.sol#L571) \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 570,
                  "endLine": 572
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4e6221722123c1c2a8e6d08ff5767f6a8073fb9a9918ac5836dc53b90722a464"
          }
        },
        {
          "ruleId": "2-1-events-maths",
          "message": {
            "text": "VaultV3.withdrawReserve(address,uint256) (contracts/UniswapV3Vault.sol#560-566) should emit an event for: \n\t- reservePool = reservePool - value (contracts/UniswapV3Vault.sol#564) \n",
            "markdown": "[VaultV3.withdrawReserve(address,uint256)](contracts/UniswapV3Vault.sol#L560-L566) should emit an event for: \n\t- [reservePool = reservePool - value](contracts/UniswapV3Vault.sol#L564) \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 560,
                  "endLine": 566
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "689e6ed6533f295b1979b10d8d047a3586c0a2f29aa6efebe6fb98598da8afb4"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr (contracts/ConfigurableInterestVaultConfig.sol#125) lacks a zero-check on :\n\t\t- getFairLaunchAddr = _getFairLaunchAddr (contracts/ConfigurableInterestVaultConfig.sol#141)\n",
            "markdown": "[ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr](contracts/ConfigurableInterestVaultConfig.sol#L125) lacks a zero-check on :\n\t\t- [getFairLaunchAddr = _getFairLaunchAddr](contracts/ConfigurableInterestVaultConfig.sol#L141)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "04b4530b17b275cc28895e32c336a9f778b2703c53ee984ee7cd64080786e247"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr (contracts/ConfigurableInterestVaultConfig.sol#123) lacks a zero-check on :\n\t\t- getWrappedNativeAddr = _getWrappedNativeAddr (contracts/ConfigurableInterestVaultConfig.sol#139)\n",
            "markdown": "[ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr](contracts/ConfigurableInterestVaultConfig.sol#L123) lacks a zero-check on :\n\t\t- [getWrappedNativeAddr = _getWrappedNativeAddr](contracts/ConfigurableInterestVaultConfig.sol#L139)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1836c3444586978463c653f53baded314deafc2c74378e3c09d0276ae8d7dd11"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "SimplePriceOracle.setFeeder(address)._feeder (contracts/price-oracles/SimplePriceOracle.sol#40) lacks a zero-check on :\n\t\t- feeder = _feeder (contracts/price-oracles/SimplePriceOracle.sol#41)\n",
            "markdown": "[SimplePriceOracle.setFeeder(address)._feeder](contracts/price-oracles/SimplePriceOracle.sol#L40) lacks a zero-check on :\n\t\t- [feeder = _feeder](contracts/price-oracles/SimplePriceOracle.sol#L41)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1b5d13476e020630d1823649e6500b239fc66ec9d8e4ed830047cd813b197436"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury (contracts/ConfigurableInterestVaultConfig.sol#127) lacks a zero-check on :\n\t\t- treasury = _treasury (contracts/ConfigurableInterestVaultConfig.sol#143)\n",
            "markdown": "[ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury](contracts/ConfigurableInterestVaultConfig.sol#L127) lacks a zero-check on :\n\t\t- [treasury = _treasury](contracts/ConfigurableInterestVaultConfig.sol#L143)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2f96d26f7f9daa545bdeafaf35f0e5d27e046336cafb7e66fc15a1d91dc82b5a"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "WNativeRelayer.constructor(address)._wnative (contracts/WNativeRelayer.sol#17) lacks a zero-check on :\n\t\t- wnative = _wnative (contracts/WNativeRelayer.sol#18)\n",
            "markdown": "[WNativeRelayer.constructor(address)._wnative](contracts/WNativeRelayer.sol#L17) lacks a zero-check on :\n\t\t- [wnative = _wnative](contracts/WNativeRelayer.sol#L18)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "53438ebc652f715353bf66d85255b6cae340246d1ff96efe0b96118346f54fa4"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#55) lacks a zero-check on :\n\t\t- wNative = IPeripheryImmutableState(_router).WETH9() (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#65)\n",
            "markdown": "[UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L55) lacks a zero-check on :\n\t\t- [wNative = IPeripheryImmutableState(_router).WETH9()](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L65)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "536bb5d02154850ed952aff55b7d41eee8e986cf9a3d790f057971ad4befaa05"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer (contracts/ConfigurableInterestVaultConfig.sol#124) lacks a zero-check on :\n\t\t- getWNativeRelayer = _getWNativeRelayer (contracts/ConfigurableInterestVaultConfig.sol#140)\n",
            "markdown": "[ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer](contracts/ConfigurableInterestVaultConfig.sol#L124) lacks a zero-check on :\n\t\t- [getWNativeRelayer = _getWNativeRelayer](contracts/ConfigurableInterestVaultConfig.sol#L140)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5907886ed75d5e4465fd42ca498575cfacca835997357f7bad90abd65786ff33"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "PortfolioConfig.initialize(address,address,address[],address[])._wNativeAddr (contracts/portfolio/PortfolioConfig.sol#32) lacks a zero-check on :\n\t\t- wNativeAddr = _wNativeAddr (contracts/portfolio/PortfolioConfig.sol#38)\n",
            "markdown": "[PortfolioConfig.initialize(address,address,address[],address[])._wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L32) lacks a zero-check on :\n\t\t- [wNativeAddr = _wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L38)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5dc9776b7a769014ddaf612e3d42a1d9d68ec39e017fe3f7c1631bb9a257b58e"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "VaultV3.initialize(IVaultConfig,address,string,string)._token (contracts/UniswapV3Vault.sol#165) lacks a zero-check on :\n\t\t- token = _token (contracts/UniswapV3Vault.sol#177)\n",
            "markdown": "[VaultV3.initialize(IVaultConfig,address,string,string)._token](contracts/UniswapV3Vault.sol#L165) lacks a zero-check on :\n\t\t- [token = _token](contracts/UniswapV3Vault.sol#L177)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7b93efcc86dbc64aeb5f411f9e088943fcd48e258dea92b6d969c16b8db1d587"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryAccount (contracts/farms/uniswapV3/UniswapV3Farm.sol#580) lacks a zero-check on :\n\t\t- treasuryAccount = _treasuryAccount (contracts/farms/uniswapV3/UniswapV3Farm.sol#588)\n",
            "markdown": "[UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryAccount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L580) lacks a zero-check on :\n\t\t- [treasuryAccount = _treasuryAccount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L588)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 580,
                  "endLine": 580
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7e5dd12cede42ddbe55afb5beef04594f73432e39cf4cc4fce06ae31d3224446"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "PortfolioConfig.setWNativeAddr(address)._wNativeAddr (contracts/portfolio/PortfolioConfig.sol#69) lacks a zero-check on :\n\t\t- wNativeAddr = _wNativeAddr (contracts/portfolio/PortfolioConfig.sol#70)\n",
            "markdown": "[PortfolioConfig.setWNativeAddr(address)._wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L69) lacks a zero-check on :\n\t\t- [wNativeAddr = _wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L70)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "819de7ec285299194355573d864f0a2574c32f188a3c8501e4235de7fdad8cc0"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#52) lacks a zero-check on :\n\t\t- wNative = IPeripheryImmutableState(_router).WETH9() (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#62)\n",
            "markdown": "[UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L52) lacks a zero-check on :\n\t\t- [wNative = IPeripheryImmutableState(_router).WETH9()](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L62)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8344599713c7ca07eae844ff5506bd572ec8299f079386d2b86d54460a41796d"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3FarmTest.constructor(address,address,address,address,address,uint24,uint256)._baseToken (contracts/tests/UniswapV3FarmTest.sol#28) lacks a zero-check on :\n\t\t- baseToken = _baseToken (contracts/tests/UniswapV3FarmTest.sol#40)\n",
            "markdown": "[UniswapV3FarmTest.constructor(address,address,address,address,address,uint24,uint256)._baseToken](contracts/tests/UniswapV3FarmTest.sol#L28) lacks a zero-check on :\n\t\t- [baseToken = _baseToken](contracts/tests/UniswapV3FarmTest.sol#L40)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "845161e5c8548c6b23ac46a8bc85c2e6ed75ea6534a34f931af14f27c377913a"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3FarmConfig.setGovernor(address).newGovernor (contracts/farms/UniswapV3FarmConfig.sol#164) lacks a zero-check on :\n\t\t- governor = newGovernor (contracts/farms/UniswapV3FarmConfig.sol#165)\n",
            "markdown": "[UniswapV3FarmConfig.setGovernor(address).newGovernor](contracts/farms/UniswapV3FarmConfig.sol#L164) lacks a zero-check on :\n\t\t- [governor = newGovernor](contracts/farms/UniswapV3FarmConfig.sol#L165)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8c05fe6aeeb54930bdfadcc0fa4783d946ffef1faa926cbfcd81c4cc7060d1ad"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#52) lacks a zero-check on :\n\t\t- wNative = IPeripheryImmutableState(_router).WETH9() (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#62)\n",
            "markdown": "[UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L52) lacks a zero-check on :\n\t\t- [wNative = IPeripheryImmutableState(_router).WETH9()](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L62)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "90cde6c2a2e0cda98fb1296bc29b32731b9c98ad53b06b0bd83dbe0be1eb01e5"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "PortfolioConfig.initialize(address,address,address[],address[])._router (contracts/portfolio/PortfolioConfig.sol#33) lacks a zero-check on :\n\t\t- router = _router (contracts/portfolio/PortfolioConfig.sol#39)\n",
            "markdown": "[PortfolioConfig.initialize(address,address,address[],address[])._router](contracts/portfolio/PortfolioConfig.sol#L33) lacks a zero-check on :\n\t\t- [router = _router](contracts/portfolio/PortfolioConfig.sol#L39)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9b0fe9954681fcd4190350124e5d691f84ec287ccabedaf291cb74326da85ede"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "BeneficialVaultTest.constructor(address)._token (contracts/tests/BeneficialVaultTest.sol#9) lacks a zero-check on :\n\t\t- token = _token (contracts/tests/BeneficialVaultTest.sol#10)\n",
            "markdown": "[BeneficialVaultTest.constructor(address)._token](contracts/tests/BeneficialVaultTest.sol#L9) lacks a zero-check on :\n\t\t- [token = _token](contracts/tests/BeneficialVaultTest.sol#L10)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "afa972a2090ff18c7b4a1abe641ad1fb943303ab93c4f7bfb713930ea2c95900"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3FarmConfig.initialize(PriceOracle,address)._healthContract (contracts/farms/UniswapV3FarmConfig.sol#51) lacks a zero-check on :\n\t\t- healthContract = _healthContract (contracts/farms/UniswapV3FarmConfig.sol#55)\n",
            "markdown": "[UniswapV3FarmConfig.initialize(PriceOracle,address)._healthContract](contracts/farms/UniswapV3FarmConfig.sol#L51) lacks a zero-check on :\n\t\t- [healthContract = _healthContract](contracts/farms/UniswapV3FarmConfig.sol#L55)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cacd3f6e8d7e1df30f03df92c0226816eeafa5f0a0f424b1b50afde13268a825"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#53) lacks a zero-check on :\n\t\t- wNative = IPeripheryImmutableState(_router).WETH9() (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#63)\n",
            "markdown": "[UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L53) lacks a zero-check on :\n\t\t- [wNative = IPeripheryImmutableState(_router).WETH9()](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L63)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "df267c6229bcc9e6907c3163dbe894f0082e55250ec8e1078bf06ce95ea49d5d"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "SimplePriceOracle.initialize(address)._feeder (contracts/price-oracles/SimplePriceOracle.sol#34) lacks a zero-check on :\n\t\t- feeder = _feeder (contracts/price-oracles/SimplePriceOracle.sol#37)\n",
            "markdown": "[SimplePriceOracle.initialize(address)._feeder](contracts/price-oracles/SimplePriceOracle.sol#L34) lacks a zero-check on :\n\t\t- [feeder = _feeder](contracts/price-oracles/SimplePriceOracle.sol#L37)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "df54c47ea5814b80936807ec9d731ae146c2049c7ea7f280a8101c9acd4c5ce6"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "BeneficialVaultTest.setUser(address)._user (contracts/tests/BeneficialVaultTest.sol#13) lacks a zero-check on :\n\t\t- user = _user (contracts/tests/BeneficialVaultTest.sol#14)\n",
            "markdown": "[BeneficialVaultTest.setUser(address)._user](contracts/tests/BeneficialVaultTest.sol#L13) lacks a zero-check on :\n\t\t- [user = _user](contracts/tests/BeneficialVaultTest.sol#L14)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e06fbe2a7b506e039df061aac8525fc07ae3191980775fd584dc05e341411134"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "PortfolioConfig.setRouter(address)._router (contracts/portfolio/PortfolioConfig.sol#73) lacks a zero-check on :\n\t\t- router = _router (contracts/portfolio/PortfolioConfig.sol#74)\n",
            "markdown": "[PortfolioConfig.setRouter(address)._router](contracts/portfolio/PortfolioConfig.sol#L73) lacks a zero-check on :\n\t\t- [router = _router](contracts/portfolio/PortfolioConfig.sol#L74)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e072bb25c100ce5b61b5d473972cb478c4810a8e77329f1b7342ebdc8e126d27"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "UniswapV3FarmTest.constructor(address,address,address,address,address,uint24,uint256)._farmingToken (contracts/tests/UniswapV3FarmTest.sol#29) lacks a zero-check on :\n\t\t- farmingToken = _farmingToken (contracts/tests/UniswapV3FarmTest.sol#41)\n",
            "markdown": "[UniswapV3FarmTest.constructor(address,address,address,address,address,uint24,uint256)._farmingToken](contracts/tests/UniswapV3FarmTest.sol#L29) lacks a zero-check on :\n\t\t- [farmingToken = _farmingToken](contracts/tests/UniswapV3FarmTest.sol#L41)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f0e62e52f3a6522f2e8a95f983753a277b8566c17cf0f6ad9ebeac979860c53d"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: vaultToken_scope_6 = vault_scope_4.token() (contracts/portfolio/DynamicPortfolio.sol#133)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [vaultToken_scope_6 = vault_scope_4.token()](contracts/portfolio/DynamicPortfolio.sol#L133)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2f4e17287101b9ebaaacbfddfd364bc577142652028153320d169eb5401571ce"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "CustomPortfolio.portfolioFarmShare(address) (contracts/portfolio/CustomPortfolio.sol#151-153) has external calls inside a loop: IFarmUniswapV3(farm).shares(ids[farm]) (contracts/portfolio/CustomPortfolio.sol#152)\n",
            "markdown": "[CustomPortfolio.portfolioFarmShare(address)](contracts/portfolio/CustomPortfolio.sol#L151-L153) has external calls inside a loop: [IFarmUniswapV3(farm).shares(ids[farm])](contracts/portfolio/CustomPortfolio.sol#L152)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 153
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "37a6572ac711145ae1c06eb61dae99eeba859aaa2309a62fb4cb06c72072773e"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: balance = IERC20Upgradeable(vaultToken).balanceOf(address(this)) (contracts/portfolio/DynamicPortfolio.sol#96-98)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [balance = IERC20Upgradeable(vaultToken).balanceOf(address(this))](contracts/portfolio/DynamicPortfolio.sol#L96-L98)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "48ff376c6ab5317624604fb05c41be6642060dab3bd8be43f44363857221c70e"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: vaultToken = vault_scope_2.token() (contracts/portfolio/DynamicPortfolio.sol#90)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [vaultToken = vault_scope_2.token()](contracts/portfolio/DynamicPortfolio.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "568d312ec377128dc5581a168669f5041785a2e02d258b6d90558cc7117c8e99"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32) (contracts/portfolio/PortfolioPositionValue.sol#36-79) has external calls inside a loop: farm.baseToken() == vaultToken (contracts/portfolio/PortfolioPositionValue.sol#64)\n",
            "markdown": "[PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32)](contracts/portfolio/PortfolioPositionValue.sol#L36-L79) has external calls inside a loop: [farm.baseToken() == vaultToken](contracts/portfolio/PortfolioPositionValue.sol#L64)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 79
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d39155238cd9fa3fec9939a78062fd70f5faeb5cf2ac2e5c4bce1726910c9cf"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "SafeToken.safeApprove(address,address,uint256) (contracts/libraries/SafeToken.sol#55-66) has external calls inside a loop: (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n",
            "markdown": "[SafeToken.safeApprove(address,address,uint256)](contracts/libraries/SafeToken.sol#L55-L66) has external calls inside a loop: [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 66
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "73605c41323480d27f6a56e69dba6e97ccf551b41d3df51693995ba9d1969263"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "PortfolioPositionValue._quoteByPath(bytes,uint256,uint32,address) (contracts/portfolio/PortfolioPositionValue.sol#81-110) has external calls inside a loop: amountOut = healthContract.quoteTWAPPrice(IUniswapV3Pool(pool),tokenIn,uint128(amountIn),TWAPSeconds) (contracts/portfolio/PortfolioPositionValue.sol#101-106)\n",
            "markdown": "[PortfolioPositionValue._quoteByPath(bytes,uint256,uint32,address)](contracts/portfolio/PortfolioPositionValue.sol#L81-L110) has external calls inside a loop: [amountOut = healthContract.quoteTWAPPrice(IUniswapV3Pool(pool),tokenIn,uint128(amountIn),TWAPSeconds)](contracts/portfolio/PortfolioPositionValue.sol#L101-L106)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 110
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "83568a3e00ee3b236b39299810ed4e9310d921afc95b80a0f02919a8439720b0"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32) (contracts/portfolio/PortfolioPositionValue.sol#36-79) has external calls inside a loop: path = config.getPath(farm.baseToken(),vaultToken) (contracts/portfolio/PortfolioPositionValue.sol#67-70)\n",
            "markdown": "[PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32)](contracts/portfolio/PortfolioPositionValue.sol#L36-L79) has external calls inside a loop: [path = config.getPath(farm.baseToken(),vaultToken)](contracts/portfolio/PortfolioPositionValue.sol#L67-L70)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 79
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9ef649972f45ad6cddecd53b50ff2c32c4aa58a60537229078bf163cb88fb3f9"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "CustomPortfolio._swap(ISwapRouter,IPortfolioConfig,address,address,uint256,address) (contracts/portfolio/CustomPortfolio.sol#492-512) has external calls inside a loop: path = config.getPath(from,to) (contracts/portfolio/CustomPortfolio.sol#500)\n",
            "markdown": "[CustomPortfolio._swap(ISwapRouter,IPortfolioConfig,address,address,uint256,address)](contracts/portfolio/CustomPortfolio.sol#L492-L512) has external calls inside a loop: [path = config.getPath(from,to)](contracts/portfolio/CustomPortfolio.sol#L500)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 492,
                  "endLine": 512
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b609f491285e3ef2d5a48155870714f81b491d52c4386edf72e0ae45acf58d87"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b900f3513459f5c0a27dde1074fc0970a48138e3e0c0a174fdd6d20a51addc30"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32) (contracts/portfolio/PortfolioPositionValue.sol#36-79) has external calls inside a loop: farmValue = healthContract.health(farm,portfolio.ids(address(farm))) (contracts/portfolio/PortfolioPositionValue.sol#53-56)\n",
            "markdown": "[PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32)](contracts/portfolio/PortfolioPositionValue.sol#L36-L79) has external calls inside a loop: [farmValue = healthContract.health(farm,portfolio.ids(address(farm)))](contracts/portfolio/PortfolioPositionValue.sol#L53-L56)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 79
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bb5c525effc100200ba5e820c3c648726318bad41e8dede456541dc9145a5b74"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "CustomPortfolio._swap(ISwapRouter,IPortfolioConfig,address,address,uint256,address) (contracts/portfolio/CustomPortfolio.sol#492-512) has external calls inside a loop: amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n",
            "markdown": "[CustomPortfolio._swap(ISwapRouter,IPortfolioConfig,address,address,uint256,address)](contracts/portfolio/CustomPortfolio.sol#L492-L512) has external calls inside a loop: [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 492,
                  "endLine": 512
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c0bf205122c6fbacaae0ac6a2fa4931041366746cfd005abead73b114a8d6c95"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "CustomPortfolio.withdraw(uint256,uint256,uint256) (contracts/portfolio/CustomPortfolio.sol#321-399) has external calls inside a loop: vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0))) (contracts/portfolio/CustomPortfolio.sol#348-358)\n",
            "markdown": "[CustomPortfolio.withdraw(uint256,uint256,uint256)](contracts/portfolio/CustomPortfolio.sol#L321-L399) has external calls inside a loop: [vault.work(positionId,farms[i],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i]),abi.encode(normalizedPercentage,0)))](contracts/portfolio/CustomPortfolio.sol#L348-L358)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 321,
                  "endLine": 399
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c7256e88665df4d0dc4791de7c921cecbaf57ffcde678ae3d4f0f8026dce636d"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32) (contracts/portfolio/PortfolioPositionValue.sol#36-79) has external calls inside a loop: positionValue = FullMath.mulDiv(farmValue,share,portfolio.totalShares(address(farm))) (contracts/portfolio/PortfolioPositionValue.sol#58-62)\n",
            "markdown": "[PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32)](contracts/portfolio/PortfolioPositionValue.sol#L36-L79) has external calls inside a loop: [positionValue = FullMath.mulDiv(farmValue,share,portfolio.totalShares(address(farm)))](contracts/portfolio/PortfolioPositionValue.sol#L58-L62)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 79
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e18d1b91f8fff1082e70976968375a6a9a5e3629d63f4da243079d8c004ab70a"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0))) (contracts/portfolio/DynamicPortfolio.sol#71-81)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0)))](contracts/portfolio/DynamicPortfolio.sol#L71-L81)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e4e34b43aa5b1c332d20d356fb8cdb02d35d252e62776652427a100b68cc6c54"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "CustomPortfolio.positionLiquidies(uint256) (contracts/portfolio/CustomPortfolio.sol#165-190) has external calls inside a loop: totalLiquidity = FullMath.mulDiv(IFarmUniswapV3(farms[i]).totalLiquidity(),portfolioFarmShare(farms[i]),IFarmUniswapV3(farms[i]).totalShare()) (contracts/portfolio/CustomPortfolio.sol#176-180)\n",
            "markdown": "[CustomPortfolio.positionLiquidies(uint256)](contracts/portfolio/CustomPortfolio.sol#L165-L190) has external calls inside a loop: [totalLiquidity = FullMath.mulDiv(IFarmUniswapV3(farms[i]).totalLiquidity(),portfolioFarmShare(farms[i]),IFarmUniswapV3(farms[i]).totalShare())](contracts/portfolio/CustomPortfolio.sol#L176-L180)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 190
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e773cb33732a2bc319afff0b595b297a1575778b769380b7efef99a6da8a4d1f"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has external calls inside a loop: vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0))) (contracts/portfolio/DynamicPortfolio.sol#146-153)\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has external calls inside a loop: [vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0)))](contracts/portfolio/DynamicPortfolio.sol#L146-L153)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ed8f6cda12f2deaf4ddf137cefcab956dcb3564855283884210282bcb18128e2"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in VaultV3.work(uint256,address,uint256,uint256,uint256,bytes) (contracts/UniswapV3Vault.sol#377-473):\n\tExternal calls:\n\t- SafeToken.safeTransfer(token,farm,sendBalance) (contracts/UniswapV3Vault.sol#429)\n\t- liquidityChanged = IFarmUniswapV3(farm).work(id,msg.sender,debt,data) (contracts/UniswapV3Vault.sol#430-435)\n\t- _safeUnwrap(msg.sender,userReturn) (contracts/UniswapV3Vault.sol#455)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\t\t- SafeToken.safeTransfer(token,config.getWNativeRelayer(),amount) (contracts/UniswapV3Vault.sol#287)\n\t\t- IWNativeRelayer(config.getWNativeRelayer()).withdraw(amount) (contracts/UniswapV3Vault.sol#288)\n\t\t- SafeToken.safeTransferETH(to,amount) (contracts/UniswapV3Vault.sol#289)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- SafeToken.safeTransfer(token,to,amount) (contracts/UniswapV3Vault.sol#291)\n\t- onlyEOAorWhitelisted() (contracts/UniswapV3Vault.sol#387)\n\t\t- require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller) (contracts/UniswapV3Vault.sol#95-98)\n\t\t- ! config.whitelistedCallers(msg.sender) (contracts/UniswapV3Vault.sol#99)\n\t- transferTokenToVault(principalAmount) (contracts/UniswapV3Vault.sol#389)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- SafeToken.safeTransferFrom(token,msg.sender,address(this),value) (contracts/UniswapV3Vault.sol#136)\n\tExternal calls sending eth:\n\t- _safeUnwrap(msg.sender,userReturn) (contracts/UniswapV3Vault.sol#455)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\t- transferTokenToVault(principalAmount) (contracts/UniswapV3Vault.sol#389)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\tState variables written after the call(s):\n\t- POSITION_ID = _NO_ID (contracts/UniswapV3Vault.sol#470)\n\t- STRATEGY = _NO_ADDRESS (contracts/UniswapV3Vault.sol#471)\n\t- _SECONDARY_TOKEN_AMOUNT = 0 (contracts/UniswapV3Vault.sol#472)\n",
            "markdown": "Reentrancy in [VaultV3.work(uint256,address,uint256,uint256,uint256,bytes)](contracts/UniswapV3Vault.sol#L377-L473):\n\tExternal calls:\n\t- [SafeToken.safeTransfer(token,farm,sendBalance)](contracts/UniswapV3Vault.sol#L429)\n\t- [liquidityChanged = IFarmUniswapV3(farm).work(id,msg.sender,debt,data)](contracts/UniswapV3Vault.sol#L430-L435)\n\t- [_safeUnwrap(msg.sender,userReturn)](contracts/UniswapV3Vault.sol#L455)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\t\t- [SafeToken.safeTransfer(token,config.getWNativeRelayer(),amount)](contracts/UniswapV3Vault.sol#L287)\n\t\t- [IWNativeRelayer(config.getWNativeRelayer()).withdraw(amount)](contracts/UniswapV3Vault.sol#L288)\n\t\t- [SafeToken.safeTransferETH(to,amount)](contracts/UniswapV3Vault.sol#L289)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [SafeToken.safeTransfer(token,to,amount)](contracts/UniswapV3Vault.sol#L291)\n\t- [onlyEOAorWhitelisted()](contracts/UniswapV3Vault.sol#L387)\n\t\t- [require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller)](contracts/UniswapV3Vault.sol#L95-L98)\n\t\t- [! config.whitelistedCallers(msg.sender)](contracts/UniswapV3Vault.sol#L99)\n\t- [transferTokenToVault(principalAmount)](contracts/UniswapV3Vault.sol#L389)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [SafeToken.safeTransferFrom(token,msg.sender,address(this),value)](contracts/UniswapV3Vault.sol#L136)\n\tExternal calls sending eth:\n\t- [_safeUnwrap(msg.sender,userReturn)](contracts/UniswapV3Vault.sol#L455)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\t- [transferTokenToVault(principalAmount)](contracts/UniswapV3Vault.sol#L389)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\tState variables written after the call(s):\n\t- [POSITION_ID = _NO_ID](contracts/UniswapV3Vault.sol#L470)\n\t- [STRATEGY = _NO_ADDRESS](contracts/UniswapV3Vault.sol#L471)\n\t- [_SECONDARY_TOKEN_AMOUNT = 0](contracts/UniswapV3Vault.sol#L472)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 473
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "18b49f4ed7bd6f8e0c3411c079ce007197c328a99317992c18902480ed5d8ac6"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256) (contracts/portfolio/PortfolioFactory.sol#89-120):\n\tExternal calls:\n\t- portfolio = address(new BeaconProxy(dynamicPortfolioImplementation,)) (contracts/portfolio/PortfolioFactory.sol#93-95)\n\t- IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#98-101)\n\t- IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps) (contracts/portfolio/PortfolioFactory.sol#104-107)\n\tExternal calls sending eth:\n\t- IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps) (contracts/portfolio/PortfolioFactory.sol#104-107)\n\tState variables written after the call(s):\n\t- portfolioId = _totalPortfolio ++ (contracts/portfolio/PortfolioFactory.sol#109)\n\t- portfolios[portfolioId] = portfolio (contracts/portfolio/PortfolioFactory.sol#110)\n",
            "markdown": "Reentrancy in [PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256)](contracts/portfolio/PortfolioFactory.sol#L89-L120):\n\tExternal calls:\n\t- [portfolio = address(new BeaconProxy(dynamicPortfolioImplementation,))](contracts/portfolio/PortfolioFactory.sol#L93-L95)\n\t- [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L98-L101)\n\t- [IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps)](contracts/portfolio/PortfolioFactory.sol#L104-L107)\n\tExternal calls sending eth:\n\t- [IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps)](contracts/portfolio/PortfolioFactory.sol#L104-L107)\n\tState variables written after the call(s):\n\t- [portfolioId = _totalPortfolio ++](contracts/portfolio/PortfolioFactory.sol#L109)\n\t- [portfolios[portfolioId] = portfolio](contracts/portfolio/PortfolioFactory.sol#L110)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 120
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "231316567bb3aa846c32c48d63a9029b22d979727cab600b217587fdd119271c"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in VaultV3.requestFunds(address,uint256) (contracts/UniswapV3Vault.sol#268-280):\n\tExternal calls:\n\t- SafeToken.safeTransferFrom(targetedToken,positions[POSITION_ID].owner,msg.sender,amount) (contracts/UniswapV3Vault.sol#272-277)\n\tState variables written after the call(s):\n\t- _SECONDARY_TOKEN_AMOUNT = amount (contracts/UniswapV3Vault.sol#279)\n",
            "markdown": "Reentrancy in [VaultV3.requestFunds(address,uint256)](contracts/UniswapV3Vault.sol#L268-L280):\n\tExternal calls:\n\t- [SafeToken.safeTransferFrom(targetedToken,positions[POSITION_ID].owner,msg.sender,amount)](contracts/UniswapV3Vault.sol#L272-L277)\n\tState variables written after the call(s):\n\t- [_SECONDARY_TOKEN_AMOUNT = amount](contracts/UniswapV3Vault.sol#L279)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 268,
                  "endLine": 280
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "70bf84797bcbc62b550dd1550c63afcf86581af71aecb60cb469b27066e4f1f5"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in UniswapV3Farm._collectFee() (contracts/farms/uniswapV3/UniswapV3Farm.sol#840-858):\n\tExternal calls:\n\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\tState variables written after the call(s):\n\t- pendingBaseToken = pendingBaseToken + (collected0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#852)\n\t- pendingBaseToken = pendingBaseToken + (collected1) (contracts/farms/uniswapV3/UniswapV3Farm.sol#855)\n\t- pendingFarmingToken = pendingFarmingToken + (collected1) (contracts/farms/uniswapV3/UniswapV3Farm.sol#853)\n\t- pendingFarmingToken = pendingFarmingToken + (collected0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#856)\n",
            "markdown": "Reentrancy in [UniswapV3Farm._collectFee()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L840-L858):\n\tExternal calls:\n\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\tState variables written after the call(s):\n\t- [pendingBaseToken = pendingBaseToken + (collected0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L852)\n\t- [pendingBaseToken = pendingBaseToken + (collected1)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L855)\n\t- [pendingFarmingToken = pendingFarmingToken + (collected1)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L853)\n\t- [pendingFarmingToken = pendingFarmingToken + (collected0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L856)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 840,
                  "endLine": 858
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "70d238b8cfbab4425d206f24452f1fca06d8db2ba7432e6d5f092bef3eb6d0b2"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.work(uint256,address,uint256,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#206-247):\n\tExternal calls:\n\t- _reinvest(treasuryAccount,treasuryBountyBps,reinvestThreshold) (contracts/farms/uniswapV3/UniswapV3Farm.sol#220)\n\t\t- (collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#841-848)\n\t\t- baseToken.safeApprove(address(router),type()(uint256).max) (contracts/farms/uniswapV3/UniswapV3Farm.sol#795)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#796-804)\n\t\t- beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance()) (contracts/farms/uniswapV3/UniswapV3Farm.sol#806-809)\n\t\t- baseToken.safeApprove(address(router),0) (contracts/farms/uniswapV3/UniswapV3Farm.sol#817)\n\t\t- farmingToken.safeApprove(address(router),pendingFarmingToken) (contracts/farms/uniswapV3/UniswapV3Farm.sol#676)\n\t\t- amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#679-690)\n\t\t- baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty)) (contracts/farms/uniswapV3/UniswapV3Farm.sol#704-707)\n\t\t- baseToken.safeTransfer(address(addStrat),reinvestAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#713)\n\t\t- positionManager.setApprovalForAll(address(addStrat),true) (contracts/farms/uniswapV3/UniswapV3Farm.sol#714)\n\t\t- addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0))) (contracts/farms/uniswapV3/UniswapV3Farm.sol#716-721)\n\t\t- positionManager.setApprovalForAll(address(addStrat),false) (contracts/farms/uniswapV3/UniswapV3Farm.sol#728)\n\tState variables written after the call(s):\n\t- (liquidity,remainingLiquidity) = _removeShare(id) (contracts/farms/uniswapV3/UniswapV3Farm.sol#224)\n\t\t- shares[id] = 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#762)\n\t- (liquidity,remainingLiquidity) = _removeShare(id) (contracts/farms/uniswapV3/UniswapV3Farm.sol#224)\n\t\t- totalShare = totalShare - (share) (contracts/farms/uniswapV3/UniswapV3Farm.sol#761)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.work(uint256,address,uint256,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L206-L247):\n\tExternal calls:\n\t- [_reinvest(treasuryAccount,treasuryBountyBps,reinvestThreshold)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L220)\n\t\t- [(collected0,collected1) = positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:positionId,recipient:address(this),amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L841-L848)\n\t\t- [baseToken.safeApprove(address(router),type()(uint256).max)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L795)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:rewardPath,recipient:address(this),deadline:block.timestamp,amountIn:_beneficialVaultBounty,amountOutMinimum:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L796-L804)\n\t\t- [beneficialVaultToken.safeTransfer(address(beneficialVault),beneficialVaultToken.myBalance())](contracts/farms/uniswapV3/UniswapV3Farm.sol#L806-L809)\n\t\t- [baseToken.safeApprove(address(router),0)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L817)\n\t\t- [farmingToken.safeApprove(address(router),pendingFarmingToken)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L676)\n\t\t- [amountOut = router.exactInputSingle(ISwapRouter.ExactInputSingleParams({tokenIn:farmingToken,tokenOut:baseToken,fee:fee,recipient:address(this),deadline:block.timestamp,amountIn:pendingFarmingToken,amountOutMinimum:0,sqrtPriceLimitX96:0}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L679-L690)\n\t\t- [baseToken.safeTransfer(_treasuryAccount,bounty - (beneficialVaultBounty))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L704-L707)\n\t\t- [baseToken.safeTransfer(address(addStrat),reinvestAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L713)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),true)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L714)\n\t\t- [addStrat.execute(address(0),address(0),0,abi.encode(0,abi.encode(0)))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L716-L721)\n\t\t- [positionManager.setApprovalForAll(address(addStrat),false)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L728)\n\tState variables written after the call(s):\n\t- [(liquidity,remainingLiquidity) = _removeShare(id)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L224)\n\t\t- [shares[id] = 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L762)\n\t- [(liquidity,remainingLiquidity) = _removeShare(id)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L224)\n\t\t- [totalShare = totalShare - (share)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L761)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 247
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "86fd26e7794e56161951db9e842e9c3f2a40391de423331c627c0290e8906cf3"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in DynamicPortfolio.initialize(ICustomPortfolio.PortfolioInitData,uint256) (contracts/portfolio/DynamicPortfolio.sol#22-34):\n\tExternal calls:\n\t- __CustomPortfolio_init(initData) (contracts/portfolio/DynamicPortfolio.sol#30)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\t\t- IWETH(wNative).withdraw(amount) (contracts/portfolio/CustomPortfolio.sol#475)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- SafeToken.safeTransferETH(to,amount) (contracts/portfolio/CustomPortfolio.sol#476)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- SafeToken.safeTransfer(token,to,amount) (contracts/portfolio/CustomPortfolio.sol#478)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\t\t- SafeToken.safeTransferFrom(_token,_user,address(this),_value) (contracts/portfolio/CustomPortfolio.sol#461)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\t\t- vaultToken.safeApprove(address(vault),farmAmount) (contracts/portfolio/CustomPortfolio.sol#273)\n\t\t- (liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i]) (contracts/portfolio/CustomPortfolio.sol#275-282)\n\tExternal calls sending eth:\n\t- __CustomPortfolio_init(initData) (contracts/portfolio/DynamicPortfolio.sol#30)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\tState variables written after the call(s):\n\t- annualRebalanceBountyBps = _annualRebalanceBountyBps (contracts/portfolio/DynamicPortfolio.sol#33)\n",
            "markdown": "Reentrancy in [DynamicPortfolio.initialize(ICustomPortfolio.PortfolioInitData,uint256)](contracts/portfolio/DynamicPortfolio.sol#L22-L34):\n\tExternal calls:\n\t- [__CustomPortfolio_init(initData)](contracts/portfolio/DynamicPortfolio.sol#L30)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\t\t- [IWETH(wNative).withdraw(amount)](contracts/portfolio/CustomPortfolio.sol#L475)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [SafeToken.safeTransferETH(to,amount)](contracts/portfolio/CustomPortfolio.sol#L476)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [SafeToken.safeTransfer(token,to,amount)](contracts/portfolio/CustomPortfolio.sol#L478)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\t\t- [SafeToken.safeTransferFrom(_token,_user,address(this),_value)](contracts/portfolio/CustomPortfolio.sol#L461)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\t\t- [vaultToken.safeApprove(address(vault),farmAmount)](contracts/portfolio/CustomPortfolio.sol#L273)\n\t\t- [(liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i])](contracts/portfolio/CustomPortfolio.sol#L275-L282)\n\tExternal calls sending eth:\n\t- [__CustomPortfolio_init(initData)](contracts/portfolio/DynamicPortfolio.sol#L30)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\tState variables written after the call(s):\n\t- [annualRebalanceBountyBps = _annualRebalanceBountyBps](contracts/portfolio/DynamicPortfolio.sol#L33)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 34
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c857ff3a0528a67ca684313a3b79b0bd90a6de702f49c4d5188ef5c8fbf92b8f"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#538-574):\n\tExternal calls:\n\t- _buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#562)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#773-776)\n\tState variables written after the call(s):\n\t- beneficialVaultBountyBps = _beneficialVaultBountyBps (contracts/farms/uniswapV3/UniswapV3Farm.sol#564)\n\t- rewardPath = _rewardPath (contracts/farms/uniswapV3/UniswapV3Farm.sol#566)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L538-L574):\n\tExternal calls:\n\t- [_buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L562)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L773-L776)\n\tState variables written after the call(s):\n\t- [beneficialVaultBountyBps = _beneficialVaultBountyBps](contracts/farms/uniswapV3/UniswapV3Farm.sol#L564)\n\t- [rewardPath = _rewardPath](contracts/farms/uniswapV3/UniswapV3Farm.sol#L566)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 538,
                  "endLine": 574
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d64d7f55af8a9f13105bd763dc35e571452d39affb3c97ecb3183565208b854b"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in VaultV3.addCollateral(uint256,uint256,bool,bytes) (contracts/UniswapV3Vault.sol#300-368):\n\tExternal calls:\n\t- require(bool,string)(config.approvedAddStrategies(STRATEGY),!approved strat) (contracts/UniswapV3Vault.sol#327)\n\t- SafeToken.safeTransfer(token,farm,amount) (contracts/UniswapV3Vault.sol#336)\n\t- IFarmUniswapV3(farm).work(id,msg.sender,debt,data) (contracts/UniswapV3Vault.sol#337)\n\t- onlyEOAorWhitelisted() (contracts/UniswapV3Vault.sol#308)\n\t\t- require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller) (contracts/UniswapV3Vault.sol#95-98)\n\t\t- ! config.whitelistedCallers(msg.sender) (contracts/UniswapV3Vault.sol#99)\n\t- transferTokenToVault(amount) (contracts/UniswapV3Vault.sol#310)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- SafeToken.safeTransferFrom(token,msg.sender,address(this),value) (contracts/UniswapV3Vault.sol#136)\n\tExternal calls sending eth:\n\t- transferTokenToVault(amount) (contracts/UniswapV3Vault.sol#310)\n\t\t- IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}() (contracts/UniswapV3Vault.sol#134)\n\tState variables written after the call(s):\n\t- POSITION_ID = _NO_ID (contracts/UniswapV3Vault.sol#359)\n",
            "markdown": "Reentrancy in [VaultV3.addCollateral(uint256,uint256,bool,bytes)](contracts/UniswapV3Vault.sol#L300-L368):\n\tExternal calls:\n\t- [require(bool,string)(config.approvedAddStrategies(STRATEGY),!approved strat)](contracts/UniswapV3Vault.sol#L327)\n\t- [SafeToken.safeTransfer(token,farm,amount)](contracts/UniswapV3Vault.sol#L336)\n\t- [IFarmUniswapV3(farm).work(id,msg.sender,debt,data)](contracts/UniswapV3Vault.sol#L337)\n\t- [onlyEOAorWhitelisted()](contracts/UniswapV3Vault.sol#L308)\n\t\t- [require(bool,string)(config.whitelistedCallers(msg.sender),!whitelisted caller)](contracts/UniswapV3Vault.sol#L95-L98)\n\t\t- [! config.whitelistedCallers(msg.sender)](contracts/UniswapV3Vault.sol#L99)\n\t- [transferTokenToVault(amount)](contracts/UniswapV3Vault.sol#L310)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [SafeToken.safeTransferFrom(token,msg.sender,address(this),value)](contracts/UniswapV3Vault.sol#L136)\n\tExternal calls sending eth:\n\t- [transferTokenToVault(amount)](contracts/UniswapV3Vault.sol#L310)\n\t\t- [IWETH(config.getWrappedNativeAddr()).deposit{value: msg.value}()](contracts/UniswapV3Vault.sol#L134)\n\tState variables written after the call(s):\n\t- [POSITION_ID = _NO_ID](contracts/UniswapV3Vault.sol#L359)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 368
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "db58b37f1747783815e4f153382992a2e68c3d273dc827299dc9b317ad64a5f2"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData) (contracts/portfolio/PortfolioFactory.sol#62-87):\n\tExternal calls:\n\t- portfolio = address(new BeaconProxy(customPortfolioImplementation,)) (contracts/portfolio/PortfolioFactory.sol#65)\n\t- IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#68-71)\n\t- ICustomPortfolio(portfolio).initialize{value: msg.value}(initData) (contracts/portfolio/PortfolioFactory.sol#74)\n\tExternal calls sending eth:\n\t- ICustomPortfolio(portfolio).initialize{value: msg.value}(initData) (contracts/portfolio/PortfolioFactory.sol#74)\n\tState variables written after the call(s):\n\t- portfolioId = _totalPortfolio ++ (contracts/portfolio/PortfolioFactory.sol#76)\n\t- portfolios[portfolioId] = portfolio (contracts/portfolio/PortfolioFactory.sol#77)\n",
            "markdown": "Reentrancy in [PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData)](contracts/portfolio/PortfolioFactory.sol#L62-L87):\n\tExternal calls:\n\t- [portfolio = address(new BeaconProxy(customPortfolioImplementation,))](contracts/portfolio/PortfolioFactory.sol#L65)\n\t- [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L68-L71)\n\t- [ICustomPortfolio(portfolio).initialize{value: msg.value}(initData)](contracts/portfolio/PortfolioFactory.sol#L74)\n\tExternal calls sending eth:\n\t- [ICustomPortfolio(portfolio).initialize{value: msg.value}(initData)](contracts/portfolio/PortfolioFactory.sol#L74)\n\tState variables written after the call(s):\n\t- [portfolioId = _totalPortfolio ++](contracts/portfolio/PortfolioFactory.sol#L76)\n\t- [portfolios[portfolioId] = portfolio](contracts/portfolio/PortfolioFactory.sol#L77)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 87
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f78f24aada06dc0c683ceb704dd9c2e23b9e6cd43e5ac65de8d64a0289a5791a"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#538-574):\n\tExternal calls:\n\t- _buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#562)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#773-776)\n\tEvent emitted after the call(s):\n\t- SetBeneficialVaultConfig(msg.sender,_beneficialVaultBountyBps,address(_beneficialVault),_rewardPath) (contracts/farms/uniswapV3/UniswapV3Farm.sol#568-573)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L538-L574):\n\tExternal calls:\n\t- [_buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L562)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L773-L776)\n\tEvent emitted after the call(s):\n\t- [SetBeneficialVaultConfig(msg.sender,_beneficialVaultBountyBps,address(_beneficialVault),_rewardPath)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L568-L573)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 538,
                  "endLine": 574
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "144ea152ee09d56e989593d7cad8d868639cd7a1bdbb19eb1ff5303a063a2ce4"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData) (contracts/portfolio/PortfolioFactory.sol#62-87):\n\tExternal calls:\n\t- portfolio = address(new BeaconProxy(customPortfolioImplementation,)) (contracts/portfolio/PortfolioFactory.sol#65)\n\t- IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#68-71)\n\t- ICustomPortfolio(portfolio).initialize{value: msg.value}(initData) (contracts/portfolio/PortfolioFactory.sol#74)\n\tExternal calls sending eth:\n\t- ICustomPortfolio(portfolio).initialize{value: msg.value}(initData) (contracts/portfolio/PortfolioFactory.sol#74)\n\tEvent emitted after the call(s):\n\t- CustomPortfolioCreated(portfolioId,initData.name,initData.farms,initData.weights,portfolio,initData.token) (contracts/portfolio/PortfolioFactory.sol#79-86)\n",
            "markdown": "Reentrancy in [PortfolioFactory.createCustomPortfolio(ICustomPortfolio.PortfolioInitData)](contracts/portfolio/PortfolioFactory.sol#L62-L87):\n\tExternal calls:\n\t- [portfolio = address(new BeaconProxy(customPortfolioImplementation,))](contracts/portfolio/PortfolioFactory.sol#L65)\n\t- [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L68-L71)\n\t- [ICustomPortfolio(portfolio).initialize{value: msg.value}(initData)](contracts/portfolio/PortfolioFactory.sol#L74)\n\tExternal calls sending eth:\n\t- [ICustomPortfolio(portfolio).initialize{value: msg.value}(initData)](contracts/portfolio/PortfolioFactory.sol#L74)\n\tEvent emitted after the call(s):\n\t- [CustomPortfolioCreated(portfolioId,initData.name,initData.farms,initData.weights,portfolio,initData.token)](contracts/portfolio/PortfolioFactory.sol#L79-L86)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 87
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "45b3fc795ed23bbb51303cc2db2655a9b33bc74c6faf464b6a0bd501c9e58111"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in CustomPortfolio._deposit(uint256,address,uint256,bytes[]) (contracts/portfolio/CustomPortfolio.sol#219-319):\n\tExternal calls:\n\t- _transferTokenToVault(_token,caller,amount) (contracts/portfolio/CustomPortfolio.sol#233)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\t\t- SafeToken.safeTransferFrom(_token,_user,address(this),_value) (contracts/portfolio/CustomPortfolio.sol#461)\n\t- farmAmount = _swap(router,config,_token,vaultToken,farmAmount,address(this)) (contracts/portfolio/CustomPortfolio.sol#263-270)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t- vaultToken.safeApprove(address(vault),farmAmount) (contracts/portfolio/CustomPortfolio.sol#273)\n\t- (liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i]) (contracts/portfolio/CustomPortfolio.sol#275-282)\n\t- totalReturn = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/CustomPortfolio.sol#303-309)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\t- _safeUnwrap(_token,wNative,caller,totalReturn) (contracts/portfolio/CustomPortfolio.sol#311)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\t\t- IWETH(wNative).withdraw(amount) (contracts/portfolio/CustomPortfolio.sol#475)\n\t\t- SafeToken.safeTransferETH(to,amount) (contracts/portfolio/CustomPortfolio.sol#476)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n\t\t- SafeToken.safeTransfer(token,to,amount) (contracts/portfolio/CustomPortfolio.sol#478)\n\tExternal calls sending eth:\n\t- _transferTokenToVault(_token,caller,amount) (contracts/portfolio/CustomPortfolio.sol#233)\n\t\t- IWETH(wNative).deposit{value: msg.value}() (contracts/portfolio/CustomPortfolio.sol#459)\n\t- totalReturn = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/CustomPortfolio.sol#303-309)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\t- _safeUnwrap(_token,wNative,caller,totalReturn) (contracts/portfolio/CustomPortfolio.sol#311)\n\t\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n\tEvent emitted after the call(s):\n\t- PortfolioDeposit(tokenId,caller,_token,amount - totalReturn,_shares) (contracts/portfolio/CustomPortfolio.sol#312-318)\n",
            "markdown": "Reentrancy in [CustomPortfolio._deposit(uint256,address,uint256,bytes[])](contracts/portfolio/CustomPortfolio.sol#L219-L319):\n\tExternal calls:\n\t- [_transferTokenToVault(_token,caller,amount)](contracts/portfolio/CustomPortfolio.sol#L233)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\t\t- [SafeToken.safeTransferFrom(_token,_user,address(this),_value)](contracts/portfolio/CustomPortfolio.sol#L461)\n\t- [farmAmount = _swap(router,config,_token,vaultToken,farmAmount,address(this))](contracts/portfolio/CustomPortfolio.sol#L263-L270)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t- [vaultToken.safeApprove(address(vault),farmAmount)](contracts/portfolio/CustomPortfolio.sol#L273)\n\t- [(liquidityChanged) = vault.work(positionId,farm,farmAmount,0,0,data[i])](contracts/portfolio/CustomPortfolio.sol#L275-L282)\n\t- [totalReturn = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/CustomPortfolio.sol#L303-L309)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\t- [_safeUnwrap(_token,wNative,caller,totalReturn)](contracts/portfolio/CustomPortfolio.sol#L311)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\t\t- [IWETH(wNative).withdraw(amount)](contracts/portfolio/CustomPortfolio.sol#L475)\n\t\t- [SafeToken.safeTransferETH(to,amount)](contracts/portfolio/CustomPortfolio.sol#L476)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n\t\t- [SafeToken.safeTransfer(token,to,amount)](contracts/portfolio/CustomPortfolio.sol#L478)\n\tExternal calls sending eth:\n\t- [_transferTokenToVault(_token,caller,amount)](contracts/portfolio/CustomPortfolio.sol#L233)\n\t\t- [IWETH(wNative).deposit{value: msg.value}()](contracts/portfolio/CustomPortfolio.sol#L459)\n\t- [totalReturn = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/CustomPortfolio.sol#L303-L309)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\t- [_safeUnwrap(_token,wNative,caller,totalReturn)](contracts/portfolio/CustomPortfolio.sol#L311)\n\t\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n\tEvent emitted after the call(s):\n\t- [PortfolioDeposit(tokenId,caller,_token,amount - totalReturn,_shares)](contracts/portfolio/CustomPortfolio.sol#L312-L318)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 319
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4fcc63ea7033916df2f3b1837b3f2a756fd45c42ebbbf6d264e2bf596136b496"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in UniswapV3Farm.setPositionId(uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#596-629):\n\tExternal calls:\n\t- positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#608-616)\n\t- positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max})) (contracts/farms/uniswapV3/UniswapV3Farm.sol#618-625)\n\tEvent emitted after the call(s):\n\t- SetPositionId(msg.sender,positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#634)\n\t\t- _setPosition(_positionId) (contracts/farms/uniswapV3/UniswapV3Farm.sol#628)\n",
            "markdown": "Reentrancy in [UniswapV3Farm.setPositionId(uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596-L629):\n\tExternal calls:\n\t- [positionManager.decreaseLiquidity(INonfungiblePositionManager.DecreaseLiquidityParams({tokenId:_positionId,liquidity:liquidity,amount0Min:0,amount1Min:0,deadline:block.timestamp}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L608-L616)\n\t- [positionManager.collect(INonfungiblePositionManager.CollectParams({tokenId:_positionId,recipient:msg.sender,amount0Max:type()(uint128).max,amount1Max:type()(uint128).max}))](contracts/farms/uniswapV3/UniswapV3Farm.sol#L618-L625)\n\tEvent emitted after the call(s):\n\t- [SetPositionId(msg.sender,positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L634)\n\t\t- [_setPosition(_positionId)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L628)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 629
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8009b455b09ac8e6008dc746db200e53b06491ba60589aec653e0044bbe99310"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167):\n\tExternal calls:\n\t- vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0))) (contracts/portfolio/DynamicPortfolio.sol#71-81)\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\t- _swap(router,config,vaultToken,_token,balance,address(this)) (contracts/portfolio/DynamicPortfolio.sol#102-109)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- token.safeTransfer(msg.sender,rebalanceFee) (contracts/portfolio/DynamicPortfolio.sol#119)\n\t- farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this)) (contracts/portfolio/DynamicPortfolio.sol#135-142)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t- vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount) (contracts/portfolio/DynamicPortfolio.sol#144)\n\t- vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0))) (contracts/portfolio/DynamicPortfolio.sol#146-153)\n\t- _pendingToken = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/DynamicPortfolio.sol#157-163)\n\t\t- from.safeApprove(address(router),amount) (contracts/portfolio/CustomPortfolio.sol#502)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0})) (contracts/portfolio/CustomPortfolio.sol#503-511)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\tExternal calls sending eth:\n\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/DynamicPortfolio.sol#94)\n\t- _pendingToken = _returnToken(config,router,_token,wNative,farms) (contracts/portfolio/DynamicPortfolio.sol#157-163)\n\t\t- IWETH(wNative).deposit{value: totalReturn}() (contracts/portfolio/CustomPortfolio.sol#412)\n\t\t- IWETH(wNative).deposit{value: balance}() (contracts/portfolio/CustomPortfolio.sol#430)\n\tEvent emitted after the call(s):\n\t- Rebalance(msg.sender,rebalanceFee,_weights) (contracts/portfolio/DynamicPortfolio.sol#166)\n",
            "markdown": "Reentrancy in [DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167):\n\tExternal calls:\n\t- [vault.work(positionId,farms[i_scope_0],0,0,0,abi.encode(config.approvedWithdrawStrategies(farms[i_scope_0]),abi.encode(BASIS_POINTS,0)))](contracts/portfolio/DynamicPortfolio.sol#L71-L81)\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\t- [_swap(router,config,vaultToken,_token,balance,address(this))](contracts/portfolio/DynamicPortfolio.sol#L102-L109)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [token.safeTransfer(msg.sender,rebalanceFee)](contracts/portfolio/DynamicPortfolio.sol#L119)\n\t- [farmAmount = _swap(router,config,_token,vaultToken_scope_6,farmAmount,address(this))](contracts/portfolio/DynamicPortfolio.sol#L135-L142)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t- [vaultToken_scope_6.safeApprove(address(vault_scope_4),farmAmount)](contracts/portfolio/DynamicPortfolio.sol#L144)\n\t- [vault_scope_4.work(positionId_scope_5,farm,farmAmount,0,0,abi.encode(config.approvedAddStrategies(farm),abi.encode(0)))](contracts/portfolio/DynamicPortfolio.sol#L146-L153)\n\t- [_pendingToken = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/DynamicPortfolio.sol#L157-L163)\n\t\t- [from.safeApprove(address(router),amount)](contracts/portfolio/CustomPortfolio.sol#L502)\n\t\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [amountOut = router.exactInput(ISwapRouter.ExactInputParams({path:path,recipient:recipient,deadline:block.timestamp,amountIn:amount,amountOutMinimum:0}))](contracts/portfolio/CustomPortfolio.sol#L503-L511)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\tExternal calls sending eth:\n\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/DynamicPortfolio.sol#L94)\n\t- [_pendingToken = _returnToken(config,router,_token,wNative,farms)](contracts/portfolio/DynamicPortfolio.sol#L157-L163)\n\t\t- [IWETH(wNative).deposit{value: totalReturn}()](contracts/portfolio/CustomPortfolio.sol#L412)\n\t\t- [IWETH(wNative).deposit{value: balance}()](contracts/portfolio/CustomPortfolio.sol#L430)\n\tEvent emitted after the call(s):\n\t- [Rebalance(msg.sender,rebalanceFee,_weights)](contracts/portfolio/DynamicPortfolio.sol#L166)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "87c097f00d72bd146d0bfbaceb9e9b2c3fa86f934f9c9ea6b92e21b3af076789"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256) (contracts/portfolio/PortfolioFactory.sol#89-120):\n\tExternal calls:\n\t- portfolio = address(new BeaconProxy(dynamicPortfolioImplementation,)) (contracts/portfolio/PortfolioFactory.sol#93-95)\n\t- IERC20(initData.token).approve(portfolio,initData.initialDepositAmount) (contracts/portfolio/PortfolioFactory.sol#98-101)\n\t- IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps) (contracts/portfolio/PortfolioFactory.sol#104-107)\n\tExternal calls sending eth:\n\t- IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps) (contracts/portfolio/PortfolioFactory.sol#104-107)\n\tEvent emitted after the call(s):\n\t- CustomPortfolioCreated(portfolioId,initData.name,initData.farms,initData.weights,portfolio,initData.token) (contracts/portfolio/PortfolioFactory.sol#112-119)\n",
            "markdown": "Reentrancy in [PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256)](contracts/portfolio/PortfolioFactory.sol#L89-L120):\n\tExternal calls:\n\t- [portfolio = address(new BeaconProxy(dynamicPortfolioImplementation,))](contracts/portfolio/PortfolioFactory.sol#L93-L95)\n\t- [IERC20(initData.token).approve(portfolio,initData.initialDepositAmount)](contracts/portfolio/PortfolioFactory.sol#L98-L101)\n\t- [IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps)](contracts/portfolio/PortfolioFactory.sol#L104-L107)\n\tExternal calls sending eth:\n\t- [IDynamicPortfolio(portfolio).initialize{value: msg.value}(initData,_annualRebalanceBountyBps)](contracts/portfolio/PortfolioFactory.sol#L104-L107)\n\tEvent emitted after the call(s):\n\t- [CustomPortfolioCreated(portfolioId,initData.name,initData.farms,initData.weights,portfolio,initData.token)](contracts/portfolio/PortfolioFactory.sol#L112-L119)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 120
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f59156dbec28a2c2db40d6df24264d9ec6c30a826266384ad17db6eda7684848"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in UniswapV3Farm._buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#769-782):\n\tExternal calls:\n\t- beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#773-776)\n\tEvent emitted after the call(s):\n\t- BeneficialVaultTokenBuyback(msg.sender,address(beneficialVault),_buybackAmount) (contracts/farms/uniswapV3/UniswapV3Farm.sol#777-781)\n",
            "markdown": "Reentrancy in [UniswapV3Farm._buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L769-L782):\n\tExternal calls:\n\t- [beneficialVault.token().safeTransfer(address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L773-L776)\n\tEvent emitted after the call(s):\n\t- [BeneficialVaultTokenBuyback(msg.sender,address(beneficialVault),_buybackAmount)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L777-L781)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 769,
                  "endLine": 782
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f730576072a792a7a1a7d94ffb0fc8cf4628a353326d26042ee36c00ced7c26f"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "UniswapV3FarmConfig.isStable(address) (contracts/farms/UniswapV3FarmConfig.sol#99-129) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(lastUpdate >= block.timestamp - 86400,FarmConfig::isStable:: price too stale) (contracts/farms/UniswapV3FarmConfig.sol#105-108)\n",
            "markdown": "[UniswapV3FarmConfig.isStable(address)](contracts/farms/UniswapV3FarmConfig.sol#L99-L129) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(lastUpdate >= block.timestamp - 86400,FarmConfig::isStable:: price too stale)](contracts/farms/UniswapV3FarmConfig.sol#L105-L108)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 129
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "332a86e62712f905ce8020f2c89fa69461cf9289dc456997ea7e490479335a70"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.pendingInterest(uint256) (contracts/UniswapV3Vault.sol#187-196) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > lastAccrueTime (contracts/UniswapV3Vault.sol#188)\n",
            "markdown": "[VaultV3.pendingInterest(uint256)](contracts/UniswapV3Vault.sol#L187-L196) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp > lastAccrueTime](contracts/UniswapV3Vault.sol#L188)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 196
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4bd345d31b59806d0d1179bf5f1421083f867ad6cf7a735a7981e81afbfd4754"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.kill(uint256) (contracts/UniswapV3Vault.sol#477-523) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(health * killFactor < debt * 10000,can't liquidate) (contracts/UniswapV3Vault.sol#496)\n\t- left > 0 (contracts/UniswapV3Vault.sol#516)\n\t- rest > debt (contracts/UniswapV3Vault.sol#515)\n",
            "markdown": "[VaultV3.kill(uint256)](contracts/UniswapV3Vault.sol#L477-L523) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(health * killFactor < debt * 10000,can't liquidate)](contracts/UniswapV3Vault.sol#L496)\n\t- [left > 0](contracts/UniswapV3Vault.sol#L516)\n\t- [rest > debt](contracts/UniswapV3Vault.sol#L515)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 477,
                  "endLine": 523
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "69ea3708f2a14830e87372ef3b492da9bf754595b3a16966eb3beffaf7be1913"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "UniswapV3Farm._reinvest(address,uint256,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#641-731) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- pendingBaseToken == 0 && pendingFarmingToken == 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#648)\n\t- reward <= _reinvestThreshold (contracts/farms/uniswapV3/UniswapV3Farm.sol#670)\n\t- bounty > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#698)\n\t- beneficialVaultBounty > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#701)\n",
            "markdown": "[UniswapV3Farm._reinvest(address,uint256,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L641-L731) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [pendingBaseToken == 0 && pendingFarmingToken == 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L648)\n\t- [reward <= _reinvestThreshold](contracts/farms/uniswapV3/UniswapV3Farm.sol#L670)\n\t- [bounty > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L698)\n\t- [beneficialVaultBounty > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L701)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 641,
                  "endLine": 731
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "722129f4ca89dfd66973123035955feef794e8d1fbcfbc5ad661b98477ae52cb"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "UniswapV3Farm.work(uint256,address,uint256,bytes) (contracts/farms/uniswapV3/UniswapV3Farm.sol#206-247) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- actualBaseTokenBalance() > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#232)\n",
            "markdown": "[UniswapV3Farm.work(uint256,address,uint256,bytes)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L206-L247) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [actualBaseTokenBalance() > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L232)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 247
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8daa5e77d223d29fe971d8e646f737c614a4d1750c7a12ff59c3747c964bfddc"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.withdraw(uint256) (contracts/UniswapV3Vault.sol#256-265) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(totalSupply() > MINIMUM_SHARE,no tiny shares) (contracts/UniswapV3Vault.sol#262)\n",
            "markdown": "[VaultV3.withdraw(uint256)](contracts/UniswapV3Vault.sol#L256-L265) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(totalSupply() > MINIMUM_SHARE,no tiny shares)](contracts/UniswapV3Vault.sol#L262)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 256,
                  "endLine": 265
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9426b8afebc58b88b4c15bf3d3e7fab9440b5fe7e6ff22a05758c47339c47b80"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "UniswapV3Farm.rebalance(int24,int24,uint256) (contracts/farms/uniswapV3/UniswapV3Farm.sol#287-388) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _lastRebalanceTime < block.timestamp (contracts/farms/uniswapV3/UniswapV3Farm.sol#334)\n\t- feeBaseToken > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#355)\n\t- feeFarmingToken > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#359)\n\t- totalBaseToken > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#367)\n\t- totalFarmingToken > 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#369)\n\t- duration > 86400 (contracts/farms/uniswapV3/UniswapV3Farm.sol#340)\n",
            "markdown": "[UniswapV3Farm.rebalance(int24,int24,uint256)](contracts/farms/uniswapV3/UniswapV3Farm.sol#L287-L388) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [_lastRebalanceTime < block.timestamp](contracts/farms/uniswapV3/UniswapV3Farm.sol#L334)\n\t- [feeBaseToken > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L355)\n\t- [feeFarmingToken > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L359)\n\t- [totalBaseToken > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L367)\n\t- [totalFarmingToken > 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L369)\n\t- [duration > 86400](contracts/farms/uniswapV3/UniswapV3Farm.sol#L340)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 287,
                  "endLine": 388
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a83b367b59cc7ca3b62c3415c824e91a290e05436835d2d7440472bb18d39459"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.work(uint256,address,uint256,uint256,uint256,bytes) (contracts/UniswapV3Vault.sol#377-473) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- debt > 0 (contracts/UniswapV3Vault.sol#442)\n\t- require(bool,string)(debt >= config.minDebtSize(),too small debt size) (contracts/UniswapV3Vault.sol#443)\n\t- require(bool,string)(health * workFactor >= debt * 10000,bad work factor) (contracts/UniswapV3Vault.sol#449)\n\t- back > lessDebt (contracts/UniswapV3Vault.sol#453)\n",
            "markdown": "[VaultV3.work(uint256,address,uint256,uint256,uint256,bytes)](contracts/UniswapV3Vault.sol#L377-L473) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [debt > 0](contracts/UniswapV3Vault.sol#L442)\n\t- [require(bool,string)(debt >= config.minDebtSize(),too small debt size)](contracts/UniswapV3Vault.sol#L443)\n\t- [require(bool,string)(health * workFactor >= debt * 10000,bad work factor)](contracts/UniswapV3Vault.sol#L449)\n\t- [back > lessDebt](contracts/UniswapV3Vault.sol#L453)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 473
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b29faad281bc1c8b9d93cd7cd12098afcf2cab8af7adaca23c179831dedf4f4d"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.debtShareToVal(uint256) (contracts/UniswapV3Vault.sol#200-203) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- vaultDebtShare == 0 (contracts/UniswapV3Vault.sol#201)\n",
            "markdown": "[VaultV3.debtShareToVal(uint256)](contracts/UniswapV3Vault.sol#L200-L203) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [vaultDebtShare == 0](contracts/UniswapV3Vault.sol#L201)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 203
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b3cf6e02f0ad617b3f292ea66c0f92d0f009702e8b0e638e8733f42bdf3279f1"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.debtValToShare(uint256) (contracts/UniswapV3Vault.sol#207-210) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- vaultDebtShare == 0 (contracts/UniswapV3Vault.sol#208)\n",
            "markdown": "[VaultV3.debtValToShare(uint256)](contracts/UniswapV3Vault.sol#L207-L210) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [vaultDebtShare == 0](contracts/UniswapV3Vault.sol#L208)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 210
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bccc7946a1d4718c8925222df022becfda79977fd0bf5d820bdb6a2fdbd4f89a"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3.addCollateral(uint256,uint256,bool,bytes) (contracts/UniswapV3Vault.sol#300-368) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(debt * 10000 <= healthAfter * (killFactor - 100),debtRatio > killFactor margin) (contracts/UniswapV3Vault.sol#353-356)\n",
            "markdown": "[VaultV3.addCollateral(uint256,uint256,bool,bytes)](contracts/UniswapV3Vault.sol#L300-L368) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(debt * 10000 <= healthAfter * (killFactor - 100),debtRatio > killFactor margin)](contracts/UniswapV3Vault.sol#L353-L356)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 368
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "da5e920968da0ee6ad856829522b521efa7e15ffe0417c7f8b77f1c4dfbda1e5"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "DynamicPortfolio._getRebalanceFee(uint256) (contracts/portfolio/DynamicPortfolio.sol#169-190) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _lastRebalanceTime < block.timestamp (contracts/portfolio/DynamicPortfolio.sol#173)\n\t- duration > 86400 (contracts/portfolio/DynamicPortfolio.sol#179)\n",
            "markdown": "[DynamicPortfolio._getRebalanceFee(uint256)](contracts/portfolio/DynamicPortfolio.sol#L169-L190) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [_lastRebalanceTime < block.timestamp](contracts/portfolio/DynamicPortfolio.sol#L173)\n\t- [duration > 86400](contracts/portfolio/DynamicPortfolio.sol#L179)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 190
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e97662daae4f165f4ac4af3079952fd2879c68936f947d23d2cc13aa1b74993c"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "VaultV3._deposit(uint256) (contracts/UniswapV3Vault.sol#245-253) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(totalSupply() > MINIMUM_SHARE,no tiny shares) (contracts/UniswapV3Vault.sol#251)\n\t- total == 0 (contracts/UniswapV3Vault.sol#247-249)\n",
            "markdown": "[VaultV3._deposit(uint256)](contracts/UniswapV3Vault.sol#L245-L253) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(totalSupply() > MINIMUM_SHARE,no tiny shares)](contracts/UniswapV3Vault.sol#L251)\n\t- [total == 0](contracts/UniswapV3Vault.sol#L247-L249)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 245,
                  "endLine": 253
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fdde5278b10e82850ab392108d6812ccc433769e2135f6bc0441bdd4b4764d21"
          }
        },
        {
          "ruleId": "2-1-timestamp",
          "message": {
            "text": "UniswapV3Farm._buyback() (contracts/farms/uniswapV3/UniswapV3Farm.sol#769-782) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- buybackAmount == 0 (contracts/farms/uniswapV3/UniswapV3Farm.sol#770)\n",
            "markdown": "[UniswapV3Farm._buyback()](contracts/farms/uniswapV3/UniswapV3Farm.sol#L769-L782) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [buybackAmount == 0](contracts/farms/uniswapV3/UniswapV3Farm.sol#L770)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 769,
                  "endLine": 782
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fe15aa05fc313af07dbea0ef142e4909c873df6fcfee08de607ab7a76fab1b8f"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool) (contracts/libraries/OptimalSwap.sol#319-412) uses assembly\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#391-409)\n",
            "markdown": "[OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool)](contracts/libraries/OptimalSwap.sol#L319-L412) uses assembly\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L391-L409)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 319,
                  "endLine": 412
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "01953c16bd5db0d3246444d98e54992a8d1d391b6fc5ead2d1e210dc989e5a7c"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256) (contracts/libraries/OptimalSwap.sol#85-314) uses assembly\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#108-115)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#122-125)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#131-144)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#148-153)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#171-180)\n",
            "markdown": "[OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256)](contracts/libraries/OptimalSwap.sol#L85-L314) uses assembly\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L108-L115)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L122-L125)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L131-L144)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L148-L153)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L171-L180)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 314
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0836f2497be728a3396af40f78e179373987e2010450da96a30663e4e0d1408c"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "OptimalSwap.solveOptimalZeroForOne(OptimalSwap.SwapState) (contracts/libraries/OptimalSwap.sol#417-516) uses assembly\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#436-449)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#452-471)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#473-475)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#480-483)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#491-494)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#499-502)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#506-515)\n",
            "markdown": "[OptimalSwap.solveOptimalZeroForOne(OptimalSwap.SwapState)](contracts/libraries/OptimalSwap.sol#L417-L516) uses assembly\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L436-L449)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L452-L471)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L473-L475)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L480-L483)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L491-L494)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L499-L502)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L506-L515)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 516
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "38ef60c6d205b4e0632406a7a812ea4f1aafd1150c36be7a5687f16288d2e555"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "SafeToken.isContract(address) (contracts/libraries/SafeToken.sol#74-85) uses assembly\n\t- INLINE ASM (contracts/libraries/SafeToken.sol#81-83)\n",
            "markdown": "[SafeToken.isContract(address)](contracts/libraries/SafeToken.sol#L74-L85) uses assembly\n\t- [INLINE ASM](contracts/libraries/SafeToken.sol#L81-L83)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 85
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4bbadb6433250aa6cc4287cd6bce08f82ba26f11ee52ad1afa52fb0e4e4acbe3"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState) (contracts/libraries/OptimalSwap.sol#521-625) uses assembly\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#540-553)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#557-571)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#573-575)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#583-588)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#590-597)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#600-603)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#608-611)\n\t- INLINE ASM (contracts/libraries/OptimalSwap.sol#615-624)\n",
            "markdown": "[OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState)](contracts/libraries/OptimalSwap.sol#L521-L625) uses assembly\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L540-L553)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L557-L571)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L573-L575)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L583-L588)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L590-L597)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L600-L603)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L608-L611)\n\t- [INLINE ASM](contracts/libraries/OptimalSwap.sol#L615-L624)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 521,
                  "endLine": 625
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a708a7bc887106a59ca1e2b7ea4b5c7be59d586f0f97b192cfd4e0d0bc4e22eb"
          }
        },
        {
          "ruleId": "3-0-boolean-equal",
          "message": {
            "text": "WNativeRelayer.onlyWhitelistedCaller() (contracts/WNativeRelayer.sol#21-27) compares to a boolean constant:\n\t-require(bool,string)(okCallers[msg.sender] == true,WNativeRelayer::onlyWhitelistedCaller:: !okCaller) (contracts/WNativeRelayer.sol#22-25)\n",
            "markdown": "[WNativeRelayer.onlyWhitelistedCaller()](contracts/WNativeRelayer.sol#L21-L27) compares to a boolean constant:\n\t-[require(bool,string)(okCallers[msg.sender] == true,WNativeRelayer::onlyWhitelistedCaller:: !okCaller)](contracts/WNativeRelayer.sol#L22-L25)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 27
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "35c6b098082f7d5180762633758ca0b59024c1d3421a001cbaadc1c311676dff"
          }
        },
        {
          "ruleId": "3-0-cyclomatic-complexity",
          "message": {
            "text": "DynamicPortfolio.rebalance(uint256[]) (contracts/portfolio/DynamicPortfolio.sol#36-167) has a high cyclomatic complexity (12).\n",
            "markdown": "[DynamicPortfolio.rebalance(uint256[])](contracts/portfolio/DynamicPortfolio.sol#L36-L167) has a high cyclomatic complexity (12).\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a5e7625f96bc0a960b57c697fc718e7d120d2722ce70a210d3e65c0b958e2722"
          }
        },
        {
          "ruleId": "3-1-dead-code",
          "message": {
            "text": "Math.max(uint256,uint256) (contracts/libraries/Math.sol#12-14) is never used and should be removed\n",
            "markdown": "[Math.max(uint256,uint256)](contracts/libraries/Math.sol#L12-L14) is never used and should be removed\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/Math.sol"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 14
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4a3177ea9490e6f46964b433de103f9dcaa115ecb608b38006eb2eca3751a08e"
          }
        },
        {
          "ruleId": "3-1-dead-code",
          "message": {
            "text": "Math.average(uint256,uint256) (contracts/libraries/Math.sol#27-30) is never used and should be removed\n",
            "markdown": "[Math.average(uint256,uint256)](contracts/libraries/Math.sol#L27-L30) is never used and should be removed\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/Math.sol"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 30
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4da33cf1bcc5c409d2f9d3fb487d83c29cd2f6f93543c7afcd901cf60e03da1c"
          }
        },
        {
          "ruleId": "3-1-dead-code",
          "message": {
            "text": "SafeToken.balanceOf(address,address) (contracts/libraries/SafeToken.sol#13-18) is never used and should be removed\n",
            "markdown": "[SafeToken.balanceOf(address,address)](contracts/libraries/SafeToken.sol#L13-L18) is never used and should be removed\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 18
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8555d7cda067cedb55f9769042d56ecee246328d6ea7f1353b2be66184b25383"
          }
        },
        {
          "ruleId": "3-1-dead-code",
          "message": {
            "text": "OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256) (contracts/libraries/OptimalSwap.sol#22-46) is never used and should be removed\n",
            "markdown": "[OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256)](contracts/libraries/OptimalSwap.sol#L22-L46) is never used and should be removed\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 46
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e4e8eebbc3db1d78a3366dfb5371c963ed1dda0c146d999b54d8ab9da333abb6"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IFarmUniswapV3.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IFarmUniswapV3.sol#L3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IFarmUniswapV3.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "05ab5cd6b7125baa32697b7b49ed85e3363532cc8dce439d92b72bcdd599aa17"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IMintStrategy.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IMintStrategy.sol#L3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IMintStrategy.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "11ce61d1f0beb5161a467d3acae32a87bc4f1227c55a393606ca79aa368348a5"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/libraries/PoolAddress.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/libraries/PoolAddress.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PoolAddress.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1759f5d0a3c7dc79600b7942177dfce3ffd848119642e8874c1ca3df5781ac7c"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/libraries/OptimalSwap.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/libraries/OptimalSwap.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "188d50a55ec3808c21dfc246143546395aaeb6f874ee736684b6832c60deb420"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/portfolio/DynamicPortfolio.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/portfolio/DynamicPortfolio.sol#L5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1dfd8e924197ce6c312e363771316c30b938c2f11af55fa9ad6e53d1670a6fc2"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/price-oracles/ChainLinkPriceOracle.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/price-oracles/ChainLinkPriceOracle.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/ChainLinkPriceOracle.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "228e4c65872b227f92ac5902cec010d1f7bd65f350d1f77b5c5806092c395cd3"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IVault.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IVault.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IVault.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "229343cacd42e5262bdfd63151247262b04b14fa965438e21a80513ee758577e"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IWNativeRelayer.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IWNativeRelayer.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IWNativeRelayer.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "25816122c70f0367f23b3c5860833c23d47ce1dd72d47131e52283182c2ddb19"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/farms/Health.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/farms/Health.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/Health.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "26cc2e57af7ff1f71abe89728012ae7c6ee896a2e41e609871feb7db92ab76b9"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/price-oracles/SimplePriceOracle.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/price-oracles/SimplePriceOracle.sol#L3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2fbab38cdcb90a262b13dcf0892e60d7a6031befeb8631d83c87dcc0634ecd32"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/InterestModel.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/InterestModel.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/InterestModel.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2ffb8ae33b1f106489fe60d866bf43ad3abfb6fc88f0371ee3bc261dcd3f07f9"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/farms/UniswapV3FarmConfig.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/farms/UniswapV3FarmConfig.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "423b9606ac48ac05863ebd83f01809f136d42a5d54be2b2aee2a7b0424371c1d"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/portfolio/PortfolioConfig.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/portfolio/PortfolioConfig.sol#L5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "44a8db9976c17ccc621760d22e05e409093b1145b146889185c53c7142659332"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/libraries/Math.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/libraries/Math.sol#L3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/Math.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "45e85eed9c0c4d5a6d6525d4525e7d8040a2123ac29a66b81991f025f811dae9"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IDynamicPortfolio.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IDynamicPortfolio.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IDynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4c1698e8bb3cf33b800bd3768829c4241feb652c5fe0600cdb4114d49b8b1c36"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/ICustomPortfolio.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/ICustomPortfolio.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/ICustomPortfolio.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4c8cb45844e79a931d6dafbb223eceec45fd95b8ea1a94089f2dbb6c926dafc6"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/portfolio/PortfolioFactory.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/portfolio/PortfolioFactory.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5d6a390e3153881b5df915387399731de956b0f494a6ca67959184960ab39d51"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/ConfigurableInterestVaultConfig.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/ConfigurableInterestVaultConfig.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6052237c4ff266a38791549dcf41a395a3cd24d3a338868af644f7e06a58c423"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/tests/MockUpgradedDynamicPortfolio.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/tests/MockUpgradedDynamicPortfolio.sol#L5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/MockUpgradedDynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6386465e74f344fc5e14353e65ac5380cc8c6cd86c9abaf11905ce334169e3f4"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/tests/UniswapV3FarmTest.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/tests/UniswapV3FarmTest.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d64b897b3a5b596cb319e68f5948b034f7b654ae1b21b12dce1d13650e44a18"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/tests/MockUpgradedCustomPortfolio.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/tests/MockUpgradedCustomPortfolio.sol#L5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/MockUpgradedCustomPortfolio.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "761e466f33d8d9a4984d65c39f7198b81cb5812d1b3b23dd280f76a470ac303b"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IFarmConfig.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IFarmConfig.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IFarmConfig.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "77c5880cc13061f51d3c7451d2473cd31186b3725a8fc9ea40e116c8079580e9"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "828b774d8797969d83de8487509c2916041b412bc6cdc0e0366f1f153a53ed70"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IPortfolioPositionValue.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IPortfolioPositionValue.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IPortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8b2343fd8b5d382a603b52e30ad20e73fedf1a50ec1b1c8f0441d2afae317d6e"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8f1a64207c513542832bf813368b0fa52abfc3a91d91a8e4b5760bf8f0dca736"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/farms/uniswapV3/UniswapV3Farm.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/farms/uniswapV3/UniswapV3Farm.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9666fca6e7b48e93b008fa7f0f8fec8622bd2d39753c9d8d5d126ccb4780a2e8"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/portfolio/CustomPortfolio.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/portfolio/CustomPortfolio.sol#L5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "978f725d25349bd3b5aea81bfc02e07038dfcca1c0546a93bd5c9a5ae18fb39f"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/tests/BeneficialVaultTest.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/tests/BeneficialVaultTest.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9881d2acdea3991442ac1d2b292a7043012009781fa3055c6618d561f51bcc2f"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IFarmConfigV3.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IFarmConfigV3.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IFarmConfigV3.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9be625e02061f0c3c75e46452045e41588b00be04457a1b23ae96f11a9b04304"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/WNativeRelayer.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/WNativeRelayer.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a38cefea0b748c6f6a665029641435ed075c3cb2711e48b0bac0a0bc59421f81"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IPortfolioConfig.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IPortfolioConfig.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IPortfolioConfig.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b66855e4bda584b4103de2b365669aaa7added7a9bc9974c787fe7ce31a0d7ff"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/UniswapV3Vault.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/UniswapV3Vault.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c0888affd3c495af0628253404ecab27a7dbdb1f52cd7967555aa2df5f713dd4"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IPortfolioFactory.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IPortfolioFactory.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IPortfolioFactory.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c53ad356cf13295f4854baedb3d1c4418f86f3245033f13c16f42c0c1fe9170d"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ca409a240b1e776dd5d1186b4f07142c92162528ab8a2e1cf2d574156d5f6af7"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/portfolio/PortfolioPositionValue.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/portfolio/PortfolioPositionValue.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "de69f1e1925e16bf1d60d681dd534f6656c465fa9db15ef929ccc3f8c40ad620"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IStrategy.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IStrategy.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IStrategy.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e0521a337c8d6307198ab708df30f71e101742d6fe29a3404a4b7931a4ca08bd"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IWETH.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IWETH.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IWETH.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e0602e803258a7d8a3ef2aa67cccc33f66c874d84273a77b293ff7ff4263a164"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interest-models/TripleSlopeModel.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interest-models/TripleSlopeModel.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e855d1122957ae1b6e58b06194578610ac55bcd54ed4a2ad9eb114cfcb539469"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/libraries/SafeToken.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/libraries/SafeToken.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e87e7b81d362944226dce47bd68329082547692058178117aaefbee336b318b2"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IVaultConfig.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IVaultConfig.sol#L6) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IVaultConfig.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f100c1a922a75bd86ccb46aca74fb0689c4b15dda8f211d1e71b6f283f292adb"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/interfaces/IPriceOracle.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/interfaces/IPriceOracle.sol#L3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IPriceOracle.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f5cbd63fd2a1599a6a444d00f4a80f3b05af2ca9b1ff7fcdf42fce9252cc1870"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/libraries/PositionValue.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/libraries/PositionValue.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f7c568e2586b053063dcd1f94addf817e03ad43c91e18f753f211094a6860da1"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.23 (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n",
            "markdown": "Pragma version[0.8.23](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fe15af19ad0c94598834f3ac5453c4cc09d914b2fa6d5724830ee754b3e08ce0"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in SafeToken.safeTransfer(address,address,uint256) (contracts/libraries/SafeToken.sol#24-35):\n\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (contracts/libraries/SafeToken.sol#28-30)\n",
            "markdown": "Low level call in [SafeToken.safeTransfer(address,address,uint256)](contracts/libraries/SafeToken.sol#L24-L35):\n\t- [(success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value))](contracts/libraries/SafeToken.sol#L28-L30)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 35
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "34fced6e956504dfa4c717b44c61b2f05150095b307184e201dd5cb09d9e535a"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in PortfolioFactory._checkUpgradeableBeacon(address) (contracts/portfolio/PortfolioFactory.sol#52-60):\n\t- (success,returndata) = _beacon.staticcall(abi.encodeWithSelector(IBeacon(_beacon).implementation.selector)) (contracts/portfolio/PortfolioFactory.sol#55-57)\n",
            "markdown": "Low level call in [PortfolioFactory._checkUpgradeableBeacon(address)](contracts/portfolio/PortfolioFactory.sol#L52-L60):\n\t- [(success,returndata) = _beacon.staticcall(abi.encodeWithSelector(IBeacon(_beacon).implementation.selector))](contracts/portfolio/PortfolioFactory.sol#L55-L57)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 60
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5ca1013035b9c634c419de9b7011af331651ef6089094a3585d914aaefd093fd"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in SafeToken.safeTransferETH(address,uint256) (contracts/libraries/SafeToken.sol#68-72):\n\t- (success) = to.call{value: value}(new bytes(0)) (contracts/libraries/SafeToken.sol#70)\n",
            "markdown": "Low level call in [SafeToken.safeTransferETH(address,uint256)](contracts/libraries/SafeToken.sol#L68-L72):\n\t- [(success) = to.call{value: value}(new bytes(0))](contracts/libraries/SafeToken.sol#L70)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 72
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "85a03e62889a1b8bef8b2fb0d8889028b84caf31145694d7df5d55559e238788"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in SafeToken.safeTransferFrom(address,address,address,uint256) (contracts/libraries/SafeToken.sol#37-53):\n\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (contracts/libraries/SafeToken.sol#46-48)\n",
            "markdown": "Low level call in [SafeToken.safeTransferFrom(address,address,address,uint256)](contracts/libraries/SafeToken.sol#L37-L53):\n\t- [(success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value))](contracts/libraries/SafeToken.sol#L46-L48)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a4d8d997eeb539cdaef967e1d52f0beb8656fe817b3e6b78cb824f0c7d947618"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in SafeToken.safeApprove(address,address,uint256) (contracts/libraries/SafeToken.sol#55-66):\n\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (contracts/libraries/SafeToken.sol#59-61)\n",
            "markdown": "Low level call in [SafeToken.safeApprove(address,address,uint256)](contracts/libraries/SafeToken.sol#L55-L66):\n\t- [(success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value))](contracts/libraries/SafeToken.sol#L59-L61)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/SafeToken.sol"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 66
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b040c0a46360a5372cf9023e9f6268e75a17406b96e1e9adf2342b6ff5e6abde"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in WNativeRelayer.withdraw(uint256) (contracts/WNativeRelayer.sol#39-48):\n\t- (success) = msg.sender.call{value: _amount}() (contracts/WNativeRelayer.sol#43)\n",
            "markdown": "Low level call in [WNativeRelayer.withdraw(uint256)](contracts/WNativeRelayer.sol#L39-L48):\n\t- [(success) = msg.sender.call{value: _amount}()](contracts/WNativeRelayer.sol#L43)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 48
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f18411b5cda9844ecfc60cf4780ce9cc3234077e6d33f92a0f4d342409c14104"
          }
        },
        {
          "ruleId": "3-0-missing-inheritance",
          "message": {
            "text": "WNativeRelayer (contracts/WNativeRelayer.sol#13-51) should inherit from IWNativeRelayer (contracts/interfaces/IWNativeRelayer.sol#8-10)\n",
            "markdown": "[WNativeRelayer](contracts/WNativeRelayer.sol#L13-L51) should inherit from [IWNativeRelayer](contracts/interfaces/IWNativeRelayer.sol#L8-L10)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 51
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a20c31bb4a5e6ad13283de6afcc889bf3fe56d403a1d9bf15e579cd334c43454"
          }
        },
        {
          "ruleId": "3-0-missing-inheritance",
          "message": {
            "text": "TripleSlopeModel (contracts/interest-models/TripleSlopeModel.sol#9-52) should inherit from InterestModel (contracts/interfaces/InterestModel.sol#8-14)\n",
            "markdown": "[TripleSlopeModel](contracts/interest-models/TripleSlopeModel.sol#L9-L52) should inherit from [InterestModel](contracts/interfaces/InterestModel.sol#L8-L14)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 52
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ce45d2bdc1a07b50c384529d976dd2b51266dc53d991f1931e4024a5c721a664"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setMaxKillBps(uint256)._maxKillBps (contracts/ConfigurableInterestVaultConfig.sol#210) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setMaxKillBps(uint256)._maxKillBps](contracts/ConfigurableInterestVaultConfig.sol#L210) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 210,
                  "endLine": 210
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "009fc29e9a4d7805db9f07627f424735e2c6427c89b9c7998fddf10b722f47d5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr (contracts/ConfigurableInterestVaultConfig.sol#123) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr](contracts/ConfigurableInterestVaultConfig.sol#L123) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "096e4b7ccdc9825a3fac993af4febb157fc842828089a9baa1077f6d46022687"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setWhitelistedCallerRestricted(bool)._isWhitelistedCallerRestricted (contracts/ConfigurableInterestVaultConfig.sol#163) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setWhitelistedCallerRestricted(bool)._isWhitelistedCallerRestricted](contracts/ConfigurableInterestVaultConfig.sol#L163) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0c530610be9e17c095124b76a13820d623e0f43fcb3f094aef57740dd353a807"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable VaultV3._SECONDARY_TOKEN_AMOUNT (contracts/UniswapV3Vault.sol#67) is not in mixedCase\n",
            "markdown": "Variable [VaultV3._SECONDARY_TOKEN_AMOUNT](contracts/UniswapV3Vault.sol#L67) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0d4533899b26a0b69096ba34a9ca8360f5b266a1f015a49eefbec20a6dc304f7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._reservePoolBps (contracts/ConfigurableInterestVaultConfig.sol#84) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._reservePoolBps](contracts/ConfigurableInterestVaultConfig.sol#L84) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0dd197c2c48099d140d4ab30a28083ea72496cd9af1305478bf5ab7e047c2d1f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._isWhitelistedCallerRestricted (contracts/ConfigurableInterestVaultConfig.sol#128) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._isWhitelistedCallerRestricted](contracts/ConfigurableInterestVaultConfig.sol#L128) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0ef79d45987e6722631f375b35a7d5a99d370cfa627e0d0e4be0d4c4f157c3e7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._liqStrat (contracts/farms/uniswapV3/UniswapV3Farm.sol#520) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._liqStrat](contracts/farms/uniswapV3/UniswapV3Farm.sol#L520) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 520,
                  "endLine": 520
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "110fd2750872b8f97974599466bea5b8c7a0386064762a426f83c8f58b053d7f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#52) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L52) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "129eccd21c67623d8cf354d63e7d99e7fbf33a7b7ccbfd4c5f857a0bdaba946a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._positionManager (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#56) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._positionManager](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L56) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "14a50800a5068238664cdb9c723f4e81dd0be4fd5422cbcd757645b140a3478f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter DynamicPortfolio.initialize(ICustomPortfolio.PortfolioInitData,uint256)._annualRebalanceBountyBps (contracts/portfolio/DynamicPortfolio.sol#24) is not in mixedCase\n",
            "markdown": "Parameter [DynamicPortfolio.initialize(ICustomPortfolio.PortfolioInitData,uint256)._annualRebalanceBountyBps](contracts/portfolio/DynamicPortfolio.sol#L24) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "14cc003bc8573e1b9f775057b3df6a3c1860eb05601b6219ef5d21a0e5aa80de"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.setCustomPortfolioImplementation(address)._customPortfolioImplementation (contracts/portfolio/PortfolioFactory.sol#127) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.setCustomPortfolioImplementation(address)._customPortfolioImplementation](contracts/portfolio/PortfolioFactory.sol#L127) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1565a541ee49c736c080f94e29d868a1bde39f53a4de0a7397f39adb790594e1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._positionManager (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#54) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._positionManager](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L54) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "178d09f299b6a3364d04a471852a4132f0a44665238b5d7e8673845a76799ca6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._addStrat (contracts/farms/uniswapV3/UniswapV3Farm.sol#518) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._addStrat](contracts/farms/uniswapV3/UniswapV3Farm.sol#L518) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 518,
                  "endLine": 518
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "20e03db35ac4773bba273cfb0b4d40e4942973ced16bb670eb47470162a26a3f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter VaultV3.initialize(IVaultConfig,address,string,string)._config (contracts/UniswapV3Vault.sol#164) is not in mixedCase\n",
            "markdown": "Parameter [VaultV3.initialize(IVaultConfig,address,string,string)._config](contracts/UniswapV3Vault.sol#L164) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2b28805e87aa9f6e4e301bc2abf6848d0eead1222f453e1706394736a4ece920"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter SimplePriceOracle.setFeeder(address)._feeder (contracts/price-oracles/SimplePriceOracle.sol#40) is not in mixedCase\n",
            "markdown": "Parameter [SimplePriceOracle.setFeeder(address)._feeder](contracts/price-oracles/SimplePriceOracle.sol#L40) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2df32057b6389d1585fd7d80e405a335e9009e118ab4fed5e2cfe160b7b31e82"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function IFarmUniswapV3.TWAPSeconds() (contracts/interfaces/IFarmUniswapV3.sol#148) is not in mixedCase\n",
            "markdown": "Function [IFarmUniswapV3.TWAPSeconds()](contracts/interfaces/IFarmUniswapV3.sol#L148) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IFarmUniswapV3.sol"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2e06b9562486036014b6a256a24f6e08682f24b4e5ae8e82b4a8f428f09f52cf"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable VaultV3._IN_EXEC_LOCK (contracts/UniswapV3Vault.sol#64) is not in mixedCase\n",
            "markdown": "Variable [VaultV3._IN_EXEC_LOCK](contracts/UniswapV3Vault.sol#L64) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2f48325427163bdaea610a64df4b22cd4d68d314e31dba7f7d2cc1367e078927"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer (contracts/ConfigurableInterestVaultConfig.sol#88) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer](contracts/ConfigurableInterestVaultConfig.sol#L88) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "33bf320c568446f6d38a8b583034b25bf60af37ecb6cd8d298d3f16e6b2f465c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function ICustomPortfolio.BASIS_POINTS() (contracts/interfaces/ICustomPortfolio.sol#66) is not in mixedCase\n",
            "markdown": "Function [ICustomPortfolio.BASIS_POINTS()](contracts/interfaces/ICustomPortfolio.sol#L66) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/ICustomPortfolio.sol"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "341d74381fd254ecd87fe8b21e293618de08217726fc87d1edb01435386e11b0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function CustomPortfolio.__CustomPortfolio_init(ICustomPortfolio.PortfolioInitData) (contracts/portfolio/CustomPortfolio.sol#79-132) is not in mixedCase\n",
            "markdown": "Function [CustomPortfolio.__CustomPortfolio_init(ICustomPortfolio.PortfolioInitData)](contracts/portfolio/CustomPortfolio.sol#L79-L132) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/CustomPortfolio.sol"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 132
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "35a7bd0e41084eb853aae2d9940dbd6fd91d0ce0c70476e3010e0c14ecf1e91e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr (contracts/ConfigurableInterestVaultConfig.sol#89) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr](contracts/ConfigurableInterestVaultConfig.sol#L89) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "391d0e8578e6c5f71184fcca18cac36e77ce65268c643ffb24fbbc18bff2cbed"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32).TWAPSeconds (contracts/portfolio/PortfolioPositionValue.sol#39) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32).TWAPSeconds](contracts/portfolio/PortfolioPositionValue.sol#L39) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3bce0e3643e05fea6e93317748a829492cd4239975283ef4818546d851623d0f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter BeneficialVaultTest.setUser(address)._user (contracts/tests/BeneficialVaultTest.sol#13) is not in mixedCase\n",
            "markdown": "Parameter [BeneficialVaultTest.setUser(address)._user](contracts/tests/BeneficialVaultTest.sol#L13) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3c58e6b71a83a1f5de339f49ed2bf4e3c7ad348c0c772296168f4dd1afd0fe3c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.setRouter(address)._router (contracts/portfolio/PortfolioConfig.sol#73) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.setRouter(address)._router](contracts/portfolio/PortfolioConfig.sol#L73) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3c62431570ebb27d1b5cf6267cb480d4e4367d763ec54018aaf503b7840ae478"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.initialize(address,address,address[],address[])._approvedFarms (contracts/portfolio/PortfolioConfig.sol#35) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.initialize(address,address,address[],address[])._approvedFarms](contracts/portfolio/PortfolioConfig.sol#L35) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3eb4212e32a20af05de40f5e9df9b5f6e71e7356d192cc77d9cd229c2ed1a582"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setMaxReinvestBountyBps(uint256)._maxReinvestBountyBps (contracts/farms/uniswapV3/UniswapV3Farm.sol#498) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setMaxReinvestBountyBps(uint256)._maxReinvestBountyBps](contracts/farms/uniswapV3/UniswapV3Farm.sol#L498) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 498,
                  "endLine": 498
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4cbab1cce202dd6b6373dc84ffe0d60fb1fe5427eacab49ebfdb65332a9ca752"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#52) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L52) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5037096603584070db690de942ca7df92ef1e5f02f6af2790d2a2cefc8248d0a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Health.quoteTWAPPrice(IUniswapV3Pool,address,uint128,uint32)._pool (contracts/farms/Health.sol#62) is not in mixedCase\n",
            "markdown": "Parameter [Health.quoteTWAPPrice(IUniswapV3Pool,address,uint128,uint32)._pool](contracts/farms/Health.sol#L62) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/Health.sol"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "520206bc79928bd4410e900a844f18fee470548e9587dad2d3719aec28583128"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._killBps (contracts/ConfigurableInterestVaultConfig.sol#85) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._killBps](contracts/ConfigurableInterestVaultConfig.sol#L85) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5783772f70c9d3283a5a6a06635b324cccd318275ad7af2061df83a62f7b0c88"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._minDebtSize (contracts/ConfigurableInterestVaultConfig.sol#83) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._minDebtSize](contracts/ConfigurableInterestVaultConfig.sol#L83) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5f2d9478efad5d97e8bdd4d96883913fda9579a34c2c6d130da0d0d40a8f57f7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryAccount (contracts/farms/uniswapV3/UniswapV3Farm.sol#580) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryAccount](contracts/farms/uniswapV3/UniswapV3Farm.sol#L580) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 580,
                  "endLine": 580
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "61412fac6a92c9747654626aa97dd5ffa76be176ac3c6043a7722687d75d5d84"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._reservePoolBps (contracts/ConfigurableInterestVaultConfig.sol#120) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._reservePoolBps](contracts/ConfigurableInterestVaultConfig.sol#L120) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "624005f9b02e94a64233511ac0e6be06db6aa332e78031242755b46197193935"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setReinvestConfig(uint256,uint256)._reinvestBountyBps (contracts/farms/uniswapV3/UniswapV3Farm.sol#477) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setReinvestConfig(uint256,uint256)._reinvestBountyBps](contracts/farms/uniswapV3/UniswapV3Farm.sol#L477) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 477,
                  "endLine": 477
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "65d921f1f9f4f026698db3da9ba7b2dbe7d864283f1cc986a6a715b5309188fd"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter VaultV3.initialize(IVaultConfig,address,string,string)._symbol (contracts/UniswapV3Vault.sol#167) is not in mixedCase\n",
            "markdown": "Parameter [VaultV3.initialize(IVaultConfig,address,string,string)._symbol](contracts/UniswapV3Vault.sol#L167) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "687cc088ed404e5b61155f41e06cc3f85cec3c240b482381a1e1e8ba47c05b0e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._beneficialVault (contracts/farms/uniswapV3/UniswapV3Farm.sol#540) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._beneficialVault](contracts/farms/uniswapV3/UniswapV3Farm.sol#L540) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 540,
                  "endLine": 540
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6b2bf1dfebe7b93bd9c6b195771dcc5087c9d6217e907b190ba376abad574592"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter VaultV3.updateConfig(IVaultConfig)._config (contracts/UniswapV3Vault.sol#553) is not in mixedCase\n",
            "markdown": "Parameter [VaultV3.updateConfig(IVaultConfig)._config](contracts/UniswapV3Vault.sol#L553) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 553,
                  "endLine": 553
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d53339133a1270a5dd101a36f9e623deb03e5ec33ac538c3cd8f400eb4d1851"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getKillTreasuryBps (contracts/ConfigurableInterestVaultConfig.sol#90) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getKillTreasuryBps](contracts/ConfigurableInterestVaultConfig.sol#L90) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d5f63d5f145e684b574ede1fa2ffe41acd0537552f46207e84fcb1928c7d96c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._isWhitelistedCallerRestricted (contracts/ConfigurableInterestVaultConfig.sol#92) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._isWhitelistedCallerRestricted](contracts/ConfigurableInterestVaultConfig.sol#L92) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6e9f4baf1927e79deb081ee59f0dd0d4c31444f35e7c6061bfd253bac9efdcfa"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._minDebtSize (contracts/ConfigurableInterestVaultConfig.sol#119) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._minDebtSize](contracts/ConfigurableInterestVaultConfig.sol#L119) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6f1153ae556b50ff0ee8003e727239ccc82eae64478340a915e24f786e80fa06"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter VaultV3.initialize(IVaultConfig,address,string,string)._name (contracts/UniswapV3Vault.sol#166) is not in mixedCase\n",
            "markdown": "Parameter [VaultV3.initialize(IVaultConfig,address,string,string)._name](contracts/UniswapV3Vault.sol#L166) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 166,
                  "endLine": 166
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6f25fee181113f613b4890b7dd643f196b8e648b5de4b503adf55fe939b696df"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3FarmConfig.setOracle(PriceOracle)._oracle (contracts/farms/UniswapV3FarmConfig.sol#68) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3FarmConfig.setOracle(PriceOracle)._oracle](contracts/farms/UniswapV3FarmConfig.sol#L68) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7066542a873d2223daaea34f48615e13b62cee822871bb96fe21eb5a44c5f686"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._positionManager (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#53) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3AddBaseTokenStrategy.initialize(address,INonfungiblePositionManager)._positionManager](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L53) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "78966c3193df74620c318d03e179f15709e563fff70e420531f7d421dd6104a0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.initialize(address,address,address[],address[])._approvedTokens (contracts/portfolio/PortfolioConfig.sol#34) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.initialize(address,address,address[],address[])._approvedTokens](contracts/portfolio/PortfolioConfig.sol#L34) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "83532213b8c7d477dcfcf208ffbfd733635785faf1bb3212f2a7ce60d206444d"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._beneficialVaultBountyBps (contracts/farms/uniswapV3/UniswapV3Farm.sol#539) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._beneficialVaultBountyBps](contracts/farms/uniswapV3/UniswapV3Farm.sol#L539) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 539,
                  "endLine": 539
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8507df9620b3ce9623bd4adf49e58732da9d00f70bcc3fd324b86c15ae447701"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3FarmConfig.initialize(PriceOracle,address)._oracle (contracts/farms/UniswapV3FarmConfig.sol#50) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3FarmConfig.initialize(PriceOracle,address)._oracle](contracts/farms/UniswapV3FarmConfig.sol#L50) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "872ef89e3642ffdb95b54ce7c4a34b81702fd1a220e75cded5e152a3ff6ee0a1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury (contracts/ConfigurableInterestVaultConfig.sol#127) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury](contracts/ConfigurableInterestVaultConfig.sol#L127) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8ce700b3b24fa438f97def2e80698120edea5b546df72fca9d2cd9157bfefb5a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._interestModel (contracts/ConfigurableInterestVaultConfig.sol#122) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._interestModel](contracts/ConfigurableInterestVaultConfig.sol#L122) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "90853b55c0a3cb3d3ca6a7576985c850b7dd0257fbd284eaa9b86130e1a0c342"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr (contracts/ConfigurableInterestVaultConfig.sol#87) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWrappedNativeAddr](contracts/ConfigurableInterestVaultConfig.sol#L87) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "936e944d735e7566b184fad45c6dc5ba1e2232e834e7672382d57524c20b5f6e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable UniswapV3Farm.TWAPSeconds (contracts/farms/uniswapV3/UniswapV3Farm.sol#90) is not in mixedCase\n",
            "markdown": "Variable [UniswapV3Farm.TWAPSeconds](contracts/farms/uniswapV3/UniswapV3Farm.sol#L90) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "97a8d2915053eaf2049975831cdc4d0f7331dfbee90af80ccf6d0cfa5dff484a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter WNativeRelayer.withdraw(uint256)._amount (contracts/WNativeRelayer.sol#40) is not in mixedCase\n",
            "markdown": "Parameter [WNativeRelayer.withdraw(uint256)._amount](contracts/WNativeRelayer.sol#L40) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a8faf2f471d955a1b0ebbdfc2fa36bbba126345c7e62f2f698dee9b73d809b33"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setTWAPConfig(uint32)._TWAPSeconds (contracts/farms/uniswapV3/UniswapV3Farm.sol#467) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setTWAPConfig(uint32)._TWAPSeconds](contracts/farms/uniswapV3/UniswapV3Farm.sol#L467) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 467,
                  "endLine": 467
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a960c3b2bf3fdc3ff37e4585c652b8f6722f61a825fd725c3dbbcd24470c2e28"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.initialize(address,address,address)._config (contracts/portfolio/PortfolioFactory.sol#35) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.initialize(address,address,address)._config](contracts/portfolio/PortfolioFactory.sol#L35) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a9a7eb9cbdd20d93a0bff63863224a2d26c4da903cf6a4aef36b730c150adeca"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256)._annualRebalanceBountyBps (contracts/portfolio/PortfolioFactory.sol#91) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.createDynamicPortfolio(ICustomPortfolio.PortfolioInitData,uint256)._annualRebalanceBountyBps](contracts/portfolio/PortfolioFactory.sol#L91) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "aa6e6e90d258d4e1dc4b571c0672b8b048cdbc89ad376d79512f931215a6f1bf"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getKillTreasuryBps (contracts/ConfigurableInterestVaultConfig.sol#126) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getKillTreasuryBps](contracts/ConfigurableInterestVaultConfig.sol#L126) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "aaa2e67964251cb1523fbc93048f3bf8c04e6ff7f4f2d295d6db0b1712222ebe"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.initialize(address,address,address)._customPortfolioImplementation (contracts/portfolio/PortfolioFactory.sol#36) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.initialize(address,address,address)._customPortfolioImplementation](contracts/portfolio/PortfolioFactory.sol#L36) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "af52ea298ac428fbb7cc263ff485fec9ad719196fb71b3ca99c73f2d8d63be2e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable VaultV3.POSITION_ID (contracts/UniswapV3Vault.sol#65) is not in mixedCase\n",
            "markdown": "Variable [VaultV3.POSITION_ID](contracts/UniswapV3Vault.sol#L65) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "af698c27ba0f1babd3fef6277d3d0866502d675138916e950c71e4b64f369399"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._add2Strat (contracts/farms/uniswapV3/UniswapV3Farm.sol#519) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setCriticalStrategies(IStrategy,IStrategy,IStrategy)._add2Strat](contracts/farms/uniswapV3/UniswapV3Farm.sol#L519) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 519,
                  "endLine": 519
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b0c77e4e4f7c0cbef3b879451685fa76a0f7d91b148d5ba83f137d17d9409a7a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#53) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3StrategyPartialClose.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol#L53) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyPartialClose.sol"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b4094383e0bc2d4399be938545572ab9e01e54c2d410284c0dcbf63f7141cb1c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.setPortfolioConfig(address)._config (contracts/portfolio/PortfolioFactory.sol#122) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.setPortfolioConfig(address)._config](contracts/portfolio/PortfolioFactory.sol#L122) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b6ad329934aac1870b0f713a0449dbdeea36b9ef253240e06f6da397f7340ad4"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IPortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32).TWAPSeconds (contracts/interfaces/IPortfolioPositionValue.sol#15) is not in mixedCase\n",
            "markdown": "Parameter [IPortfolioPositionValue.getPositionValue(ICustomPortfolio,uint256,uint32).TWAPSeconds](contracts/interfaces/IPortfolioPositionValue.sol#L15) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interfaces/IPortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b72faca0c32ea15e807ebf1edf90289b1975d0c30a5ab26320debbf3ce4ae2fd"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3FarmConfig.initialize(PriceOracle,address)._healthContract (contracts/farms/UniswapV3FarmConfig.sol#51) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3FarmConfig.initialize(PriceOracle,address)._healthContract](contracts/farms/UniswapV3FarmConfig.sol#L51) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/UniswapV3FarmConfig.sol"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b86d7dd856471636eb4f854de29be886c6f8f63191ae4e7246fa61f690b3dd8f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._router (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#55) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3AddBothTokenStrategy.initialize(address,INonfungiblePositionManager)._router](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L55) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ba1be3eeefbecb366b57fc613569a36cedb50cbfde6d78bb378f7ce77fe62ad0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryBountyBps (contracts/farms/uniswapV3/UniswapV3Farm.sol#581) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setTreasuryConfig(address,uint256)._treasuryBountyBps](contracts/farms/uniswapV3/UniswapV3Farm.sol#L581) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 581,
                  "endLine": 581
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bc800331fdd8ccd6a71383f7dced03b036e7529ae41cc06a6d6e880759c3d19a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._rewardPath (contracts/farms/uniswapV3/UniswapV3Farm.sol#541) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setBeneficialVaultConfig(uint256,IVault,bytes)._rewardPath](contracts/farms/uniswapV3/UniswapV3Farm.sol#L541) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 541,
                  "endLine": 541
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c88e16e13788bfd8e797fb1204cdb29b7b89e2d9b4aa8ab6c8851f254568d678"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setReinvestConfig(uint256,uint256)._reinvestThreshold (contracts/farms/uniswapV3/UniswapV3Farm.sol#478) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setReinvestConfig(uint256,uint256)._reinvestThreshold](contracts/farms/uniswapV3/UniswapV3Farm.sol#L478) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 478,
                  "endLine": 478
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c976e3ac4befd0b2ff6a1cb648b969809e6c85fc87b6272e4ed21358dad8397a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._positionManager (contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#53) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3StrategyLiquidate.initialize(address,INonfungiblePositionManager)._positionManager](contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol#L53) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3StrategyLiquidate.sol"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ccf657081fc51394889b6fef6d9bfb85966c5672c5c4f6e63b530df7d9e233ed"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._killBps (contracts/ConfigurableInterestVaultConfig.sol#121) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._killBps](contracts/ConfigurableInterestVaultConfig.sol#L121) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cdf2f83213397a9b8dc1fdf30933e17861c8880f4b2ac66c62ffdcc268e5bcdc"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter DynamicPortfolio.rebalance(uint256[])._weights (contracts/portfolio/DynamicPortfolio.sol#36) is not in mixedCase\n",
            "markdown": "Parameter [DynamicPortfolio.rebalance(uint256[])._weights](contracts/portfolio/DynamicPortfolio.sol#L36) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d19a80e092fe5ec1cfb417d61adc7d4f58022b35fe605ad1c814a9108e638dd0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.initialize(address,address,address[],address[])._wNativeAddr (contracts/portfolio/PortfolioConfig.sol#32) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.initialize(address,address,address[],address[])._wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L32) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d43c6b3e9cc80bcb526838e6152551371705a0b44a2d3a7dc7cbaefcc2d971fd"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter SimplePriceOracle.initialize(address)._feeder (contracts/price-oracles/SimplePriceOracle.sol#34) is not in mixedCase\n",
            "markdown": "Parameter [SimplePriceOracle.initialize(address)._feeder](contracts/price-oracles/SimplePriceOracle.sol#L34) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/price-oracles/SimplePriceOracle.sol"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d7fd135fe3b54c5050c15bffe02f83e0d2eb78cc046ef92618441a291ecfd27e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer (contracts/ConfigurableInterestVaultConfig.sol#124) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getWNativeRelayer](contracts/ConfigurableInterestVaultConfig.sol#L124) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d938adcd16469adf5076e60170db59696fe502397fddf14f07214a601939b613"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._config (contracts/portfolio/PortfolioPositionValue.sol#23) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._config](contracts/portfolio/PortfolioPositionValue.sol#L23) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d9cc581095d8b6da198e1af29ba14a44071dba62dc7223d411acfa75a9f802a8"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.initialize(address,address,address)._dynamicPortfolioImplementation (contracts/portfolio/PortfolioFactory.sol#37) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.initialize(address,address,address)._dynamicPortfolioImplementation](contracts/portfolio/PortfolioFactory.sol#L37) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "da7809fe2863f6a62b50bd573794393ea6efc7ede54a1f2b4599fd31188b2cab"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.setWNativeAddr(address)._wNativeAddr (contracts/portfolio/PortfolioConfig.sol#69) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.setWNativeAddr(address)._wNativeAddr](contracts/portfolio/PortfolioConfig.sol#L69) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "dae269030ab5679614622ce5f83e19905edc50e7954ca751fe4c42443c7ccce9"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable VaultV3.STRATEGY (contracts/UniswapV3Vault.sol#66) is not in mixedCase\n",
            "markdown": "Variable [VaultV3.STRATEGY](contracts/UniswapV3Vault.sol#L66) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e16db635aa09d56ea07982f927bf0b4eafc03dc3f33b4f34d6cd80d7361f84e0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr (contracts/ConfigurableInterestVaultConfig.sol#125) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.setParams(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._getFairLaunchAddr](contracts/ConfigurableInterestVaultConfig.sol#L125) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e3088e9f95fabdab603fcbf5de21025cdfc71d8e042dc00aa4d9b6d3636cdb31"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioFactory.setDynamicPortfolioImplementation(address)._dynamicPortfolioImplementation (contracts/portfolio/PortfolioFactory.sol#137) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioFactory.setDynamicPortfolioImplementation(address)._dynamicPortfolioImplementation](contracts/portfolio/PortfolioFactory.sol#L137) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioFactory.sol"
                },
                "region": {
                  "startLine": 137,
                  "endLine": 137
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e3eda323f054731b252d117c4e78f042c28c80a3eda0ac1b2786cd071bbdcb9f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._defaultTWAPSeconds (contracts/portfolio/PortfolioPositionValue.sol#24) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._defaultTWAPSeconds](contracts/portfolio/PortfolioPositionValue.sol#L24) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e404080ff1ebba3bce0c1e34a9b77dd7b63e8152f3d86a2934529446fa90555e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._healthContract (contracts/portfolio/PortfolioPositionValue.sol#22) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioPositionValue.initialize(Health,IPortfolioConfig,uint32)._healthContract](contracts/portfolio/PortfolioPositionValue.sol#L22) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioPositionValue.sol"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eeb5209da9a6cf9df87ac41f41429d88c4c7ca386871171a4a0dd52c8fb30053"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury (contracts/ConfigurableInterestVaultConfig.sol#91) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._treasury](contracts/ConfigurableInterestVaultConfig.sol#L91) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f5ef1eff5f0019f5a280a084382912b8e7a5e4f334f35e39a15744cd80a0105b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter UniswapV3Farm.setPositionId(uint256)._positionId (contracts/farms/uniswapV3/UniswapV3Farm.sol#596) is not in mixedCase\n",
            "markdown": "Parameter [UniswapV3Farm.setPositionId(uint256)._positionId](contracts/farms/uniswapV3/UniswapV3Farm.sol#L596) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 596,
                  "endLine": 596
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f8a2426f541edaa673a668e476033ab5180d2f78d57675c3bc1d665d6e021a40"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._interestModel (contracts/ConfigurableInterestVaultConfig.sol#86) is not in mixedCase\n",
            "markdown": "Parameter [ConfigurableInterestVaultConfig.initialize(uint256,uint256,uint256,InterestModel,address,address,address,uint256,address,bool)._interestModel](contracts/ConfigurableInterestVaultConfig.sol#L86) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/ConfigurableInterestVaultConfig.sol"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fc40d9e12c882ef26d6bb10fabfa3ec51a522e8d6c3ccba8f95455c6b6c4f07e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter VaultV3.initialize(IVaultConfig,address,string,string)._token (contracts/UniswapV3Vault.sol#165) is not in mixedCase\n",
            "markdown": "Parameter [VaultV3.initialize(IVaultConfig,address,string,string)._token](contracts/UniswapV3Vault.sol#L165) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/UniswapV3Vault.sol"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fce04ef449606f7615e060ebdd97383aa2b0cb81587a1d599ef3582b1520fd1c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter PortfolioConfig.initialize(address,address,address[],address[])._router (contracts/portfolio/PortfolioConfig.sol#33) is not in mixedCase\n",
            "markdown": "Parameter [PortfolioConfig.initialize(address,address,address[],address[])._router](contracts/portfolio/PortfolioConfig.sol#L33) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/PortfolioConfig.sol"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "febe70f9ce2c561903e87c2fdd374c126e766b457c52cda6d1935ee687cf4af3"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.MAX_INTEREST_SLOPE_1 (contracts/interest-models/TripleSlopeModel.sol#14) is too similar to TripleSlopeModel.MAX_INTEREST_SLOPE_2 (contracts/interest-models/TripleSlopeModel.sol#15)\n",
            "markdown": "Variable [TripleSlopeModel.MAX_INTEREST_SLOPE_1](contracts/interest-models/TripleSlopeModel.sol#L14) is too similar to [TripleSlopeModel.MAX_INTEREST_SLOPE_2](contracts/interest-models/TripleSlopeModel.sol#L15)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "04eb44afa98599bfda3f374acc7cd75d0dea8aabe7d084e1bddee0a6821347df"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#636)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L636)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "067b7485c05ef0c63b6dbe2f19aae03601d923ea02d619d2111a8eb838fed0e6"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired (contracts/libraries/OptimalSwap.sol#346)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired](contracts/libraries/OptimalSwap.sol#L346)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "08f79e37c15152232a4be80b2cec22cf16f873ca6ae0dbd5935ebc1814b9a518"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#666)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L666)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0a576e5f4c757ad8dc233d8c485e723186a93ff94cab76b0fc483c14ab0a7e1f"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).upperFeeGrowthOutside0X128 (contracts/libraries/PositionValue.sol#194) is too similar to PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).upperFeeGrowthOutside1X128 (contracts/libraries/PositionValue.sol#195)\n",
            "markdown": "Variable [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).upperFeeGrowthOutside0X128](contracts/libraries/PositionValue.sol#L194) is too similar to [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).upperFeeGrowthOutside1X128](contracts/libraries/PositionValue.sol#L195)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0d3ff4ad6ed17794948f86b7e860030a343b8e11cd3a0c7e0713dccdbc0b025c"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.MAX_INTEREST_SLOPE_1 (contracts/interest-models/TripleSlopeModel.sol#14) is too similar to TripleSlopeModel.MAX_INTEREST_SLOPE_3 (contracts/interest-models/TripleSlopeModel.sol#16)\n",
            "markdown": "Variable [TripleSlopeModel.MAX_INTEREST_SLOPE_1](contracts/interest-models/TripleSlopeModel.sol#L14) is too similar to [TripleSlopeModel.MAX_INTEREST_SLOPE_3](contracts/interest-models/TripleSlopeModel.sol#L16)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0d952e25331155951688dfc598dd396248a0ab9d419eb39ec88280a277d4de7a"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.MAX_INTEREST_SLOPE_2 (contracts/interest-models/TripleSlopeModel.sol#15) is too similar to TripleSlopeModel.MAX_INTEREST_SLOPE_3 (contracts/interest-models/TripleSlopeModel.sol#16)\n",
            "markdown": "Variable [TripleSlopeModel.MAX_INTEREST_SLOPE_2](contracts/interest-models/TripleSlopeModel.sol#L15) is too similar to [TripleSlopeModel.MAX_INTEREST_SLOPE_3](contracts/interest-models/TripleSlopeModel.sol#L16)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "12295ce13e1963ec200ca603bb75760d7c5a5773c70eefaa3dff151cf46bc27a"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired (contracts/libraries/OptimalSwap.sol#582)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired](contracts/libraries/OptimalSwap.sol#L582)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "17866a3ed1607b059e127a48aa5ac7927ce897c4a9ceb871137e23bf8806646b"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#666)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L666)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1942bd9741ff82a12abbfcfbbab86ea14f74da0139da85b17bfae933fde7cd92"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token0Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#102) is too similar to UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token1Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#177)\n",
            "markdown": "Variable [UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token0Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L102) is too similar to [UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token1Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L177)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1a36e0b62758f89acc2fe90c14cadd229cba87eec0626258434be39027af9f93"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token0Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#176) is too similar to UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token1Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#177)\n",
            "markdown": "Variable [UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token0Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L176) is too similar to [UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token1Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L177)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "265af31a0cb605a2796fda2d24688d3e3193b61c9ce7bac6e1c6d89cd85b4423"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#666)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L666)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "359297670af084d3640c34e2a55458b53f2abad326257751fded71d017b4bc87"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue.fees(INonfungiblePositionManager,uint256).positionFeeGrowthInside0LastX128 (contracts/libraries/PositionValue.sol#106) is too similar to PositionValue.fees(INonfungiblePositionManager,uint256).positionFeeGrowthInside1LastX128 (contracts/libraries/PositionValue.sol#107)\n",
            "markdown": "Variable [PositionValue.fees(INonfungiblePositionManager,uint256).positionFeeGrowthInside0LastX128](contracts/libraries/PositionValue.sol#L106) is too similar to [PositionValue.fees(INonfungiblePositionManager,uint256).positionFeeGrowthInside1LastX128](contracts/libraries/PositionValue.sol#L107)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 106,
                  "endLine": 106
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "388927941ea63955f868890cc58f5f73ae31738d636669258420c23bb1c1782e"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#27)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "39ecb90715b43453e3c49826a504a257d97f5b026be246bd7b88eecb2033ba4b"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired (contracts/libraries/OptimalSwap.sol#346)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired](contracts/libraries/OptimalSwap.sol#L346)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3e915623685ab914a968b2747bce4a48bd7f68fa4c0822047a1af9f5c6824ffd"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired (contracts/libraries/OptimalSwap.sol#582)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired](contracts/libraries/OptimalSwap.sol#L582)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "400e42bac4bf25f09515128161360d8ed285f87bca9c76710634dac331697ce5"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#27)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "41b62ca4063753ba1dbbfb416b0e139d15fa270e5a48ae8cc1f3e0e462b981b8"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.CEIL_SLOPE_1 (contracts/interest-models/TripleSlopeModel.sol#10) is too similar to TripleSlopeModel.CEIL_SLOPE_2 (contracts/interest-models/TripleSlopeModel.sol#11)\n",
            "markdown": "Variable [TripleSlopeModel.CEIL_SLOPE_1](contracts/interest-models/TripleSlopeModel.sol#L10) is too similar to [TripleSlopeModel.CEIL_SLOPE_2](contracts/interest-models/TripleSlopeModel.sol#L11)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "43624d7cbfa6d3b1f7dcec2500917ceec5464a80c2a790fff4966535048e8574"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#636)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L636)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "439d63e2cca0cb6097d2f362ea6efcdb9f9a0f77388e316aea9d546ea087fbad"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#90)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "444874025720e406d702a453ced7705a4ce1ffdbbe90d078a1b89897f50a4d77"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired (contracts/libraries/OptimalSwap.sol#582)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired](contracts/libraries/OptimalSwap.sol#L582)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "46e5724f0416f2c8ed81bdcaa447a02278c8cef8aff172c11be14fb01e4a3ad7"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired (contracts/libraries/OptimalSwap.sol#346)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired](contracts/libraries/OptimalSwap.sol#L346)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4aa930beed5bdf868be196d62da4348832ade8d04c02238ee0ba2f726670b0ec"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#90)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4f248b16db25f29e1064825fdc1a43cc3a272bfa53eee950634f513ffa5270c7"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue._fees(INonfungiblePositionManager,PositionValue.FeeParams).poolFeeGrowthInside0LastX128 (contracts/libraries/PositionValue.sol#135) is too similar to PositionValue._fees(INonfungiblePositionManager,PositionValue.FeeParams).poolFeeGrowthInside1LastX128 (contracts/libraries/PositionValue.sol#136)\n",
            "markdown": "Variable [PositionValue._fees(INonfungiblePositionManager,PositionValue.FeeParams).poolFeeGrowthInside0LastX128](contracts/libraries/PositionValue.sol#L135) is too similar to [PositionValue._fees(INonfungiblePositionManager,PositionValue.FeeParams).poolFeeGrowthInside1LastX128](contracts/libraries/PositionValue.sol#L136)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "54620101ee79bba4bb80f5518a0d6c5ed4af43cbbbbc63cd8d28384766331b67"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#666)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L666)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "58a455b18608fda29ab0aa7a2ced58de0781225c1d9f4ee84cd316cdb9700ec9"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#636)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L636)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5f98e36b66c41c346599ad8f7cfc93ebfa7bc4554a3404d785ce1610c706b1e0"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired (contracts/libraries/OptimalSwap.sol#346)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired](contracts/libraries/OptimalSwap.sol#L346)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "630ac04153e835b20489dcdf9bba755d521175890e7f6894cac0e5b0b31a3c4d"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired (contracts/libraries/OptimalSwap.sol#346)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount1Desired](contracts/libraries/OptimalSwap.sol#L346)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "77d328e966ea809c7e88c8c79d13e92b29d60444ae0ca0c480701a99c14b1c30"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token0Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#176) is too similar to UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token1Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#103)\n",
            "markdown": "Variable [UniswapV3AddBothTokenStrategy.mint(int24,int24,uint256).token0Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L176) is too similar to [UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token1Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L103)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7ee598f5a8c0b4ed868fab017bcf4655758f711e15db36562716b71e452e48f0"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#90)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "893bcc101ff1b8130f60bd3dff791aafb555b8120b1b553200ff73e80a2dc07c"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0LastTick (contracts/libraries/OptimalSwap.sol#168) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1LastTick (contracts/libraries/OptimalSwap.sol#170)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0LastTick](contracts/libraries/OptimalSwap.sol#L168) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1LastTick](contracts/libraries/OptimalSwap.sol#L170)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "947f4152369cc8acfe1fba9efd39d39adcba2f7d3511e367388ecc3eae6d5b0a"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.CEIL_SLOPE_1 (contracts/interest-models/TripleSlopeModel.sol#10) is too similar to TripleSlopeModel.CEIL_SLOPE_3 (contracts/interest-models/TripleSlopeModel.sol#12)\n",
            "markdown": "Variable [TripleSlopeModel.CEIL_SLOPE_1](contracts/interest-models/TripleSlopeModel.sol#L10) is too similar to [TripleSlopeModel.CEIL_SLOPE_3](contracts/interest-models/TripleSlopeModel.sol#L12)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "94bc48a129b5118c7a0f48f68449ba1a92cbd86475e997ceab010fbc004ef232"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#90)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "984d0bea5f3d9ab122ae27fcae73ac89daa3b582e6cbdbcff2ac81af2cdcb680"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).lowerFeeGrowthOutside0X128 (contracts/libraries/PositionValue.sol#184) is too similar to PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).lowerFeeGrowthOutside1X128 (contracts/libraries/PositionValue.sol#185)\n",
            "markdown": "Variable [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).lowerFeeGrowthOutside0X128](contracts/libraries/PositionValue.sol#L184) is too similar to [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).lowerFeeGrowthOutside1X128](contracts/libraries/PositionValue.sol#L185)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 184,
                  "endLine": 184
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9e34a510e2cc38ea5e2fa533492aef648c903a632c72f18b43ed9aae90f7bfa3"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#27)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a06e18c750bda14d56116053b8033a9f7138e6d036ef6590d5611a89c81bdfaa"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthGlobal0X128 (contracts/libraries/PositionValue.sol#211) is too similar to PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthGlobal1X128 (contracts/libraries/PositionValue.sol#212)\n",
            "markdown": "Variable [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthGlobal0X128](contracts/libraries/PositionValue.sol#L211) is too similar to [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthGlobal1X128](contracts/libraries/PositionValue.sol#L212)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 211,
                  "endLine": 211
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a2f1c3a962c44625d58c076aa69aeb3d16c40817fd9104dc2fb18b2edc31d20b"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#636)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L636)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a6cb16e811e4d57cab73521256336425ea30fa4a6f92480571892d926e971fbf"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address).amount0Desired (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#295) is too similar to UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address).amount1Desired (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#296)\n",
            "markdown": "Variable [UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address).amount0Desired](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L295) is too similar to [UniswapV3AddBothTokenStrategy._mint(address,address,uint24,int24,int24,uint128,uint128,address).amount1Desired](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L296)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 295,
                  "endLine": 295
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b664ed159bffd5535c6f7edcc4992e5ee520050bf11b17ca21659f91a2eb7c20"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TripleSlopeModel.CEIL_SLOPE_2 (contracts/interest-models/TripleSlopeModel.sol#11) is too similar to TripleSlopeModel.CEIL_SLOPE_3 (contracts/interest-models/TripleSlopeModel.sol#12)\n",
            "markdown": "Variable [TripleSlopeModel.CEIL_SLOPE_2](contracts/interest-models/TripleSlopeModel.sol#L11) is too similar to [TripleSlopeModel.CEIL_SLOPE_3](contracts/interest-models/TripleSlopeModel.sol#L12)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/interest-models/TripleSlopeModel.sol"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bc42066fc99e3b85d1a0b2e440ad5856c8d8ef552f79904342130b43d45a8e66"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#27)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bcb75a1fb2b4e2b4995e4befcf0c98e43c9b47f032c376327cb4b1b57693559c"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#635) is too similar to OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#27)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L635) is too similar to [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 635,
                  "endLine": 635
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bed6ad688e49812160f55c5a8dbe6343fdfafc1e10e4cc9355959acc2ff729dc"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token0Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#102) is too similar to UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token1Amount (contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#103)\n",
            "markdown": "Variable [UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token0Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L102) is too similar to [UniswapV3AddBothTokenStrategy.execute(address,address,uint256,bytes).token1Amount](contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol#L103)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBothTokenStrategy.sol"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c21ebfa059bf6c494bfeb286f3369870a9f3c2f041c481cb889409d6a5bd6190"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable DynamicPortfolio.rebalance(uint256[]).vault_scope_2 (contracts/portfolio/DynamicPortfolio.sol#89) is too similar to DynamicPortfolio.rebalance(uint256[]).vault_scope_4 (contracts/portfolio/DynamicPortfolio.sol#131)\n",
            "markdown": "Variable [DynamicPortfolio.rebalance(uint256[]).vault_scope_2](contracts/portfolio/DynamicPortfolio.sol#L89) is too similar to [DynamicPortfolio.rebalance(uint256[]).vault_scope_4](contracts/portfolio/DynamicPortfolio.sol#L131)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c599a7a224543b18f219a5093fe3e239cc0d93e89ee7d7dfb3de811824dc03c0"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired (contracts/libraries/OptimalSwap.sol#344) is too similar to OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#90)\n",
            "markdown": "Variable [OptimalSwap.crossTicks(V3PoolCallee,OptimalSwap.SwapState,uint160,bool).amount0Desired](contracts/libraries/OptimalSwap.sol#L344) is too similar to [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L90)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cbbdf4b560fc3eee5c8105f685585027acd8fcbfd67ded95db101e02cc45d888"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes).token0Amount (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#93) is too similar to UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes).token1Amount (contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#94)\n",
            "markdown": "Variable [UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes).token0Amount](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L93) is too similar to [UniswapV3AddBaseTokenStrategy.execute(address,address,uint256,bytes).token1Amount](contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol#L94)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/strategies/uniswapV3/UniswapV3AddBaseTokenStrategy.sol"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d1d3fd4f38f57ee46253298c4ac2aebf52833cb31398d7cf04424cc2d67240a5"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue.fees(INonfungiblePositionManager,uint256).tokensOwed0 (contracts/libraries/PositionValue.sol#108) is too similar to PositionValue.fees(INonfungiblePositionManager,uint256).tokensOwed1 (contracts/libraries/PositionValue.sol#109)\n",
            "markdown": "Variable [PositionValue.fees(INonfungiblePositionManager,uint256).tokensOwed0](contracts/libraries/PositionValue.sol#L108) is too similar to [PositionValue.fees(INonfungiblePositionManager,uint256).tokensOwed1](contracts/libraries/PositionValue.sol#L109)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d58d2ac1151a756fae05a65e3e1b2ac2f322e39eda8b5c70ee43c2c240994f80"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#636)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.isZeroForOneInRange(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L636)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d9c43796887bf73f220abf5b6816c0621f02756851bf1756647907e804c5cead"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthInside0X128 (contracts/libraries/PositionValue.sol#178) is too similar to PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthInside1X128 (contracts/libraries/PositionValue.sol#178)\n",
            "markdown": "Variable [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthInside0X128](contracts/libraries/PositionValue.sol#L178) is too similar to [PositionValue._getFeeGrowthInside(IUniswapV3Pool,int24,int24).feeGrowthInside1X128](contracts/libraries/PositionValue.sol#L178)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 178,
                  "endLine": 178
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "daeccf2a2a24329b37d89398bcb0a986964a9533e34df90d2a0b2b584134d255"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#26) is too similar to OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired (contracts/libraries/OptimalSwap.sol#666)\n",
            "markdown": "Variable [OptimalSwap.optimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L26) is too similar to [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount1Desired](contracts/libraries/OptimalSwap.sol#L666)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e0d32ae14849a78ae76a03193c8ae0d2d5c970f1eb55d8aea60dbd1a26ad61e3"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable PositionValue.total(INonfungiblePositionManager,uint256,uint160).amount0Principal (contracts/libraries/PositionValue.sol#27) is too similar to PositionValue.total(INonfungiblePositionManager,uint256,uint160).amount1Principal (contracts/libraries/PositionValue.sol#27)\n",
            "markdown": "Variable [PositionValue.total(INonfungiblePositionManager,uint256,uint160).amount0Principal](contracts/libraries/PositionValue.sol#L27) is too similar to [PositionValue.total(INonfungiblePositionManager,uint256,uint160).amount1Principal](contracts/libraries/PositionValue.sol#L27)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/PositionValue.sol"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e6461ad27708bd4a14973677be3e6d0850cb2b50a134ed4f5431b7dc7e64e26c"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#89) is too similar to OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired (contracts/libraries/OptimalSwap.sol#582)\n",
            "markdown": "Variable [OptimalSwap.getOptimalSwap(V3PoolCallee,int24,int24,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L89) is too similar to [OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired](contracts/libraries/OptimalSwap.sol#L582)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e9c3f3b8ec318c9cbc5597dbf0e4e1904674626bf67c44a6aa71f9596c242366"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired (contracts/libraries/OptimalSwap.sol#665) is too similar to OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired (contracts/libraries/OptimalSwap.sol#582)\n",
            "markdown": "Variable [OptimalSwap.isZeroForOne(uint256,uint256,uint256,uint256,uint256).amount0Desired](contracts/libraries/OptimalSwap.sol#L665) is too similar to [OptimalSwap.solveOptimalOneForZero(OptimalSwap.SwapState).amount1Desired](contracts/libraries/OptimalSwap.sol#L582)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/libraries/OptimalSwap.sol"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f87723be1fa6818b37885ad8c53fc112a1784e6d2ee4e3216ba121ef884fc20f"
          }
        },
        {
          "ruleId": "3-0-unused-state",
          "message": {
            "text": "UniswapV3Farm.NEXT_OFFSET (contracts/farms/uniswapV3/UniswapV3Farm.sol#80) is never used in UniswapV3Farm (contracts/farms/uniswapV3/UniswapV3Farm.sol#23-859)\n",
            "markdown": "[UniswapV3Farm.NEXT_OFFSET](contracts/farms/uniswapV3/UniswapV3Farm.sol#L80) is never used in [UniswapV3Farm](contracts/farms/uniswapV3/UniswapV3Farm.sol#L23-L859)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "72efd079821b1f8b6671a7b7f0a5952eda4026e997c07c281a37c6e5175a9acf"
          }
        },
        {
          "ruleId": "4-0-constable-states",
          "message": {
            "text": "DynamicPortfolio.lastRebalanceTime (contracts/portfolio/DynamicPortfolio.sol#16) should be constant \n",
            "markdown": "[DynamicPortfolio.lastRebalanceTime](contracts/portfolio/DynamicPortfolio.sol#L16) should be constant \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/portfolio/DynamicPortfolio.sol"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2d38c98176566c9ab9635cfbd40bc0ef63a2179c215065ef13ad7e4f596676f5"
          }
        },
        {
          "ruleId": "4-0-constable-states",
          "message": {
            "text": "UniswapV3Farm.lastRebalanceTime (contracts/farms/uniswapV3/UniswapV3Farm.sol#72) should be constant \n",
            "markdown": "[UniswapV3Farm.lastRebalanceTime](contracts/farms/uniswapV3/UniswapV3Farm.sol#L72) should be constant \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/farms/uniswapV3/UniswapV3Farm.sol"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "51460c6b1a3b37f90df47dacccc20db643d1c47050a9fea733d995f1907f543d"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.positionId (contracts/tests/UniswapV3FarmTest.sol#22) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.positionId](contracts/tests/UniswapV3FarmTest.sol#L22) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1ed3dbfe5f6cb85acaab2a3a81f484daef2a2d2158099bb01a0b08aa8cd807e0"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.router (contracts/tests/UniswapV3FarmTest.sol#15) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.router](contracts/tests/UniswapV3FarmTest.sol#L15) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "530e1be02d219200b664e0b4d26572f9f80066f1bb9ea5e67a90b7cff28a6435"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.factory (contracts/tests/UniswapV3FarmTest.sol#14) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.factory](contracts/tests/UniswapV3FarmTest.sol#L14) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "557cc17276af788d913ea2af5772067913b371d13f2676860411c537a68c2acc"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.farmingToken (contracts/tests/UniswapV3FarmTest.sol#20) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.farmingToken](contracts/tests/UniswapV3FarmTest.sol#L20) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "581b36a90e0f77546679ec9b8ad62bfd1aa7ae0706ce85010173696b9da9589f"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.positionManager (contracts/tests/UniswapV3FarmTest.sol#17) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.positionManager](contracts/tests/UniswapV3FarmTest.sol#L17) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7e341393bec0b687620ce8da9079a3b815ac0b70bc3541588ec4fd0f5db9e851"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "WNativeRelayer.wnative (contracts/WNativeRelayer.sol#14) should be immutable \n",
            "markdown": "[WNativeRelayer.wnative](contracts/WNativeRelayer.sol#L14) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/WNativeRelayer.sol"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "81f8ffea5194c2b04d9acbd9dcf16b40570f0d2f0855e610b0b2988d32d58475"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.baseToken (contracts/tests/UniswapV3FarmTest.sol#19) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.baseToken](contracts/tests/UniswapV3FarmTest.sol#L19) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "911be01b9121ff52b6b757ba25187ad9a77325ef2297205215f6ec0df4eb8d0f"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.fee (contracts/tests/UniswapV3FarmTest.sol#21) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.fee](contracts/tests/UniswapV3FarmTest.sol#L21) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "99963f8b90341bafef1aa89f390ef661f609805bcb04b66e42db94893f0c9382"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.pair (contracts/tests/UniswapV3FarmTest.sol#18) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.pair](contracts/tests/UniswapV3FarmTest.sol#L18) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b798c22b297f7e76ef29faab131f6aa6d4e28b28bc7eb244cf13d6a465ae5504"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "BeneficialVaultTest.token (contracts/tests/BeneficialVaultTest.sol#6) should be immutable \n",
            "markdown": "[BeneficialVaultTest.token](contracts/tests/BeneficialVaultTest.sol#L6) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/BeneficialVaultTest.sol"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bacce268e2c30db77bfee8a4504827b5abfb6fea5cdc707fbdddd23c31ae27e1"
          }
        },
        {
          "ruleId": "4-0-immutable-states",
          "message": {
            "text": "UniswapV3FarmTest.quoter (contracts/tests/UniswapV3FarmTest.sol#16) should be immutable \n",
            "markdown": "[UniswapV3FarmTest.quoter](contracts/tests/UniswapV3FarmTest.sol#L16) should be immutable \n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/tests/UniswapV3FarmTest.sol"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "dd0b1e12b359658cde89141b38ea0e0d22ce8159993b125228956fbfaf0eb0c9"
          }
        }
      ]
    }
  ]
}